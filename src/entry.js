(function () {
    const e = document.createElement('link').relList;
    if (e && e.supports && e.supports('modulepreload')) return;
    for (const i of document.querySelectorAll('link[rel="modulepreload"]'))
        n(i);
    new MutationObserver((i) => {
        for (const s of i)
            if (s.type === 'childList')
                for (const r of s.addedNodes)
                    r.tagName === 'LINK' && r.rel === 'modulepreload' && n(r);
    }).observe(document, { childList: !0, subtree: !0 });
    function t(i) {
        const s = {};
        return (
            i.integrity && (s.integrity = i.integrity),
            i.referrerPolicy && (s.referrerPolicy = i.referrerPolicy),
            i.crossOrigin === 'use-credentials' ? (s.credentials = 'include')
            : i.crossOrigin === 'anonymous' ? (s.credentials = 'omit')
            : (s.credentials = 'same-origin'),
            s
        );
    }
    function n(i) {
        if (i.ep) return;
        i.ep = !0;
        const s = t(i);
        fetch(i.href, s);
    }
})();
function Le() {}
const mf = (o) => o;
function bf(o) {
    return (
        !!o &&
        (typeof o == 'object' || typeof o == 'function') &&
        typeof o.then == 'function'
    );
}
function ru(o) {
    return o();
}
function pa() {
    return Object.create(null);
}
function ot(o) {
    o.forEach(ru);
}
function xr(o) {
    return typeof o == 'function';
}
function Ct(o, e) {
    return o != o ?
            e == e
        :   o !== e || (o && typeof o == 'object') || typeof o == 'function';
}
function wf(o) {
    return Object.keys(o).length === 0;
}
function lu(o, ...e) {
    if (o == null) {
        for (const n of e) n(void 0);
        return Le;
    }
    const t = o.subscribe(...e);
    return t.unsubscribe ? () => t.unsubscribe() : t;
}
function _t(o) {
    let e;
    return lu(o, (t) => (e = t))(), e;
}
function $e(o, e, t) {
    o.$$.on_destroy.push(lu(e, t));
}
function ee(o, e, t) {
    return o.set(t), e;
}
function ht(o) {
    return o && xr(o.destroy) ? o.destroy : Le;
}
function yf(o) {
    const e = typeof o == 'string' && o.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
    return e ? [parseFloat(e[1]), e[2] || 'px'] : [o, 'px'];
}
const au = typeof window < 'u';
let vf = au ? () => window.performance.now() : () => Date.now(),
    Sl = au ? (o) => requestAnimationFrame(o) : Le;
const Ai = new Set();
function cu(o) {
    Ai.forEach((e) => {
        e.c(o) || (Ai.delete(e), e.f());
    }),
        Ai.size !== 0 && Sl(cu);
}
function kf(o) {
    let e;
    return (
        Ai.size === 0 && Sl(cu),
        {
            promise: new Promise((t) => {
                Ai.add((e = { c: o, f: t }));
            }),
            abort() {
                Ai.delete(e);
            },
        }
    );
}
function d(o, e) {
    o.appendChild(e);
}
function hu(o) {
    if (!o) return document;
    const e = o.getRootNode ? o.getRootNode() : o.ownerDocument;
    return e && e.host ? e : o.ownerDocument;
}
function _f(o) {
    const e = f('style');
    return (e.textContent = '/* empty */'), xf(hu(o), e), e.sheet;
}
function xf(o, e) {
    return d(o.head || o, e), e.sheet;
}
function C(o, e, t) {
    o.insertBefore(e, t || null);
}
function x(o) {
    o.parentNode && o.parentNode.removeChild(o);
}
function He(o, e) {
    for (let t = 0; t < o.length; t += 1) o[t] && o[t].d(e);
}
function f(o) {
    return document.createElement(o);
}
function cn(o) {
    return document.createElementNS('http://www.w3.org/2000/svg', o);
}
function Y(o) {
    return document.createTextNode(o);
}
function v() {
    return Y(' ');
}
function yt() {
    return Y('');
}
function R(o, e, t, n) {
    return o.addEventListener(e, t, n), () => o.removeEventListener(e, t, n);
}
function g(o, e, t) {
    t == null ?
        o.removeAttribute(e)
    :   o.getAttribute(e) !== t && o.setAttribute(e, t);
}
function Do(o) {
    return o === '' ? null : +o;
}
function Cf(o) {
    return Array.from(o.childNodes);
}
function Ee(o, e) {
    (e = '' + e), o.data !== e && (o.data = e);
}
function j(o, e) {
    o.value = e ?? '';
}
function Z(o, e, t, n) {
    t == null ? o.style.removeProperty(e) : o.style.setProperty(e, t, '');
}
function Bt(o, e, t) {
    for (let n = 0; n < o.options.length; n += 1) {
        const i = o.options[n];
        if (i.__value === e) {
            i.selected = !0;
            return;
        }
    }
    (!t || e !== void 0) && (o.selectedIndex = -1);
}
function zn(o) {
    const e = o.querySelector(':checked');
    return e && e.__value;
}
function St(o, e, t) {
    o.classList.toggle(e, !!t);
}
function du(o, e, { bubbles: t = !1, cancelable: n = !1 } = {}) {
    return new CustomEvent(o, { detail: e, bubbles: t, cancelable: n });
}
class uu {
    is_svg = !1;
    e = void 0;
    n = void 0;
    t = void 0;
    a = void 0;
    constructor(e = !1) {
        (this.is_svg = e), (this.e = this.n = null);
    }
    c(e) {
        this.h(e);
    }
    m(e, t, n = null) {
        this.e ||
            (this.is_svg ?
                (this.e = cn(t.nodeName))
            :   (this.e = f(t.nodeType === 11 ? 'TEMPLATE' : t.nodeName)),
            (this.t = t.tagName !== 'TEMPLATE' ? t : t.content),
            this.c(e)),
            this.i(n);
    }
    h(e) {
        (this.e.innerHTML = e),
            (this.n = Array.from(
                this.e.nodeName === 'TEMPLATE' ?
                    this.e.content.childNodes
                :   this.e.childNodes,
            ));
    }
    i(e) {
        for (let t = 0; t < this.n.length; t += 1) C(this.t, this.n[t], e);
    }
    p(e) {
        this.d(), this.h(e), this.i(this.a);
    }
    d() {
        this.n.forEach(x);
    }
}
function fa(o, e) {
    return new o(e);
}
const rr = new Map();
let lr = 0;
function Ef(o) {
    let e = 5381,
        t = o.length;
    for (; t--; ) e = ((e << 5) - e) ^ o.charCodeAt(t);
    return e >>> 0;
}
function Tf(o, e) {
    const t = { stylesheet: _f(e), rules: {} };
    return rr.set(o, t), t;
}
function ga(o, e, t, n, i, s, r, l = 0) {
    const a = 16.666 / n;
    let c = `{
`;
    for (let y = 0; y <= 1; y += a) {
        const w = e + (t - e) * s(y);
        c +=
            y * 100 +
            `%{${r(w, 1 - w)}}
`;
    }
    const h =
            c +
            `100% {${r(t, 1 - t)}}
}`,
        u = `__svelte_${Ef(h)}_${l}`,
        p = hu(o),
        { stylesheet: b, rules: m } = rr.get(p) || Tf(p, o);
    m[u] ||
        ((m[u] = !0), b.insertRule(`@keyframes ${u} ${h}`, b.cssRules.length));
    const k = o.style.animation || '';
    return (
        (o.style.animation = `${k ? `${k}, ` : ''}${u} ${n}ms linear ${i}ms 1 both`),
        (lr += 1),
        u
    );
}
function Sf(o, e) {
    const t = (o.style.animation || '').split(', '),
        n = t.filter(
            e ? (s) => s.indexOf(e) < 0 : (s) => s.indexOf('__svelte') === -1,
        ),
        i = t.length - n.length;
    i && ((o.style.animation = n.join(', ')), (lr -= i), lr || Bf());
}
function Bf() {
    Sl(() => {
        lr ||
            (rr.forEach((o) => {
                const { ownerNode: e } = o.stylesheet;
                e && x(e);
            }),
            rr.clear());
    });
}
let Is;
function bo(o) {
    Is = o;
}
function Cr() {
    if (!Is)
        throw new Error('Function called outside component initialization');
    return Is;
}
function If(o) {
    Cr().$$.on_mount.push(o);
}
function Lf(o) {
    Cr().$$.on_destroy.push(o);
}
function ji() {
    const o = Cr();
    return (e, t, { cancelable: n = !1 } = {}) => {
        const i = o.$$.callbacks[e];
        if (i) {
            const s = du(e, t, { cancelable: n });
            return (
                i.slice().forEach((r) => {
                    r.call(o, s);
                }),
                !s.defaultPrevented
            );
        }
        return !0;
    };
}
const ki = [],
    Un = [];
let Oi = [];
const Qr = [],
    Af = Promise.resolve();
let el = !1;
function Of() {
    el || ((el = !0), Af.then(Bl));
}
function Pt(o) {
    Oi.push(o);
}
function ko(o) {
    Qr.push(o);
}
const Ir = new Set();
let yi = 0;
function Bl() {
    if (yi !== 0) return;
    const o = Is;
    do {
        try {
            for (; yi < ki.length; ) {
                const e = ki[yi];
                yi++, bo(e), Mf(e.$$);
            }
        } catch (e) {
            throw ((ki.length = 0), (yi = 0), e);
        }
        for (bo(null), ki.length = 0, yi = 0; Un.length; ) Un.pop()();
        for (let e = 0; e < Oi.length; e += 1) {
            const t = Oi[e];
            Ir.has(t) || (Ir.add(t), t());
        }
        Oi.length = 0;
    } while (ki.length);
    for (; Qr.length; ) Qr.pop()();
    (el = !1), Ir.clear(), bo(o);
}
function Mf(o) {
    if (o.fragment !== null) {
        o.update(), ot(o.before_update);
        const e = o.dirty;
        (o.dirty = [-1]),
            o.fragment && o.fragment.p(o.ctx, e),
            o.after_update.forEach(Pt);
    }
}
function Pf(o) {
    const e = [],
        t = [];
    Oi.forEach((n) => (o.indexOf(n) === -1 ? e.push(n) : t.push(n))),
        t.forEach((n) => n()),
        (Oi = e);
}
let us;
function Nf() {
    return (
        us ||
            ((us = Promise.resolve()),
            us.then(() => {
                us = null;
            })),
        us
    );
}
function Lr(o, e, t) {
    o.dispatchEvent(du(`${e ? 'intro' : 'outro'}${t}`));
}
const Ks = new Set();
let wo;
function Wt() {
    wo = { r: 0, c: [], p: wo };
}
function Gt() {
    wo.r || ot(wo.c), (wo = wo.p);
}
function Ce(o, e) {
    o && o.i && (Ks.delete(o), o.i(e));
}
function Oe(o, e, t, n) {
    if (o && o.o) {
        if (Ks.has(o)) return;
        Ks.add(o),
            wo.c.push(() => {
                Ks.delete(o), n && (t && o.d(1), n());
            }),
            o.o(e);
    } else n && n();
}
const Rf = { duration: 0 };
function vn(o, e, t, n) {
    let s = e(o, t, { direction: 'both' }),
        r = n ? 0 : 1,
        l = null,
        a = null,
        c = null,
        h;
    function u() {
        c && Sf(o, c);
    }
    function p(m, k) {
        const y = m.b - r;
        return (
            (k *= Math.abs(y)),
            {
                a: r,
                b: m.b,
                d: y,
                duration: k,
                start: m.start,
                end: m.start + k,
                group: m.group,
            }
        );
    }
    function b(m) {
        const {
                delay: k = 0,
                duration: y = 300,
                easing: w = mf,
                tick: E = Le,
                css: _,
            } = s || Rf,
            B = { start: vf() + k, b: m };
        m || ((B.group = wo), (wo.r += 1)),
            'inert' in o &&
                (m ?
                    h !== void 0 && (o.inert = h)
                :   ((h = o.inert), (o.inert = !0))),
            l || a ?
                (a = B)
            :   (_ && (u(), (c = ga(o, r, m, y, k, w, _))),
                m && E(0, 1),
                (l = p(B, y)),
                Pt(() => Lr(o, m, 'start')),
                kf((O) => {
                    if (
                        (a &&
                            O > a.start &&
                            ((l = p(a, y)),
                            (a = null),
                            Lr(o, l.b, 'start'),
                            _ &&
                                (u(),
                                (c = ga(o, r, l.b, l.duration, 0, w, s.css)))),
                        l)
                    ) {
                        if (O >= l.end)
                            E((r = l.b), 1 - r),
                                Lr(o, l.b, 'end'),
                                a || (l.b ? u() : --l.group.r || ot(l.group.c)),
                                (l = null);
                        else if (O >= l.start) {
                            const P = O - l.start;
                            (r = l.a + l.d * w(P / l.duration)), E(r, 1 - r);
                        }
                    }
                    return !!(l || a);
                }));
    }
    return {
        run(m) {
            xr(s) ?
                Nf().then(() => {
                    (s = s({ direction: m ? 'in' : 'out' })), b(m);
                })
            :   b(m);
        },
        end() {
            u(), (l = a = null);
        },
    };
}
function ma(o, e) {
    const t = (e.token = {});
    function n(i, s, r, l) {
        if (e.token !== t) return;
        e.resolved = l;
        let a = e.ctx;
        r !== void 0 && ((a = a.slice()), (a[r] = l));
        const c = i && (e.current = i)(a);
        let h = !1;
        e.block &&
            (e.blocks ?
                e.blocks.forEach((u, p) => {
                    p !== s &&
                        u &&
                        (Wt(),
                        Oe(u, 1, 1, () => {
                            e.blocks[p] === u && (e.blocks[p] = null);
                        }),
                        Gt());
                })
            :   e.block.d(1),
            c.c(),
            Ce(c, 1),
            c.m(e.mount(), e.anchor),
            (h = !0)),
            (e.block = c),
            e.blocks && (e.blocks[s] = c),
            h && Bl();
    }
    if (bf(o)) {
        const i = Cr();
        if (
            (o.then(
                (s) => {
                    bo(i), n(e.then, 1, e.value, s), bo(null);
                },
                (s) => {
                    if (
                        (bo(i),
                        n(e.catch, 2, e.error, s),
                        bo(null),
                        !e.hasCatch)
                    )
                        throw s;
                },
            ),
            e.current !== e.pending)
        )
            return n(e.pending, 0), !0;
    } else {
        if (e.current !== e.then) return n(e.then, 1, e.value, o), !0;
        e.resolved = o;
    }
}
function Df(o, e, t) {
    const n = e.slice(),
        { resolved: i } = o;
    o.current === o.then && (n[o.value] = i),
        o.current === o.catch && (n[o.error] = i),
        o.block.p(n, t);
}
function he(o) {
    return o?.length !== void 0 ? o : Array.from(o);
}
function _o(o, e, t) {
    const n = o.$$.props[e];
    n !== void 0 && ((o.$$.bound[n] = t), t(o.$$.ctx[n]));
}
function qt(o) {
    o && o.c();
}
function jt(o, e, t) {
    const { fragment: n, after_update: i } = o.$$;
    n && n.m(e, t),
        Pt(() => {
            const s = o.$$.on_mount.map(ru).filter(xr);
            o.$$.on_destroy ? o.$$.on_destroy.push(...s) : ot(s),
                (o.$$.on_mount = []);
        }),
        i.forEach(Pt);
}
function $t(o, e) {
    const t = o.$$;
    t.fragment !== null &&
        (Pf(t.after_update),
        ot(t.on_destroy),
        t.fragment && t.fragment.d(e),
        (t.on_destroy = t.fragment = null),
        (t.ctx = []));
}
function Ff(o, e) {
    o.$$.dirty[0] === -1 && (ki.push(o), Of(), o.$$.dirty.fill(0)),
        (o.$$.dirty[(e / 31) | 0] |= 1 << e % 31);
}
function Nt(o, e, t, n, i, s, r = null, l = [-1]) {
    const a = Is;
    bo(o);
    const c = (o.$$ = {
        fragment: null,
        ctx: [],
        props: s,
        update: Le,
        not_equal: i,
        bound: pa(),
        on_mount: [],
        on_destroy: [],
        on_disconnect: [],
        before_update: [],
        after_update: [],
        context: new Map(e.context || (a ? a.$$.context : [])),
        callbacks: pa(),
        dirty: l,
        skip_bound: !1,
        root: e.target || a.$$.root,
    });
    r && r(c.root);
    let h = !1;
    if (
        ((c.ctx =
            t ?
                t(o, e.props || {}, (u, p, ...b) => {
                    const m = b.length ? b[0] : p;
                    return (
                        c.ctx &&
                            i(c.ctx[u], (c.ctx[u] = m)) &&
                            (!c.skip_bound && c.bound[u] && c.bound[u](m),
                            h && Ff(o, u)),
                        p
                    );
                })
            :   []),
        c.update(),
        (h = !0),
        ot(c.before_update),
        (c.fragment = n ? n(c.ctx) : !1),
        e.target)
    ) {
        if (e.hydrate) {
            const u = Cf(e.target);
            c.fragment && c.fragment.l(u), u.forEach(x);
        } else c.fragment && c.fragment.c();
        e.intro && Ce(o.$$.fragment), jt(o, e.target, e.anchor), Bl();
    }
    bo(a);
}
class Rt {
    $$ = void 0;
    $$set = void 0;
    $destroy() {
        $t(this, 1), (this.$destroy = Le);
    }
    $on(e, t) {
        if (!xr(t)) return Le;
        const n = this.$$.callbacks[e] || (this.$$.callbacks[e] = []);
        return (
            n.push(t),
            () => {
                const i = n.indexOf(t);
                i !== -1 && n.splice(i, 1);
            }
        );
    }
    $set(e) {
        this.$$set &&
            !wf(e) &&
            ((this.$$.skip_bound = !0),
            this.$$set(e),
            (this.$$.skip_bound = !1));
    }
}
const Hf = '4';
typeof window < 'u' &&
    (window.__svelte || (window.__svelte = { v: new Set() })).v.add(Hf);
const vi = [];
function sn(o, e = Le) {
    let t;
    const n = new Set();
    function i(l) {
        if (Ct(o, l) && ((o = l), t)) {
            const a = !vi.length;
            for (const c of n) c[1](), vi.push(c, o);
            if (a) {
                for (let c = 0; c < vi.length; c += 2) vi[c][0](vi[c + 1]);
                vi.length = 0;
            }
        }
    }
    function s(l) {
        i(l(o));
    }
    function r(l, a = Le) {
        const c = [l, a];
        return (
            n.add(c),
            n.size === 1 && (t = e(i, s) || Le),
            l(o),
            () => {
                n.delete(c), n.size === 0 && t && (t(), (t = null));
            }
        );
    }
    return { set: i, update: s, subscribe: r };
}
(function () {
    try {
        if (typeof document < 'u') {
            var o = document.createElement('style');
            o.appendChild(
                document.createTextNode(
                    '.ce-hint--align-start{text-align:left}.ce-hint--align-center{text-align:center}.ce-hint__description{opacity:.6;margin-top:3px}',
                ),
            ),
                document.head.appendChild(o);
        }
    } catch (e) {
        console.error('vite-plugin-css-injected-by-js', e);
    }
})();
var zf =
    typeof globalThis < 'u' ? globalThis
    : typeof window < 'u' ? window
    : typeof global < 'u' ? global
    : typeof self < 'u' ? self
    : {};
function Er(o) {
    return (
            o &&
                o.__esModule &&
                Object.prototype.hasOwnProperty.call(o, 'default')
        ) ?
            o.default
        :   o;
}
function Ar() {}
Object.assign(Ar, {
    default: Ar,
    register: Ar,
    revert: function () {},
    __esModule: !0,
});
Element.prototype.matches ||
    (Element.prototype.matches =
        Element.prototype.matchesSelector ||
        Element.prototype.mozMatchesSelector ||
        Element.prototype.msMatchesSelector ||
        Element.prototype.oMatchesSelector ||
        Element.prototype.webkitMatchesSelector ||
        function (o) {
            const e = (this.document || this.ownerDocument).querySelectorAll(o);
            let t = e.length;
            for (; --t >= 0 && e.item(t) !== this; );
            return t > -1;
        });
Element.prototype.closest ||
    (Element.prototype.closest = function (o) {
        let e = this;
        if (!document.documentElement.contains(e)) return null;
        do {
            if (e.matches(o)) return e;
            e = e.parentElement || e.parentNode;
        } while (e !== null);
        return null;
    });
Element.prototype.prepend ||
    (Element.prototype.prepend = function (o) {
        const e = document.createDocumentFragment();
        Array.isArray(o) || (o = [o]),
            o.forEach((t) => {
                const n = t instanceof Node;
                e.appendChild(n ? t : document.createTextNode(t));
            }),
            this.insertBefore(e, this.firstChild);
    });
Element.prototype.scrollIntoViewIfNeeded ||
    (Element.prototype.scrollIntoViewIfNeeded = function (o) {
        o = arguments.length === 0 ? !0 : !!o;
        const e = this.parentNode,
            t = window.getComputedStyle(e, null),
            n = parseInt(t.getPropertyValue('border-top-width')),
            i = parseInt(t.getPropertyValue('border-left-width')),
            s = this.offsetTop - e.offsetTop < e.scrollTop,
            r =
                this.offsetTop - e.offsetTop + this.clientHeight - n >
                e.scrollTop + e.clientHeight,
            l = this.offsetLeft - e.offsetLeft < e.scrollLeft,
            a =
                this.offsetLeft - e.offsetLeft + this.clientWidth - i >
                e.scrollLeft + e.clientWidth,
            c = s && !r;
        (s || r) &&
            o &&
            (e.scrollTop =
                this.offsetTop -
                e.offsetTop -
                e.clientHeight / 2 -
                n +
                this.clientHeight / 2),
            (l || a) &&
                o &&
                (e.scrollLeft =
                    this.offsetLeft -
                    e.offsetLeft -
                    e.clientWidth / 2 -
                    i +
                    this.clientWidth / 2),
            (s || r || l || a) && !o && this.scrollIntoView(c);
    });
window.requestIdleCallback =
    window.requestIdleCallback ||
    function (o) {
        const e = Date.now();
        return setTimeout(function () {
            o({
                didTimeout: !1,
                timeRemaining: function () {
                    return Math.max(0, 50 - (Date.now() - e));
                },
            });
        }, 1);
    };
window.cancelIdleCallback =
    window.cancelIdleCallback ||
    function (o) {
        clearTimeout(o);
    };
let Uf = (o = 21) =>
    crypto.getRandomValues(new Uint8Array(o)).reduce(
        (e, t) => (
            (t &= 63),
            t < 36 ? (e += t.toString(36))
            : t < 62 ? (e += (t - 26).toString(36).toUpperCase())
            : t > 62 ? (e += '-')
            : (e += '_'),
            e
        ),
        '',
    );
var pu = ((o) => (
    (o.VERBOSE = 'VERBOSE'),
    (o.INFO = 'INFO'),
    (o.WARN = 'WARN'),
    (o.ERROR = 'ERROR'),
    o
))(pu || {});
const Ve = {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        ESC: 27,
        SPACE: 32,
        LEFT: 37,
        UP: 38,
        DOWN: 40,
        RIGHT: 39,
        DELETE: 46,
        META: 91,
        SLASH: 191,
    },
    jf = { LEFT: 0, WHEEL: 1, RIGHT: 2, BACKWARD: 3, FORWARD: 4 };
function Ns(o, e, t = 'log', n, i = 'color: inherit') {
    if (!('console' in window) || !window.console[t]) return;
    const s = ['info', 'log', 'warn', 'error'].includes(t),
        r = [];
    switch (Ns.logLevel) {
        case 'ERROR':
            if (t !== 'error') return;
            break;
        case 'WARN':
            if (!['error', 'warn'].includes(t)) return;
            break;
        case 'INFO':
            if (!s || o) return;
            break;
    }
    n && r.push(n);
    const l = 'Editor.js 2.30.5';
    o &&
        (s ?
            (r.unshift(
                `line-height: 1em;
            color: #006FEA;
            display: inline-block;
            font-size: 11px;
            line-height: 1em;
            background-color: #fff;
            padding: 4px 9px;
            border-radius: 30px;
            border: 1px solid rgba(56, 138, 229, 0.16);
            margin: 4px 5px 4px 0;`,
                i,
            ),
            (e = `%c${l}%c ${e}`))
        :   (e = `( ${l} )${e}`));
    try {
        s ?
            n ? console[t](`${e} %o`, ...r)
            :   console[t](e, ...r)
        :   console[t](e);
    } catch {}
}
Ns.logLevel = 'VERBOSE';
function $f(o) {
    Ns.logLevel = o;
}
const pt = Ns.bind(window, !1),
    Dn = Ns.bind(window, !0);
function ci(o) {
    return Object.prototype.toString
        .call(o)
        .match(/\s([a-zA-Z]+)/)[1]
        .toLowerCase();
}
function Mt(o) {
    return ci(o) === 'function' || ci(o) === 'asyncfunction';
}
function tn(o) {
    return ci(o) === 'object';
}
function xo(o) {
    return ci(o) === 'string';
}
function Wf(o) {
    return ci(o) === 'boolean';
}
function ba(o) {
    return ci(o) === 'number';
}
function wa(o) {
    return ci(o) === 'undefined';
}
function jn(o) {
    return o ? Object.keys(o).length === 0 && o.constructor === Object : !0;
}
function fu(o) {
    return (
        (o > 47 && o < 58) ||
        o === 32 ||
        o === 13 ||
        o === 229 ||
        (o > 64 && o < 91) ||
        (o > 95 && o < 112) ||
        (o > 185 && o < 193) ||
        (o > 218 && o < 223)
    );
}
async function Gf(o, e = () => {}, t = () => {}) {
    async function n(i, s, r) {
        try {
            await i.function(i.data), await s(wa(i.data) ? {} : i.data);
        } catch {
            r(wa(i.data) ? {} : i.data);
        }
    }
    return o.reduce(async (i, s) => (await i, n(s, e, t)), Promise.resolve());
}
function gu(o) {
    return Array.prototype.slice.call(o);
}
function ar(o, e) {
    return function () {
        const t = this,
            n = arguments;
        window.setTimeout(() => o.apply(t, n), e);
    };
}
function qf(o) {
    return o.name.split('.').pop();
}
function Vf(o) {
    return /^[-\w]+\/([-+\w]+|\*)$/.test(o);
}
function ya(o, e, t) {
    let n;
    return (...i) => {
        const s = this,
            r = () => {
                (n = null), o.apply(s, i);
            };
        window.clearTimeout(n), (n = window.setTimeout(r, e));
    };
}
function tl(o, e, t = void 0) {
    let n,
        i,
        s,
        r = null,
        l = 0;
    t || (t = {});
    const a = function () {
        (l = t.leading === !1 ? 0 : Date.now()),
            (r = null),
            (s = o.apply(n, i)),
            r || (n = i = null);
    };
    return function () {
        const c = Date.now();
        !l && t.leading === !1 && (l = c);
        const h = e - (c - l);
        return (
            (n = this),
            (i = arguments),
            h <= 0 || h > e ?
                (r && (clearTimeout(r), (r = null)),
                (l = c),
                (s = o.apply(n, i)),
                r || (n = i = null))
            :   !r && t.trailing !== !1 && (r = setTimeout(a, h)),
            s
        );
    };
}
function Yf() {
    const o = { win: !1, mac: !1, x11: !1, linux: !1 },
        e = Object.keys(o).find(
            (t) => window.navigator.appVersion.toLowerCase().indexOf(t) !== -1,
        );
    return e && (o[e] = !0), o;
}
function cr(o) {
    return o[0].toUpperCase() + o.slice(1);
}
function nl(o, ...e) {
    if (!e.length) return o;
    const t = e.shift();
    if (tn(o) && tn(t))
        for (const n in t)
            tn(t[n]) ?
                (o[n] || Object.assign(o, { [n]: {} }), nl(o[n], t[n]))
            :   Object.assign(o, { [n]: t[n] });
    return nl(o, ...e);
}
function Il(o) {
    const e = Yf();
    return (
        (o = o
            .replace(/shift/gi, '⇧')
            .replace(/backspace/gi, '⌫')
            .replace(/enter/gi, '⏎')
            .replace(/up/gi, '↑')
            .replace(/left/gi, '→')
            .replace(/down/gi, '↓')
            .replace(/right/gi, '←')
            .replace(/escape/gi, '⎋')
            .replace(/insert/gi, 'Ins')
            .replace(/delete/gi, '␡')
            .replace(/\+/gi, ' + ')),
        e.mac ?
            (o = o.replace(/ctrl|cmd/gi, '⌘').replace(/alt/gi, '⌥'))
        :   (o = o.replace(/cmd/gi, 'Ctrl').replace(/windows/gi, 'WIN')),
        o
    );
}
function Kf(o) {
    try {
        return new URL(o).href;
    } catch {}
    return o.substring(0, 2) === '//' ?
            window.location.protocol + o
        :   window.location.origin + o;
}
function Xf() {
    return Uf(10);
}
function Zf(o) {
    window.open(o, '_blank');
}
function Jf(o = '') {
    return `${o}${Math.floor(Math.random() * 1e8).toString(16)}`;
}
function ol(o, e, t) {
    const n = `«${e}» is deprecated and will be removed in the next major release. Please use the «${t}» instead.`;
    o && Dn(n, 'warn');
}
function $i(o, e, t) {
    const n = t.value ? 'value' : 'get',
        i = t[n],
        s = `#${e}Cache`;
    if (
        ((t[n] = function (...r) {
            return (
                this[s] === void 0 && (this[s] = i.apply(this, ...r)), this[s]
            );
        }),
        n === 'get' && t.set)
    ) {
        const r = t.set;
        t.set = function (l) {
            delete o[s], r.apply(this, l);
        };
    }
    return t;
}
const mu = 650;
function Wi() {
    return window.matchMedia(`(max-width: ${mu}px)`).matches;
}
const il =
    typeof window < 'u' &&
    window.navigator &&
    window.navigator.platform &&
    (/iP(ad|hone|od)/.test(window.navigator.platform) ||
        (window.navigator.platform === 'MacIntel' &&
            window.navigator.maxTouchPoints > 1));
function Qf(o, e) {
    const t = Array.isArray(o) || tn(o),
        n = Array.isArray(e) || tn(e);
    return t || n ? JSON.stringify(o) === JSON.stringify(e) : o === e;
}
let oe = class ln {
    static isSingleTag(e) {
        return (
            e.tagName &&
            [
                'AREA',
                'BASE',
                'BR',
                'COL',
                'COMMAND',
                'EMBED',
                'HR',
                'IMG',
                'INPUT',
                'KEYGEN',
                'LINK',
                'META',
                'PARAM',
                'SOURCE',
                'TRACK',
                'WBR',
            ].includes(e.tagName)
        );
    }
    static isLineBreakTag(e) {
        return e && e.tagName && ['BR', 'WBR'].includes(e.tagName);
    }
    static make(e, t = null, n = {}) {
        const i = document.createElement(e);
        if (Array.isArray(t)) {
            const s = t.filter((r) => r !== void 0);
            i.classList.add(...s);
        } else t && i.classList.add(t);
        for (const s in n)
            Object.prototype.hasOwnProperty.call(n, s) && (i[s] = n[s]);
        return i;
    }
    static text(e) {
        return document.createTextNode(e);
    }
    static append(e, t) {
        Array.isArray(t) ?
            t.forEach((n) => e.appendChild(n))
        :   e.appendChild(t);
    }
    static prepend(e, t) {
        Array.isArray(t) ?
            ((t = t.reverse()), t.forEach((n) => e.prepend(n)))
        :   e.prepend(t);
    }
    static swap(e, t) {
        const n = document.createElement('div'),
            i = e.parentNode;
        i.insertBefore(n, e),
            i.insertBefore(e, t),
            i.insertBefore(t, n),
            i.removeChild(n);
    }
    static find(e = document, t) {
        return e.querySelector(t);
    }
    static get(e) {
        return document.getElementById(e);
    }
    static findAll(e = document, t) {
        return e.querySelectorAll(t);
    }
    static get allInputsSelector() {
        return (
            '[contenteditable=true], textarea, input:not([type]), ' +
            ['text', 'password', 'email', 'number', 'search', 'tel', 'url']
                .map((e) => `input[type="${e}"]`)
                .join(', ')
        );
    }
    static findAllInputs(e) {
        return gu(e.querySelectorAll(ln.allInputsSelector)).reduce(
            (t, n) =>
                ln.isNativeInput(n) || ln.containsOnlyInlineElements(n) ?
                    [...t, n]
                :   [...t, ...ln.getDeepestBlockElements(n)],
            [],
        );
    }
    static getDeepestNode(e, t = !1) {
        const n = t ? 'lastChild' : 'firstChild',
            i = t ? 'previousSibling' : 'nextSibling';
        if (e && e.nodeType === Node.ELEMENT_NODE && e[n]) {
            let s = e[n];
            if (
                ln.isSingleTag(s) &&
                !ln.isNativeInput(s) &&
                !ln.isLineBreakTag(s)
            )
                if (s[i]) s = s[i];
                else if (s.parentNode[i]) s = s.parentNode[i];
                else return s.parentNode;
            return this.getDeepestNode(s, t);
        }
        return e;
    }
    static isElement(e) {
        return ba(e) ? !1 : e && e.nodeType && e.nodeType === Node.ELEMENT_NODE;
    }
    static isFragment(e) {
        return ba(e) ? !1 : (
                e && e.nodeType && e.nodeType === Node.DOCUMENT_FRAGMENT_NODE
            );
    }
    static isContentEditable(e) {
        return e.contentEditable === 'true';
    }
    static isNativeInput(e) {
        const t = ['INPUT', 'TEXTAREA'];
        return e && e.tagName ? t.includes(e.tagName) : !1;
    }
    static canSetCaret(e) {
        let t = !0;
        if (ln.isNativeInput(e))
            switch (e.type) {
                case 'file':
                case 'checkbox':
                case 'radio':
                case 'hidden':
                case 'submit':
                case 'button':
                case 'image':
                case 'reset':
                    t = !1;
                    break;
            }
        else t = ln.isContentEditable(e);
        return t;
    }
    static isNodeEmpty(e, t) {
        let n;
        return this.isSingleTag(e) && !this.isLineBreakTag(e) ?
                !1
            :   (this.isElement(e) && this.isNativeInput(e) ?
                    (n = e.value)
                :   (n = e.textContent.replace('​', '')),
                t && (n = n.replace(new RegExp(t, 'g'), '')),
                n.trim().length === 0);
    }
    static isLeaf(e) {
        return e ? e.childNodes.length === 0 : !1;
    }
    static isEmpty(e, t) {
        e.normalize();
        const n = [e];
        for (; n.length > 0; )
            if (((e = n.shift()), !!e)) {
                if (this.isLeaf(e) && !this.isNodeEmpty(e, t)) return !1;
                e.childNodes && n.push(...Array.from(e.childNodes));
            }
        return !0;
    }
    static isHTMLString(e) {
        const t = ln.make('div');
        return (t.innerHTML = e), t.childElementCount > 0;
    }
    static getContentLength(e) {
        return (
            ln.isNativeInput(e) ? e.value.length
            : e.nodeType === Node.TEXT_NODE ? e.length
            : e.textContent.length
        );
    }
    static get blockElements() {
        return [
            'address',
            'article',
            'aside',
            'blockquote',
            'canvas',
            'div',
            'dl',
            'dt',
            'fieldset',
            'figcaption',
            'figure',
            'footer',
            'form',
            'h1',
            'h2',
            'h3',
            'h4',
            'h5',
            'h6',
            'header',
            'hgroup',
            'hr',
            'li',
            'main',
            'nav',
            'noscript',
            'ol',
            'output',
            'p',
            'pre',
            'ruby',
            'section',
            'table',
            'tbody',
            'thead',
            'tr',
            'tfoot',
            'ul',
            'video',
        ];
    }
    static containsOnlyInlineElements(e) {
        let t;
        xo(e) ?
            ((t = document.createElement('div')), (t.innerHTML = e))
        :   (t = e);
        const n = (i) =>
            !ln.blockElements.includes(i.tagName.toLowerCase()) &&
            Array.from(i.children).every(n);
        return Array.from(t.children).every(n);
    }
    static getDeepestBlockElements(e) {
        return ln.containsOnlyInlineElements(e) ?
                [e]
            :   Array.from(e.children).reduce(
                    (t, n) => [...t, ...ln.getDeepestBlockElements(n)],
                    [],
                );
    }
    static getHolder(e) {
        return xo(e) ? document.getElementById(e) : e;
    }
    static isAnchor(e) {
        return e.tagName.toLowerCase() === 'a';
    }
    static offset(e) {
        const t = e.getBoundingClientRect(),
            n = window.pageXOffset || document.documentElement.scrollLeft,
            i = window.pageYOffset || document.documentElement.scrollTop,
            s = t.top + i,
            r = t.left + n;
        return { top: s, left: r, bottom: s + t.height, right: r + t.width };
    }
};
function eg(o) {
    return !/[^\t\n\r ]/.test(o);
}
function tg(o) {
    const e = window.getComputedStyle(o),
        t = parseFloat(e.fontSize),
        n = parseFloat(e.lineHeight) || t * 1.2,
        i = parseFloat(e.paddingTop),
        s = parseFloat(e.borderTopWidth),
        r = parseFloat(e.marginTop),
        l = t * 0.8,
        a = (n - t) / 2;
    return r + s + i + a + l;
}
function bu(o) {
    o.dataset.empty = oe.isEmpty(o) ? 'true' : 'false';
}
const ng = {
        blockTunes: { toggler: { 'Click to tune': '', 'or drag to move': '' } },
        inlineToolbar: { converter: { 'Convert to': '' } },
        toolbar: { toolbox: { Add: '' } },
        popover: { Filter: '', 'Nothing found': '', 'Convert to': '' },
    },
    og = { Text: '', Link: '', Bold: '', Italic: '' },
    ig = {
        link: { 'Add a link': '' },
        stub: { 'The block can not be displayed correctly.': '' },
    },
    sg = {
        delete: { Delete: '', 'Click to delete': '' },
        moveUp: { 'Move up': '' },
        moveDown: { 'Move down': '' },
    },
    wu = { ui: ng, toolNames: og, tools: ig, blockTunes: sg },
    yu = class _i {
        static ui(e, t) {
            return _i._t(e, t);
        }
        static t(e, t) {
            return _i._t(e, t);
        }
        static setDictionary(e) {
            _i.currentDictionary = e;
        }
        static _t(e, t) {
            const n = _i.getNamespace(e);
            return !n || !n[t] ? t : n[t];
        }
        static getNamespace(e) {
            return e
                .split('.')
                .reduce(
                    (t, n) => (!t || !Object.keys(t).length ? {} : t[n]),
                    _i.currentDictionary,
                );
        }
    };
yu.currentDictionary = wu;
let dn = yu;
class vu extends Error {}
class Rs {
    constructor() {
        this.subscribers = {};
    }
    on(e, t) {
        e in this.subscribers || (this.subscribers[e] = []),
            this.subscribers[e].push(t);
    }
    once(e, t) {
        e in this.subscribers || (this.subscribers[e] = []);
        const n = (i) => {
            const s = t(i),
                r = this.subscribers[e].indexOf(n);
            return r !== -1 && this.subscribers[e].splice(r, 1), s;
        };
        this.subscribers[e].push(n);
    }
    emit(e, t) {
        jn(this.subscribers) ||
            !this.subscribers[e] ||
            this.subscribers[e].reduce((n, i) => {
                const s = i(n);
                return s !== void 0 ? s : n;
            }, t);
    }
    off(e, t) {
        if (this.subscribers[e] === void 0) {
            console.warn(
                `EventDispatcher .off(): there is no subscribers for event "${e.toString()}". Probably, .off() called before .on()`,
            );
            return;
        }
        for (let n = 0; n < this.subscribers[e].length; n++)
            if (this.subscribers[e][n] === t) {
                delete this.subscribers[e][n];
                break;
            }
    }
    destroy() {
        this.subscribers = {};
    }
}
function fo(o) {
    Object.setPrototypeOf(this, {
        get id() {
            return o.id;
        },
        get name() {
            return o.name;
        },
        get config() {
            return o.config;
        },
        get holder() {
            return o.holder;
        },
        get isEmpty() {
            return o.isEmpty;
        },
        get selected() {
            return o.selected;
        },
        set stretched(e) {
            o.stretched = e;
        },
        get stretched() {
            return o.stretched;
        },
        get focusable() {
            return o.focusable;
        },
        call(e, t) {
            return o.call(e, t);
        },
        save() {
            return o.save();
        },
        validate(e) {
            return o.validate(e);
        },
        dispatchChange() {
            o.dispatchChange();
        },
        getActiveToolboxEntry() {
            return o.getActiveToolboxEntry();
        },
    });
}
class Ds {
    constructor() {
        this.allListeners = [];
    }
    on(e, t, n, i = !1) {
        const s = Jf('l'),
            r = { id: s, element: e, eventType: t, handler: n, options: i };
        if (!this.findOne(e, t, n))
            return this.allListeners.push(r), e.addEventListener(t, n, i), s;
    }
    off(e, t, n, i) {
        const s = this.findAll(e, t, n);
        s.forEach((r, l) => {
            const a = this.allListeners.indexOf(s[l]);
            a > -1 &&
                (this.allListeners.splice(a, 1),
                r.element.removeEventListener(
                    r.eventType,
                    r.handler,
                    r.options,
                ));
        });
    }
    offById(e) {
        const t = this.findById(e);
        t && t.element.removeEventListener(t.eventType, t.handler, t.options);
    }
    findOne(e, t, n) {
        const i = this.findAll(e, t, n);
        return i.length > 0 ? i[0] : null;
    }
    findAll(e, t, n) {
        let i;
        const s = e ? this.findByEventTarget(e) : [];
        return (
            e && t && n ?
                (i = s.filter((r) => r.eventType === t && r.handler === n))
            : e && t ? (i = s.filter((r) => r.eventType === t))
            : (i = s),
            i
        );
    }
    removeAll() {
        this.allListeners.map((e) => {
            e.element.removeEventListener(e.eventType, e.handler, e.options);
        }),
            (this.allListeners = []);
    }
    destroy() {
        this.removeAll();
    }
    findByEventTarget(e) {
        return this.allListeners.filter((t) => {
            if (t.element === e) return t;
        });
    }
    findByType(e) {
        return this.allListeners.filter((t) => {
            if (t.eventType === e) return t;
        });
    }
    findByHandler(e) {
        return this.allListeners.filter((t) => {
            if (t.handler === e) return t;
        });
    }
    findById(e) {
        return this.allListeners.find((t) => t.id === e);
    }
}
let lt = class ku {
        constructor({ config: e, eventsDispatcher: t }) {
            if (
                ((this.nodes = {}),
                (this.listeners = new Ds()),
                (this.readOnlyMutableListeners = {
                    on: (n, i, s, r = !1) => {
                        this.mutableListenerIds.push(
                            this.listeners.on(n, i, s, r),
                        );
                    },
                    clearAll: () => {
                        for (const n of this.mutableListenerIds)
                            this.listeners.offById(n);
                        this.mutableListenerIds = [];
                    },
                }),
                (this.mutableListenerIds = []),
                new.target === ku)
            )
                throw new TypeError(
                    'Constructors for abstract class Module are not allowed.',
                );
            (this.config = e), (this.eventsDispatcher = t);
        }
        set state(e) {
            this.Editor = e;
        }
        removeAllNodes() {
            for (const e in this.nodes) {
                const t = this.nodes[e];
                t instanceof HTMLElement && t.remove();
            }
        }
        get isRtl() {
            return this.config.i18n.direction === 'rtl';
        }
    },
    We = class Mo {
        constructor() {
            (this.instance = null),
                (this.selection = null),
                (this.savedSelectionRange = null),
                (this.isFakeBackgroundEnabled = !1),
                (this.commandBackground = 'backColor'),
                (this.commandRemoveFormat = 'removeFormat');
        }
        static get CSS() {
            return {
                editorWrapper: 'codex-editor',
                editorZone: 'codex-editor__redactor',
            };
        }
        static get anchorNode() {
            const e = window.getSelection();
            return e ? e.anchorNode : null;
        }
        static get anchorElement() {
            const e = window.getSelection();
            if (!e) return null;
            const t = e.anchorNode;
            return (
                t ?
                    oe.isElement(t) ?
                        t
                    :   t.parentElement
                :   null
            );
        }
        static get anchorOffset() {
            const e = window.getSelection();
            return e ? e.anchorOffset : null;
        }
        static get isCollapsed() {
            const e = window.getSelection();
            return e ? e.isCollapsed : null;
        }
        static get isAtEditor() {
            return this.isSelectionAtEditor(Mo.get());
        }
        static isSelectionAtEditor(e) {
            if (!e) return !1;
            let t = e.anchorNode || e.focusNode;
            t && t.nodeType === Node.TEXT_NODE && (t = t.parentNode);
            let n = null;
            return (
                t &&
                    t instanceof Element &&
                    (n = t.closest(`.${Mo.CSS.editorZone}`)),
                n ? n.nodeType === Node.ELEMENT_NODE : !1
            );
        }
        static isRangeAtEditor(e) {
            if (!e) return;
            let t = e.startContainer;
            t && t.nodeType === Node.TEXT_NODE && (t = t.parentNode);
            let n = null;
            return (
                t &&
                    t instanceof Element &&
                    (n = t.closest(`.${Mo.CSS.editorZone}`)),
                n ? n.nodeType === Node.ELEMENT_NODE : !1
            );
        }
        static get isSelectionExists() {
            return !!Mo.get().anchorNode;
        }
        static get range() {
            return this.getRangeFromSelection(this.get());
        }
        static getRangeFromSelection(e) {
            return e && e.rangeCount ? e.getRangeAt(0) : null;
        }
        static get rect() {
            let e = document.selection,
                t,
                n = { x: 0, y: 0, width: 0, height: 0 };
            if (e && e.type !== 'Control')
                return (
                    (e = e),
                    (t = e.createRange()),
                    (n.x = t.boundingLeft),
                    (n.y = t.boundingTop),
                    (n.width = t.boundingWidth),
                    (n.height = t.boundingHeight),
                    n
                );
            if (!window.getSelection)
                return (
                    pt('Method window.getSelection is not supported', 'warn'), n
                );
            if (
                ((e = window.getSelection()),
                e.rangeCount === null || isNaN(e.rangeCount))
            )
                return (
                    pt(
                        'Method SelectionUtils.rangeCount is not supported',
                        'warn',
                    ),
                    n
                );
            if (e.rangeCount === 0) return n;
            if (
                ((t = e.getRangeAt(0).cloneRange()),
                t.getBoundingClientRect && (n = t.getBoundingClientRect()),
                n.x === 0 && n.y === 0)
            ) {
                const i = document.createElement('span');
                if (i.getBoundingClientRect) {
                    i.appendChild(document.createTextNode('​')),
                        t.insertNode(i),
                        (n = i.getBoundingClientRect());
                    const s = i.parentNode;
                    s.removeChild(i), s.normalize();
                }
            }
            return n;
        }
        static get text() {
            return window.getSelection ? window.getSelection().toString() : '';
        }
        static get() {
            return window.getSelection();
        }
        static setCursor(e, t = 0) {
            const n = document.createRange(),
                i = window.getSelection();
            return (
                oe.isNativeInput(e) ?
                    oe.canSetCaret(e) ?
                        (e.focus(),
                        (e.selectionStart = e.selectionEnd = t),
                        e.getBoundingClientRect())
                    :   void 0
                :   (n.setStart(e, t),
                    n.setEnd(e, t),
                    i.removeAllRanges(),
                    i.addRange(n),
                    n.getBoundingClientRect())
            );
        }
        static isRangeInsideContainer(e) {
            const t = Mo.range;
            return t === null ? !1 : e.contains(t.startContainer);
        }
        static addFakeCursor() {
            const e = Mo.range;
            if (e === null) return;
            const t = oe.make('span', 'codex-editor__fake-cursor');
            (t.dataset.mutationFree = 'true'), e.collapse(), e.insertNode(t);
        }
        static isFakeCursorInsideContainer(e) {
            return oe.find(e, '.codex-editor__fake-cursor') !== null;
        }
        static removeFakeCursor(e = document.body) {
            const t = oe.find(e, '.codex-editor__fake-cursor');
            t && t.remove();
        }
        removeFakeBackground() {
            this.isFakeBackgroundEnabled &&
                ((this.isFakeBackgroundEnabled = !1),
                document.execCommand(this.commandRemoveFormat));
        }
        setFakeBackground() {
            document.execCommand(this.commandBackground, !1, '#a8d6ff'),
                (this.isFakeBackgroundEnabled = !0);
        }
        save() {
            this.savedSelectionRange = Mo.range;
        }
        restore() {
            if (!this.savedSelectionRange) return;
            const e = window.getSelection();
            e.removeAllRanges(), e.addRange(this.savedSelectionRange);
        }
        clearSaved() {
            this.savedSelectionRange = null;
        }
        collapseToEnd() {
            const e = window.getSelection(),
                t = document.createRange();
            t.selectNodeContents(e.focusNode),
                t.collapse(!1),
                e.removeAllRanges(),
                e.addRange(t);
        }
        findParentTag(e, t, n = 10) {
            const i = window.getSelection();
            let s = null;
            return !i || !i.anchorNode || !i.focusNode ?
                    null
                :   ([i.anchorNode, i.focusNode].forEach((r) => {
                        let l = n;
                        for (
                            ;
                            l > 0 &&
                            r.parentNode &&
                            !(
                                r.tagName === e &&
                                ((s = r),
                                t &&
                                    r.classList &&
                                    !r.classList.contains(t) &&
                                    (s = null),
                                s)
                            );

                        )
                            (r = r.parentNode), l--;
                    }),
                    s);
        }
        expandToTag(e) {
            const t = window.getSelection();
            t.removeAllRanges();
            const n = document.createRange();
            n.selectNodeContents(e), t.addRange(n);
        }
    };
function rg(o, e) {
    const { type: t, target: n, addedNodes: i, removedNodes: s } = o;
    return o.type === 'attributes' && o.attributeName === 'data-empty' ?
            !1
        :   !!(
                e.contains(n) ||
                (t === 'childList' &&
                    (Array.from(i).some((r) => r === e) ||
                        Array.from(s).some((r) => r === e)))
            );
}
const sl = 'redactor dom changed',
    _u = 'block changed',
    xu = 'fake cursor is about to be toggled',
    Cu = 'fake cursor have been set',
    Ls = 'editor mobile layout toggled';
function Eu(o, e) {
    if (!o.conversionConfig) return !1;
    const t = o.conversionConfig[e];
    return Mt(t) || xo(t);
}
function hr(o, e) {
    return Eu(o.tool, e);
}
function Tu(o, e) {
    return Object.entries(o).some(([t, n]) => e[t] && Qf(e[t], n));
}
async function Su(o, e) {
    const t = (await o.save()).data;
    return e.reduce((n, i) => {
        if (!Eu(i, 'import')) return n;
        const s = i.toolbox.filter((r) => {
            if (jn(r) || !r.icon) return !1;
            if (r.data !== void 0) {
                if (Tu(r.data, t)) return !1;
            } else if (i.name === o.name) return !1;
            return !0;
        });
        return n.push({ ...i, toolbox: s }), n;
    }, []);
}
function va(o, e) {
    return (
        o.mergeable ?
            o.name === e.name ?
                !0
            :   hr(e, 'export') && hr(o, 'import')
        :   !1
    );
}
function lg(o, e) {
    const t = e?.export;
    return (
        Mt(t) ? t(o)
        : xo(t) ? o[t]
        : (t !== void 0 &&
                pt(
                    'Conversion «export» property must be a string or function. String means key of saved data object to export. Function should export processed string to export.',
                ),
            '')
    );
}
function ka(o, e) {
    const t = e?.import;
    return (
        Mt(t) ? t(o)
        : xo(t) ? { [t]: o }
        : (t !== void 0 &&
                pt(
                    'Conversion «import» property must be a string or function. String means key of tool data to import. Function accepts a imported string and return composed tool data.',
                ),
            {})
    );
}
var Tt = ((o) => (
        (o.Default = 'default'),
        (o.Separator = 'separator'),
        (o.Html = 'html'),
        o
    ))(Tt || {}),
    go = ((o) => (
        (o.APPEND_CALLBACK = 'appendCallback'),
        (o.RENDERED = 'rendered'),
        (o.MOVED = 'moved'),
        (o.UPDATED = 'updated'),
        (o.REMOVED = 'removed'),
        (o.ON_PASTE = 'onPaste'),
        o
    ))(go || {});
class Qt extends Rs {
    constructor(
        { id: e = Xf(), data: t, tool: n, readOnly: i, tunesData: s },
        r,
    ) {
        super(),
            (this.cachedInputs = []),
            (this.toolRenderedElement = null),
            (this.tunesInstances = new Map()),
            (this.defaultTunesInstances = new Map()),
            (this.unavailableTunesData = {}),
            (this.inputIndex = 0),
            (this.editorEventBus = null),
            (this.handleFocus = () => {
                this.dropInputsCache(), this.updateCurrentInput();
            }),
            (this.didMutated = (l = void 0) => {
                const a = l === void 0,
                    c = l instanceof InputEvent;
                !a && !c && this.detectToolRootChange(l);
                let h;
                a || c ?
                    (h = !0)
                :   (h = !(
                        l.length > 0 &&
                        l.every((u) => {
                            const {
                                addedNodes: p,
                                removedNodes: b,
                                target: m,
                            } = u;
                            return [...Array.from(p), ...Array.from(b), m].some(
                                (k) => (
                                    oe.isElement(k) || (k = k.parentElement),
                                    k &&
                                        k.closest(
                                            '[data-mutation-free="true"]',
                                        ) !== null
                                ),
                            );
                        })
                    )),
                    h &&
                        (this.dropInputsCache(),
                        this.updateCurrentInput(),
                        this.toggleInputsEmptyMark(),
                        this.call('updated'),
                        this.emit('didMutated', this));
            }),
            (this.name = n.name),
            (this.id = e),
            (this.settings = n.settings),
            (this.config = n.settings.config || {}),
            (this.editorEventBus = r || null),
            (this.blockAPI = new fo(this)),
            (this.tool = n),
            (this.toolInstance = n.create(t, this.blockAPI, i)),
            (this.tunes = n.tunes),
            this.composeTunes(s),
            (this.holder = this.compose()),
            window.requestIdleCallback(() => {
                this.watchBlockMutations(),
                    this.addInputEvents(),
                    this.toggleInputsEmptyMark();
            });
    }
    static get CSS() {
        return {
            wrapper: 'ce-block',
            wrapperStretched: 'ce-block--stretched',
            content: 'ce-block__content',
            selected: 'ce-block--selected',
            dropTarget: 'ce-block--drop-target',
        };
    }
    get inputs() {
        if (this.cachedInputs.length !== 0) return this.cachedInputs;
        const e = oe.findAllInputs(this.holder);
        return (
            this.inputIndex > e.length - 1 && (this.inputIndex = e.length - 1),
            (this.cachedInputs = e),
            e
        );
    }
    get currentInput() {
        return this.inputs[this.inputIndex];
    }
    set currentInput(e) {
        const t = this.inputs.findIndex((n) => n === e || n.contains(e));
        t !== -1 && (this.inputIndex = t);
    }
    get firstInput() {
        return this.inputs[0];
    }
    get lastInput() {
        const e = this.inputs;
        return e[e.length - 1];
    }
    get nextInput() {
        return this.inputs[this.inputIndex + 1];
    }
    get previousInput() {
        return this.inputs[this.inputIndex - 1];
    }
    get data() {
        return this.save().then((e) => (e && !jn(e.data) ? e.data : {}));
    }
    get sanitize() {
        return this.tool.sanitizeConfig;
    }
    get mergeable() {
        return Mt(this.toolInstance.merge);
    }
    get focusable() {
        return this.inputs.length !== 0;
    }
    get isEmpty() {
        const e = oe.isEmpty(this.pluginsContent, '/'),
            t = !this.hasMedia;
        return e && t;
    }
    get hasMedia() {
        const e = [
            'img',
            'iframe',
            'video',
            'audio',
            'source',
            'input',
            'textarea',
            'twitterwidget',
        ];
        return !!this.holder.querySelector(e.join(','));
    }
    set selected(e) {
        var t, n;
        this.holder.classList.toggle(Qt.CSS.selected, e);
        const i = e === !0 && We.isRangeInsideContainer(this.holder),
            s = e === !1 && We.isFakeCursorInsideContainer(this.holder);
        (i || s) &&
            ((t = this.editorEventBus) == null || t.emit(xu, { state: e }),
            i ? We.addFakeCursor() : We.removeFakeCursor(this.holder),
            (n = this.editorEventBus) == null || n.emit(Cu, { state: e }));
    }
    get selected() {
        return this.holder.classList.contains(Qt.CSS.selected);
    }
    set stretched(e) {
        this.holder.classList.toggle(Qt.CSS.wrapperStretched, e);
    }
    get stretched() {
        return this.holder.classList.contains(Qt.CSS.wrapperStretched);
    }
    set dropTarget(e) {
        this.holder.classList.toggle(Qt.CSS.dropTarget, e);
    }
    get pluginsContent() {
        return this.toolRenderedElement;
    }
    call(e, t) {
        if (Mt(this.toolInstance[e])) {
            e === 'appendCallback' &&
                pt(
                    '`appendCallback` hook is deprecated and will be removed in the next major release. Use `rendered` hook instead',
                    'warn',
                );
            try {
                this.toolInstance[e].call(this.toolInstance, t);
            } catch (n) {
                pt(`Error during '${e}' call: ${n.message}`, 'error');
            }
        }
    }
    async mergeWith(e) {
        await this.toolInstance.merge(e);
    }
    async save() {
        const e = await this.toolInstance.save(this.pluginsContent),
            t = this.unavailableTunesData;
        [
            ...this.tunesInstances.entries(),
            ...this.defaultTunesInstances.entries(),
        ].forEach(([s, r]) => {
            if (Mt(r.save))
                try {
                    t[s] = r.save();
                } catch (l) {
                    pt(
                        `Tune ${r.constructor.name} save method throws an Error %o`,
                        'warn',
                        l,
                    );
                }
        });
        const n = window.performance.now();
        let i;
        return Promise.resolve(e)
            .then(
                (s) => (
                    (i = window.performance.now()),
                    {
                        id: this.id,
                        tool: this.name,
                        data: s,
                        tunes: t,
                        time: i - n,
                    }
                ),
            )
            .catch((s) => {
                pt(
                    `Saving process for ${this.name} tool failed due to the ${s}`,
                    'log',
                    'red',
                );
            });
    }
    async validate(e) {
        let t = !0;
        return (
            this.toolInstance.validate instanceof Function &&
                (t = await this.toolInstance.validate(e)),
            t
        );
    }
    getTunes() {
        const e = [],
            t = [],
            n =
                typeof this.toolInstance.renderSettings == 'function' ?
                    this.toolInstance.renderSettings()
                :   [];
        return (
            oe.isElement(n) ? e.push({ type: Tt.Html, element: n })
            : Array.isArray(n) ? e.push(...n)
            : e.push(n),
            [
                ...this.tunesInstances.values(),
                ...this.defaultTunesInstances.values(),
            ]
                .map((i) => i.render())
                .forEach((i) => {
                    oe.isElement(i) ? t.push({ type: Tt.Html, element: i })
                    : Array.isArray(i) ? t.push(...i)
                    : t.push(i);
                }),
            { toolTunes: e, commonTunes: t }
        );
    }
    updateCurrentInput() {
        this.currentInput =
            oe.isNativeInput(document.activeElement) || !We.anchorNode ?
                document.activeElement
            :   We.anchorNode;
    }
    dispatchChange() {
        this.didMutated();
    }
    destroy() {
        this.unwatchBlockMutations(),
            this.removeInputEvents(),
            super.destroy(),
            Mt(this.toolInstance.destroy) && this.toolInstance.destroy();
    }
    async getActiveToolboxEntry() {
        const e = this.tool.toolbox;
        if (e.length === 1) return Promise.resolve(this.tool.toolbox[0]);
        const t = await this.data,
            n = e;
        return n?.find((i) => Tu(i.data, t));
    }
    async exportDataAsString() {
        const e = await this.data;
        return lg(e, this.tool.conversionConfig);
    }
    compose() {
        const e = oe.make('div', Qt.CSS.wrapper),
            t = oe.make('div', Qt.CSS.content),
            n = this.toolInstance.render();
        (e.dataset.id = this.id),
            (this.toolRenderedElement = n),
            t.appendChild(this.toolRenderedElement);
        let i = t;
        return (
            [
                ...this.tunesInstances.values(),
                ...this.defaultTunesInstances.values(),
            ].forEach((s) => {
                if (Mt(s.wrap))
                    try {
                        i = s.wrap(i);
                    } catch (r) {
                        pt(
                            `Tune ${s.constructor.name} wrap method throws an Error %o`,
                            'warn',
                            r,
                        );
                    }
            }),
            e.appendChild(i),
            e
        );
    }
    composeTunes(e) {
        Array.from(this.tunes.values()).forEach((t) => {
            (t.isInternal ?
                this.defaultTunesInstances
            :   this.tunesInstances
            ).set(t.name, t.create(e[t.name], this.blockAPI));
        }),
            Object.entries(e).forEach(([t, n]) => {
                this.tunesInstances.has(t) ||
                    (this.unavailableTunesData[t] = n);
            });
    }
    addInputEvents() {
        this.inputs.forEach((e) => {
            e.addEventListener('focus', this.handleFocus),
                oe.isNativeInput(e) &&
                    e.addEventListener('input', this.didMutated);
        });
    }
    removeInputEvents() {
        this.inputs.forEach((e) => {
            e.removeEventListener('focus', this.handleFocus),
                oe.isNativeInput(e) &&
                    e.removeEventListener('input', this.didMutated);
        });
    }
    watchBlockMutations() {
        var e;
        (this.redactorDomChangedCallback = (t) => {
            const { mutations: n } = t;
            n.some((i) => rg(i, this.toolRenderedElement)) &&
                this.didMutated(n);
        }),
            (e = this.editorEventBus) == null ||
                e.on(sl, this.redactorDomChangedCallback);
    }
    unwatchBlockMutations() {
        var e;
        (e = this.editorEventBus) == null ||
            e.off(sl, this.redactorDomChangedCallback);
    }
    detectToolRootChange(e) {
        e.forEach((t) => {
            if (Array.from(t.removedNodes).includes(this.toolRenderedElement)) {
                const n = t.addedNodes[t.addedNodes.length - 1];
                this.toolRenderedElement = n;
            }
        });
    }
    dropInputsCache() {
        this.cachedInputs = [];
    }
    toggleInputsEmptyMark() {
        this.inputs.forEach(bu);
    }
}
class ag extends lt {
    constructor() {
        super(...arguments),
            (this.insert = (
                e = this.config.defaultBlock,
                t = {},
                n = {},
                i,
                s,
                r,
                l,
            ) => {
                const a = this.Editor.BlockManager.insert({
                    id: l,
                    tool: e,
                    data: t,
                    index: i,
                    needToFocus: s,
                    replace: r,
                });
                return new fo(a);
            }),
            (this.composeBlockData = async (e) => {
                const t = this.Editor.Tools.blockTools.get(e);
                return new Qt({
                    tool: t,
                    api: this.Editor.API,
                    readOnly: !0,
                    data: {},
                    tunesData: {},
                }).data;
            }),
            (this.update = async (e, t, n) => {
                const { BlockManager: i } = this.Editor,
                    s = i.getBlockById(e);
                if (s === void 0)
                    throw new Error(`Block with id "${e}" not found`);
                const r = await i.update(s, t, n);
                return new fo(r);
            }),
            (this.convert = async (e, t, n) => {
                var i, s;
                const { BlockManager: r, Tools: l } = this.Editor,
                    a = r.getBlockById(e);
                if (!a) throw new Error(`Block with id "${e}" not found`);
                const c = l.blockTools.get(a.name),
                    h = l.blockTools.get(t);
                if (!h)
                    throw new Error(`Block Tool with type "${t}" not found`);
                const u =
                        ((i = c?.conversionConfig) == null ?
                            void 0
                        :   i.export) !== void 0,
                    p =
                        ((s = h.conversionConfig) == null ?
                            void 0
                        :   s.import) !== void 0;
                if (u && p) {
                    const b = await r.convert(a, t, n);
                    return new fo(b);
                } else {
                    const b = [u ? !1 : cr(a.name), p ? !1 : cr(t)]
                        .filter(Boolean)
                        .join(' and ');
                    throw new Error(
                        `Conversion from "${a.name}" to "${t}" is not possible. ${b} tool(s) should provide a "conversionConfig"`,
                    );
                }
            }),
            (this.insertMany = (
                e,
                t = this.Editor.BlockManager.blocks.length - 1,
            ) => {
                this.validateIndex(t);
                const n = e.map(({ id: i, type: s, data: r }) =>
                    this.Editor.BlockManager.composeBlock({
                        id: i,
                        tool: s || this.config.defaultBlock,
                        data: r,
                    }),
                );
                return (
                    this.Editor.BlockManager.insertMany(n, t),
                    n.map((i) => new fo(i))
                );
            });
    }
    get methods() {
        return {
            clear: () => this.clear(),
            render: (e) => this.render(e),
            renderFromHTML: (e) => this.renderFromHTML(e),
            delete: (e) => this.delete(e),
            swap: (e, t) => this.swap(e, t),
            move: (e, t) => this.move(e, t),
            getBlockByIndex: (e) => this.getBlockByIndex(e),
            getById: (e) => this.getById(e),
            getCurrentBlockIndex: () => this.getCurrentBlockIndex(),
            getBlockIndex: (e) => this.getBlockIndex(e),
            getBlocksCount: () => this.getBlocksCount(),
            getBlockByElement: (e) => this.getBlockByElement(e),
            stretchBlock: (e, t = !0) => this.stretchBlock(e, t),
            insertNewBlock: () => this.insertNewBlock(),
            insert: this.insert,
            insertMany: this.insertMany,
            update: this.update,
            composeBlockData: this.composeBlockData,
            convert: this.convert,
        };
    }
    getBlocksCount() {
        return this.Editor.BlockManager.blocks.length;
    }
    getCurrentBlockIndex() {
        return this.Editor.BlockManager.currentBlockIndex;
    }
    getBlockIndex(e) {
        const t = this.Editor.BlockManager.getBlockById(e);
        if (!t) {
            Dn('There is no block with id `' + e + '`', 'warn');
            return;
        }
        return this.Editor.BlockManager.getBlockIndex(t);
    }
    getBlockByIndex(e) {
        const t = this.Editor.BlockManager.getBlockByIndex(e);
        if (t === void 0) {
            Dn('There is no block at index `' + e + '`', 'warn');
            return;
        }
        return new fo(t);
    }
    getById(e) {
        const t = this.Editor.BlockManager.getBlockById(e);
        return t === void 0 ?
                (Dn('There is no block with id `' + e + '`', 'warn'), null)
            :   new fo(t);
    }
    getBlockByElement(e) {
        const t = this.Editor.BlockManager.getBlock(e);
        if (t === void 0) {
            Dn(
                'There is no block corresponding to element `' + e + '`',
                'warn',
            );
            return;
        }
        return new fo(t);
    }
    swap(e, t) {
        pt(
            '`blocks.swap()` method is deprecated and will be removed in the next major release. Use `block.move()` method instead',
            'info',
        ),
            this.Editor.BlockManager.swap(e, t);
    }
    move(e, t) {
        this.Editor.BlockManager.move(e, t);
    }
    delete(e = this.Editor.BlockManager.currentBlockIndex) {
        try {
            const t = this.Editor.BlockManager.getBlockByIndex(e);
            this.Editor.BlockManager.removeBlock(t);
        } catch (t) {
            Dn(t, 'warn');
            return;
        }
        this.Editor.BlockManager.blocks.length === 0 &&
            this.Editor.BlockManager.insert(),
            this.Editor.BlockManager.currentBlock &&
                this.Editor.Caret.setToBlock(
                    this.Editor.BlockManager.currentBlock,
                    this.Editor.Caret.positions.END,
                ),
            this.Editor.Toolbar.close();
    }
    async clear() {
        await this.Editor.BlockManager.clear(!0),
            this.Editor.InlineToolbar.close();
    }
    async render(e) {
        if (e === void 0 || e.blocks === void 0)
            throw new Error('Incorrect data passed to the render() method');
        this.Editor.ModificationsObserver.disable(),
            await this.Editor.BlockManager.clear(),
            await this.Editor.Renderer.render(e.blocks),
            this.Editor.ModificationsObserver.enable();
    }
    renderFromHTML(e) {
        return (
            this.Editor.BlockManager.clear(),
            this.Editor.Paste.processText(e, !0)
        );
    }
    stretchBlock(e, t = !0) {
        ol(!0, 'blocks.stretchBlock()', 'BlockAPI');
        const n = this.Editor.BlockManager.getBlockByIndex(e);
        n && (n.stretched = t);
    }
    insertNewBlock() {
        pt(
            'Method blocks.insertNewBlock() is deprecated and it will be removed in the next major release. Use blocks.insert() instead.',
            'warn',
        ),
            this.insert();
    }
    validateIndex(e) {
        if (typeof e != 'number') throw new Error('Index should be a number');
        if (e < 0)
            throw new Error('Index should be greater than or equal to 0');
        if (e === null)
            throw new Error('Index should be greater than or equal to 0');
    }
}
function cg(o, e) {
    return (
        typeof o == 'number' ? e.BlockManager.getBlockByIndex(o)
        : typeof o == 'string' ? e.BlockManager.getBlockById(o)
        : e.BlockManager.getBlockById(o.id)
    );
}
class hg extends lt {
    constructor() {
        super(...arguments),
            (this.setToFirstBlock = (
                e = this.Editor.Caret.positions.DEFAULT,
                t = 0,
            ) =>
                this.Editor.BlockManager.firstBlock ?
                    (this.Editor.Caret.setToBlock(
                        this.Editor.BlockManager.firstBlock,
                        e,
                        t,
                    ),
                    !0)
                :   !1),
            (this.setToLastBlock = (
                e = this.Editor.Caret.positions.DEFAULT,
                t = 0,
            ) =>
                this.Editor.BlockManager.lastBlock ?
                    (this.Editor.Caret.setToBlock(
                        this.Editor.BlockManager.lastBlock,
                        e,
                        t,
                    ),
                    !0)
                :   !1),
            (this.setToPreviousBlock = (
                e = this.Editor.Caret.positions.DEFAULT,
                t = 0,
            ) =>
                this.Editor.BlockManager.previousBlock ?
                    (this.Editor.Caret.setToBlock(
                        this.Editor.BlockManager.previousBlock,
                        e,
                        t,
                    ),
                    !0)
                :   !1),
            (this.setToNextBlock = (
                e = this.Editor.Caret.positions.DEFAULT,
                t = 0,
            ) =>
                this.Editor.BlockManager.nextBlock ?
                    (this.Editor.Caret.setToBlock(
                        this.Editor.BlockManager.nextBlock,
                        e,
                        t,
                    ),
                    !0)
                :   !1),
            (this.setToBlock = (
                e,
                t = this.Editor.Caret.positions.DEFAULT,
                n = 0,
            ) => {
                const i = cg(e, this.Editor);
                return i === void 0 ? !1 : (
                        (this.Editor.Caret.setToBlock(i, t, n), !0)
                    );
            }),
            (this.focus = (e = !1) =>
                e ?
                    this.setToLastBlock(this.Editor.Caret.positions.END)
                :   this.setToFirstBlock(this.Editor.Caret.positions.START));
    }
    get methods() {
        return {
            setToFirstBlock: this.setToFirstBlock,
            setToLastBlock: this.setToLastBlock,
            setToPreviousBlock: this.setToPreviousBlock,
            setToNextBlock: this.setToNextBlock,
            setToBlock: this.setToBlock,
            focus: this.focus,
        };
    }
}
class dg extends lt {
    get methods() {
        return {
            emit: (e, t) => this.emit(e, t),
            off: (e, t) => this.off(e, t),
            on: (e, t) => this.on(e, t),
        };
    }
    on(e, t) {
        this.eventsDispatcher.on(e, t);
    }
    emit(e, t) {
        this.eventsDispatcher.emit(e, t);
    }
    off(e, t) {
        this.eventsDispatcher.off(e, t);
    }
}
class Ll extends lt {
    static getNamespace(e, t) {
        return t ? `blockTunes.${e}` : `tools.${e}`;
    }
    get methods() {
        return {
            t: () => {
                Dn('I18n.t() method can be accessed only from Tools', 'warn');
            },
        };
    }
    getMethodsForTool(e, t) {
        return Object.assign(this.methods, {
            t: (n) => dn.t(Ll.getNamespace(e, t), n),
        });
    }
}
class ug extends lt {
    get methods() {
        return {
            blocks: this.Editor.BlocksAPI.methods,
            caret: this.Editor.CaretAPI.methods,
            tools: this.Editor.ToolsAPI.methods,
            events: this.Editor.EventsAPI.methods,
            listeners: this.Editor.ListenersAPI.methods,
            notifier: this.Editor.NotifierAPI.methods,
            sanitizer: this.Editor.SanitizerAPI.methods,
            saver: this.Editor.SaverAPI.methods,
            selection: this.Editor.SelectionAPI.methods,
            styles: this.Editor.StylesAPI.classes,
            toolbar: this.Editor.ToolbarAPI.methods,
            inlineToolbar: this.Editor.InlineToolbarAPI.methods,
            tooltip: this.Editor.TooltipAPI.methods,
            i18n: this.Editor.I18nAPI.methods,
            readOnly: this.Editor.ReadOnlyAPI.methods,
            ui: this.Editor.UiAPI.methods,
        };
    }
    getMethodsForTool(e, t) {
        return Object.assign(this.methods, {
            i18n: this.Editor.I18nAPI.getMethodsForTool(e, t),
        });
    }
}
class pg extends lt {
    get methods() {
        return { close: () => this.close(), open: () => this.open() };
    }
    open() {
        this.Editor.InlineToolbar.tryToShow();
    }
    close() {
        this.Editor.InlineToolbar.close();
    }
}
class fg extends lt {
    get methods() {
        return {
            on: (e, t, n, i) => this.on(e, t, n, i),
            off: (e, t, n, i) => this.off(e, t, n, i),
            offById: (e) => this.offById(e),
        };
    }
    on(e, t, n, i) {
        return this.listeners.on(e, t, n, i);
    }
    off(e, t, n, i) {
        this.listeners.off(e, t, n, i);
    }
    offById(e) {
        this.listeners.offById(e);
    }
}
var Bu = { exports: {} };
(function (o, e) {
    (function (t, n) {
        o.exports = n();
    })(window, function () {
        return (function (t) {
            var n = {};
            function i(s) {
                if (n[s]) return n[s].exports;
                var r = (n[s] = { i: s, l: !1, exports: {} });
                return (
                    t[s].call(r.exports, r, r.exports, i), (r.l = !0), r.exports
                );
            }
            return (
                (i.m = t),
                (i.c = n),
                (i.d = function (s, r, l) {
                    i.o(s, r) ||
                        Object.defineProperty(s, r, { enumerable: !0, get: l });
                }),
                (i.r = function (s) {
                    typeof Symbol < 'u' &&
                        Symbol.toStringTag &&
                        Object.defineProperty(s, Symbol.toStringTag, {
                            value: 'Module',
                        }),
                        Object.defineProperty(s, '__esModule', { value: !0 });
                }),
                (i.t = function (s, r) {
                    if (
                        (1 & r && (s = i(s)),
                        8 & r ||
                            (4 & r &&
                                typeof s == 'object' &&
                                s &&
                                s.__esModule))
                    )
                        return s;
                    var l = Object.create(null);
                    if (
                        (i.r(l),
                        Object.defineProperty(l, 'default', {
                            enumerable: !0,
                            value: s,
                        }),
                        2 & r && typeof s != 'string')
                    )
                        for (var a in s)
                            i.d(
                                l,
                                a,
                                function (c) {
                                    return s[c];
                                }.bind(null, a),
                            );
                    return l;
                }),
                (i.n = function (s) {
                    var r =
                        s && s.__esModule ?
                            function () {
                                return s.default;
                            }
                        :   function () {
                                return s;
                            };
                    return i.d(r, 'a', r), r;
                }),
                (i.o = function (s, r) {
                    return Object.prototype.hasOwnProperty.call(s, r);
                }),
                (i.p = '/'),
                i((i.s = 0))
            );
        })([
            function (t, n, i) {
                i(1),
                    (t.exports = (function () {
                        var s = i(6),
                            r = 'cdx-notify--bounce-in',
                            l = null;
                        return {
                            show: function (a) {
                                if (a.message) {
                                    (function () {
                                        if (l) return !0;
                                        (l = s.getWrapper()),
                                            document.body.appendChild(l);
                                    })();
                                    var c = null,
                                        h = a.time || 8e3;
                                    switch (a.type) {
                                        case 'confirm':
                                            c = s.confirm(a);
                                            break;
                                        case 'prompt':
                                            c = s.prompt(a);
                                            break;
                                        default:
                                            (c = s.alert(a)),
                                                window.setTimeout(function () {
                                                    c.remove();
                                                }, h);
                                    }
                                    l.appendChild(c), c.classList.add(r);
                                }
                            },
                        };
                    })());
            },
            function (t, n, i) {
                var s = i(2);
                typeof s == 'string' && (s = [[t.i, s, '']]);
                var r = { hmr: !0, transform: void 0, insertInto: void 0 };
                i(4)(s, r), s.locals && (t.exports = s.locals);
            },
            function (t, n, i) {
                (t.exports = i(3)(!1)).push([
                    t.i,
                    `.cdx-notify--error{background:#fffbfb!important}.cdx-notify--error::before{background:#fb5d5d!important}.cdx-notify__input{max-width:130px;padding:5px 10px;background:#f7f7f7;border:0;border-radius:3px;font-size:13px;color:#656b7c;outline:0}.cdx-notify__input:-ms-input-placeholder{color:#656b7c}.cdx-notify__input::placeholder{color:#656b7c}.cdx-notify__input:focus:-ms-input-placeholder{color:rgba(101,107,124,.3)}.cdx-notify__input:focus::placeholder{color:rgba(101,107,124,.3)}.cdx-notify__button{border:none;border-radius:3px;font-size:13px;padding:5px 10px;cursor:pointer}.cdx-notify__button:last-child{margin-left:10px}.cdx-notify__button--cancel{background:#f2f5f7;box-shadow:0 2px 1px 0 rgba(16,19,29,0);color:#656b7c}.cdx-notify__button--cancel:hover{background:#eee}.cdx-notify__button--confirm{background:#34c992;box-shadow:0 1px 1px 0 rgba(18,49,35,.05);color:#fff}.cdx-notify__button--confirm:hover{background:#33b082}.cdx-notify__btns-wrapper{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-top:5px}.cdx-notify__cross{position:absolute;top:5px;right:5px;width:10px;height:10px;padding:5px;opacity:.54;cursor:pointer}.cdx-notify__cross::after,.cdx-notify__cross::before{content:'';position:absolute;left:9px;top:5px;height:12px;width:2px;background:#575d67}.cdx-notify__cross::before{transform:rotate(-45deg)}.cdx-notify__cross::after{transform:rotate(45deg)}.cdx-notify__cross:hover{opacity:1}.cdx-notifies{position:fixed;z-index:2;bottom:20px;left:20px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif}.cdx-notify{position:relative;width:220px;margin-top:15px;padding:13px 16px;background:#fff;box-shadow:0 11px 17px 0 rgba(23,32,61,.13);border-radius:5px;font-size:14px;line-height:1.4em;word-wrap:break-word}.cdx-notify::before{content:'';position:absolute;display:block;top:0;left:0;width:3px;height:calc(100% - 6px);margin:3px;border-radius:5px;background:0 0}@keyframes bounceIn{0%{opacity:0;transform:scale(.3)}50%{opacity:1;transform:scale(1.05)}70%{transform:scale(.9)}100%{transform:scale(1)}}.cdx-notify--bounce-in{animation-name:bounceIn;animation-duration:.6s;animation-iteration-count:1}.cdx-notify--success{background:#fafffe!important}.cdx-notify--success::before{background:#41ffb1!important}`,
                    '',
                ]);
            },
            function (t, n) {
                t.exports = function (i) {
                    var s = [];
                    return (
                        (s.toString = function () {
                            return this.map(function (r) {
                                var l = (function (a, c) {
                                    var h = a[1] || '',
                                        u = a[3];
                                    if (!u) return h;
                                    if (c && typeof btoa == 'function') {
                                        var p =
                                                ((m = u),
                                                '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,' +
                                                    btoa(
                                                        unescape(
                                                            encodeURIComponent(
                                                                JSON.stringify(
                                                                    m,
                                                                ),
                                                            ),
                                                        ),
                                                    ) +
                                                    ' */'),
                                            b = u.sources.map(function (k) {
                                                return (
                                                    '/*# sourceURL=' +
                                                    u.sourceRoot +
                                                    k +
                                                    ' */'
                                                );
                                            });
                                        return [h].concat(b).concat([p]).join(`
`);
                                    }
                                    var m;
                                    return [h].join(`
`);
                                })(r, i);
                                return r[2] ?
                                        '@media ' + r[2] + '{' + l + '}'
                                    :   l;
                            }).join('');
                        }),
                        (s.i = function (r, l) {
                            typeof r == 'string' && (r = [[null, r, '']]);
                            for (var a = {}, c = 0; c < this.length; c++) {
                                var h = this[c][0];
                                typeof h == 'number' && (a[h] = !0);
                            }
                            for (c = 0; c < r.length; c++) {
                                var u = r[c];
                                (typeof u[0] == 'number' && a[u[0]]) ||
                                    (l && !u[2] ?
                                        (u[2] = l)
                                    :   l &&
                                        (u[2] =
                                            '(' + u[2] + ') and (' + l + ')'),
                                    s.push(u));
                            }
                        }),
                        s
                    );
                };
            },
            function (t, n, i) {
                var s,
                    r,
                    l = {},
                    a =
                        ((s = function () {
                            return (
                                window &&
                                document &&
                                document.all &&
                                !window.atob
                            );
                        }),
                        function () {
                            return (
                                r === void 0 && (r = s.apply(this, arguments)),
                                r
                            );
                        }),
                    c = (function (T) {
                        var S = {};
                        return function (A) {
                            if (typeof A == 'function') return A();
                            if (S[A] === void 0) {
                                var $ = function (K) {
                                    return document.querySelector(K);
                                }.call(this, A);
                                if (
                                    window.HTMLIFrameElement &&
                                    $ instanceof window.HTMLIFrameElement
                                )
                                    try {
                                        $ = $.contentDocument.head;
                                    } catch {
                                        $ = null;
                                    }
                                S[A] = $;
                            }
                            return S[A];
                        };
                    })(),
                    h = null,
                    u = 0,
                    p = [],
                    b = i(5);
                function m(T, S) {
                    for (var A = 0; A < T.length; A++) {
                        var $ = T[A],
                            K = l[$.id];
                        if (K) {
                            K.refs++;
                            for (var W = 0; W < K.parts.length; W++)
                                K.parts[W]($.parts[W]);
                            for (; W < $.parts.length; W++)
                                K.parts.push(B($.parts[W], S));
                        } else {
                            var G = [];
                            for (W = 0; W < $.parts.length; W++)
                                G.push(B($.parts[W], S));
                            l[$.id] = { id: $.id, refs: 1, parts: G };
                        }
                    }
                }
                function k(T, S) {
                    for (var A = [], $ = {}, K = 0; K < T.length; K++) {
                        var W = T[K],
                            G = S.base ? W[0] + S.base : W[0],
                            L = { css: W[1], media: W[2], sourceMap: W[3] };
                        $[G] ?
                            $[G].parts.push(L)
                        :   A.push(($[G] = { id: G, parts: [L] }));
                    }
                    return A;
                }
                function y(T, S) {
                    var A = c(T.insertInto);
                    if (!A)
                        throw new Error(
                            "Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.",
                        );
                    var $ = p[p.length - 1];
                    if (T.insertAt === 'top')
                        $ ?
                            $.nextSibling ?
                                A.insertBefore(S, $.nextSibling)
                            :   A.appendChild(S)
                        :   A.insertBefore(S, A.firstChild),
                            p.push(S);
                    else if (T.insertAt === 'bottom') A.appendChild(S);
                    else {
                        if (typeof T.insertAt != 'object' || !T.insertAt.before)
                            throw new Error(`[Style Loader]

 Invalid value for parameter 'insertAt' ('options.insertAt') found.
 Must be 'top', 'bottom', or Object.
 (https://github.com/webpack-contrib/style-loader#insertat)
`);
                        var K = c(T.insertInto + ' ' + T.insertAt.before);
                        A.insertBefore(S, K);
                    }
                }
                function w(T) {
                    if (T.parentNode === null) return !1;
                    T.parentNode.removeChild(T);
                    var S = p.indexOf(T);
                    S >= 0 && p.splice(S, 1);
                }
                function E(T) {
                    var S = document.createElement('style');
                    return (
                        T.attrs.type === void 0 && (T.attrs.type = 'text/css'),
                        _(S, T.attrs),
                        y(T, S),
                        S
                    );
                }
                function _(T, S) {
                    Object.keys(S).forEach(function (A) {
                        T.setAttribute(A, S[A]);
                    });
                }
                function B(T, S) {
                    var A, $, K, W;
                    if (S.transform && T.css) {
                        if (!(W = S.transform(T.css))) return function () {};
                        T.css = W;
                    }
                    if (S.singleton) {
                        var G = u++;
                        (A = h || (h = E(S))),
                            ($ = H.bind(null, A, G, !1)),
                            (K = H.bind(null, A, G, !0));
                    } else
                        (
                            T.sourceMap &&
                            typeof URL == 'function' &&
                            typeof URL.createObjectURL == 'function' &&
                            typeof URL.revokeObjectURL == 'function' &&
                            typeof Blob == 'function' &&
                            typeof btoa == 'function'
                        ) ?
                            ((A = (function (L) {
                                var D = document.createElement('link');
                                return (
                                    L.attrs.type === void 0 &&
                                        (L.attrs.type = 'text/css'),
                                    (L.attrs.rel = 'stylesheet'),
                                    _(D, L.attrs),
                                    y(L, D),
                                    D
                                );
                            })(S)),
                            ($ = function (L, D, X) {
                                var te = X.css,
                                    M = X.sourceMap,
                                    N = D.convertToAbsoluteUrls === void 0 && M;
                                (D.convertToAbsoluteUrls || N) && (te = b(te)),
                                    M &&
                                        (te +=
                                            `
/*# sourceMappingURL=data:application/json;base64,` +
                                            btoa(
                                                unescape(
                                                    encodeURIComponent(
                                                        JSON.stringify(M),
                                                    ),
                                                ),
                                            ) +
                                            ' */');
                                var F = new Blob([te], { type: 'text/css' }),
                                    V = L.href;
                                (L.href = URL.createObjectURL(F)),
                                    V && URL.revokeObjectURL(V);
                            }.bind(null, A, S)),
                            (K = function () {
                                w(A), A.href && URL.revokeObjectURL(A.href);
                            }))
                        :   ((A = E(S)),
                            ($ = function (L, D) {
                                var X = D.css,
                                    te = D.media;
                                if (
                                    (te && L.setAttribute('media', te),
                                    L.styleSheet)
                                )
                                    L.styleSheet.cssText = X;
                                else {
                                    for (; L.firstChild; )
                                        L.removeChild(L.firstChild);
                                    L.appendChild(document.createTextNode(X));
                                }
                            }.bind(null, A)),
                            (K = function () {
                                w(A);
                            }));
                    return (
                        $(T),
                        function (L) {
                            if (L) {
                                if (
                                    L.css === T.css &&
                                    L.media === T.media &&
                                    L.sourceMap === T.sourceMap
                                )
                                    return;
                                $((T = L));
                            } else K();
                        }
                    );
                }
                t.exports = function (T, S) {
                    if (
                        typeof DEBUG < 'u' &&
                        DEBUG &&
                        typeof document != 'object'
                    )
                        throw new Error(
                            'The style-loader cannot be used in a non-browser environment',
                        );
                    ((S = S || {}).attrs =
                        typeof S.attrs == 'object' ? S.attrs : {}),
                        S.singleton ||
                            typeof S.singleton == 'boolean' ||
                            (S.singleton = a()),
                        S.insertInto || (S.insertInto = 'head'),
                        S.insertAt || (S.insertAt = 'bottom');
                    var A = k(T, S);
                    return (
                        m(A, S),
                        function ($) {
                            for (var K = [], W = 0; W < A.length; W++) {
                                var G = A[W];
                                (L = l[G.id]).refs--, K.push(L);
                            }
                            for ($ && m(k($, S), S), W = 0; W < K.length; W++) {
                                var L;
                                if ((L = K[W]).refs === 0) {
                                    for (var D = 0; D < L.parts.length; D++)
                                        L.parts[D]();
                                    delete l[L.id];
                                }
                            }
                        }
                    );
                };
                var O,
                    P =
                        ((O = []),
                        function (T, S) {
                            return (
                                (O[T] = S),
                                O.filter(Boolean).join(`
`)
                            );
                        });
                function H(T, S, A, $) {
                    var K = A ? '' : $.css;
                    if (T.styleSheet) T.styleSheet.cssText = P(S, K);
                    else {
                        var W = document.createTextNode(K),
                            G = T.childNodes;
                        G[S] && T.removeChild(G[S]),
                            G.length ?
                                T.insertBefore(W, G[S])
                            :   T.appendChild(W);
                    }
                }
            },
            function (t, n) {
                t.exports = function (i) {
                    var s = typeof window < 'u' && window.location;
                    if (!s) throw new Error('fixUrls requires window.location');
                    if (!i || typeof i != 'string') return i;
                    var r = s.protocol + '//' + s.host,
                        l = r + s.pathname.replace(/\/[^\/]*$/, '/');
                    return i.replace(
                        /url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,
                        function (a, c) {
                            var h,
                                u = c
                                    .trim()
                                    .replace(/^"(.*)"$/, function (p, b) {
                                        return b;
                                    })
                                    .replace(/^'(.*)'$/, function (p, b) {
                                        return b;
                                    });
                            return (
                                    /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(
                                        u,
                                    )
                                ) ?
                                    a
                                :   ((h =
                                        u.indexOf('//') === 0 ? u
                                        : u.indexOf('/') === 0 ? r + u
                                        : l + u.replace(/^\.\//, '')),
                                    'url(' + JSON.stringify(h) + ')');
                        },
                    );
                };
            },
            function (t, n, i) {
                var s, r, l, a, c, h, u, p, b;
                t.exports =
                    ((s = 'cdx-notifies'),
                    (r = 'cdx-notify'),
                    (l = 'cdx-notify__cross'),
                    (a = 'cdx-notify__button--confirm'),
                    (c = 'cdx-notify__button--cancel'),
                    (h = 'cdx-notify__input'),
                    (u = 'cdx-notify__button'),
                    (p = 'cdx-notify__btns-wrapper'),
                    {
                        alert: (b = function (m) {
                            var k = document.createElement('DIV'),
                                y = document.createElement('DIV'),
                                w = m.message,
                                E = m.style;
                            return (
                                k.classList.add(r),
                                E && k.classList.add(r + '--' + E),
                                (k.innerHTML = w),
                                y.classList.add(l),
                                y.addEventListener('click', k.remove.bind(k)),
                                k.appendChild(y),
                                k
                            );
                        }),
                        confirm: function (m) {
                            var k = b(m),
                                y = document.createElement('div'),
                                w = document.createElement('button'),
                                E = document.createElement('button'),
                                _ = k.querySelector('.' + l),
                                B = m.cancelHandler,
                                O = m.okHandler;
                            return (
                                y.classList.add(p),
                                (w.innerHTML = m.okText || 'Confirm'),
                                (E.innerHTML = m.cancelText || 'Cancel'),
                                w.classList.add(u),
                                E.classList.add(u),
                                w.classList.add(a),
                                E.classList.add(c),
                                B &&
                                    typeof B == 'function' &&
                                    (E.addEventListener('click', B),
                                    _.addEventListener('click', B)),
                                O &&
                                    typeof O == 'function' &&
                                    w.addEventListener('click', O),
                                w.addEventListener('click', k.remove.bind(k)),
                                E.addEventListener('click', k.remove.bind(k)),
                                y.appendChild(w),
                                y.appendChild(E),
                                k.appendChild(y),
                                k
                            );
                        },
                        prompt: function (m) {
                            var k = b(m),
                                y = document.createElement('div'),
                                w = document.createElement('button'),
                                E = document.createElement('input'),
                                _ = k.querySelector('.' + l),
                                B = m.cancelHandler,
                                O = m.okHandler;
                            return (
                                y.classList.add(p),
                                (w.innerHTML = m.okText || 'Ok'),
                                w.classList.add(u),
                                w.classList.add(a),
                                E.classList.add(h),
                                m.placeholder &&
                                    E.setAttribute(
                                        'placeholder',
                                        m.placeholder,
                                    ),
                                m.default && (E.value = m.default),
                                m.inputType && (E.type = m.inputType),
                                B &&
                                    typeof B == 'function' &&
                                    _.addEventListener('click', B),
                                O &&
                                    typeof O == 'function' &&
                                    w.addEventListener('click', function () {
                                        O(E.value);
                                    }),
                                w.addEventListener('click', k.remove.bind(k)),
                                y.appendChild(E),
                                y.appendChild(w),
                                k.appendChild(y),
                                k
                            );
                        },
                        getWrapper: function () {
                            var m = document.createElement('DIV');
                            return m.classList.add(s), m;
                        },
                    });
            },
        ]);
    });
})(Bu);
var gg = Bu.exports;
const mg = Er(gg);
class bg {
    show(e) {
        mg.show(e);
    }
}
class wg extends lt {
    constructor({ config: e, eventsDispatcher: t }) {
        super({ config: e, eventsDispatcher: t }), (this.notifier = new bg());
    }
    get methods() {
        return { show: (e) => this.show(e) };
    }
    show(e) {
        return this.notifier.show(e);
    }
}
class yg extends lt {
    get methods() {
        const e = () => this.isEnabled;
        return {
            toggle: (t) => this.toggle(t),
            get isEnabled() {
                return e();
            },
        };
    }
    toggle(e) {
        return this.Editor.ReadOnly.toggle(e);
    }
    get isEnabled() {
        return this.Editor.ReadOnly.isEnabled;
    }
}
var Iu = { exports: {} };
(function (o, e) {
    (function (t, n) {
        o.exports = n();
    })(zf, function () {
        function t(u) {
            var p = u.tags,
                b = Object.keys(p),
                m = b
                    .map(function (k) {
                        return typeof p[k];
                    })
                    .every(function (k) {
                        return (
                            k === 'object' ||
                            k === 'boolean' ||
                            k === 'function'
                        );
                    });
            if (!m) throw new Error('The configuration was invalid');
            this.config = u;
        }
        var n = [
            'P',
            'LI',
            'TD',
            'TH',
            'DIV',
            'H1',
            'H2',
            'H3',
            'H4',
            'H5',
            'H6',
            'PRE',
        ];
        function i(u) {
            return n.indexOf(u.nodeName) !== -1;
        }
        var s = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];
        function r(u) {
            return s.indexOf(u.nodeName) !== -1;
        }
        (t.prototype.clean = function (u) {
            const p = document.implementation.createHTMLDocument(),
                b = p.createElement('div');
            return (b.innerHTML = u), this._sanitize(p, b), b.innerHTML;
        }),
            (t.prototype._sanitize = function (u, p) {
                var b = l(u, p),
                    m = b.firstChild();
                if (m)
                    do {
                        if (m.nodeType === Node.TEXT_NODE)
                            if (
                                m.data.trim() === '' &&
                                ((m.previousElementSibling &&
                                    i(m.previousElementSibling)) ||
                                    (m.nextElementSibling &&
                                        i(m.nextElementSibling)))
                            ) {
                                p.removeChild(m), this._sanitize(u, p);
                                break;
                            } else continue;
                        if (m.nodeType === Node.COMMENT_NODE) {
                            p.removeChild(m), this._sanitize(u, p);
                            break;
                        }
                        var k = r(m),
                            y;
                        k && (y = Array.prototype.some.call(m.childNodes, i));
                        var w = !!p.parentNode,
                            E = i(p) && i(m) && w,
                            _ = m.nodeName.toLowerCase(),
                            B = a(this.config, _, m),
                            O = k && y;
                        if (
                            O ||
                            c(m, B) ||
                            (!this.config.keepNestedBlockElements && E)
                        ) {
                            if (
                                !(
                                    m.nodeName === 'SCRIPT' ||
                                    m.nodeName === 'STYLE'
                                )
                            )
                                for (; m.childNodes.length > 0; )
                                    p.insertBefore(m.childNodes[0], m);
                            p.removeChild(m), this._sanitize(u, p);
                            break;
                        }
                        for (var P = 0; P < m.attributes.length; P += 1) {
                            var H = m.attributes[P];
                            h(H, B, m) &&
                                (m.removeAttribute(H.name), (P = P - 1));
                        }
                        this._sanitize(u, m);
                    } while ((m = b.nextSibling()));
            });
        function l(u, p) {
            return u.createTreeWalker(
                p,
                NodeFilter.SHOW_TEXT |
                    NodeFilter.SHOW_ELEMENT |
                    NodeFilter.SHOW_COMMENT,
                null,
                !1,
            );
        }
        function a(u, p, b) {
            return typeof u.tags[p] == 'function' ? u.tags[p](b) : u.tags[p];
        }
        function c(u, p) {
            return (
                typeof p > 'u' ? !0
                : typeof p == 'boolean' ? !p
                : !1
            );
        }
        function h(u, p, b) {
            var m = u.name.toLowerCase();
            return (
                p === !0 ? !1
                : typeof p[m] == 'function' ? !p[m](u.value, b)
                : typeof p[m] > 'u' || p[m] === !1 ? !0
                : typeof p[m] == 'string' ? p[m] !== u.value
                : !1
            );
        }
        return t;
    });
})(Iu);
var vg = Iu.exports;
const kg = Er(vg);
function Al(o, e) {
    return o.map((t) => {
        const n = Mt(e) ? e(t.tool) : e;
        return jn(n) || (t.data = Ol(t.data, n)), t;
    });
}
function io(o, e = {}) {
    const t = { tags: e };
    return new kg(t).clean(o);
}
function Ol(o, e) {
    return (
        Array.isArray(o) ? _g(o, e)
        : tn(o) ? xg(o, e)
        : xo(o) ? Cg(o, e)
        : o
    );
}
function _g(o, e) {
    return o.map((t) => Ol(t, e));
}
function xg(o, e) {
    const t = {};
    for (const n in o) {
        if (!Object.prototype.hasOwnProperty.call(o, n)) continue;
        const i = o[n],
            s = Eg(e[n]) ? e[n] : e;
        t[n] = Ol(i, s);
    }
    return t;
}
function Cg(o, e) {
    return (
        tn(e) ? io(o, e)
        : e === !1 ? io(o, {})
        : o
    );
}
function Eg(o) {
    return tn(o) || Wf(o) || Mt(o);
}
class Tg extends lt {
    get methods() {
        return { clean: (e, t) => this.clean(e, t) };
    }
    clean(e, t) {
        return io(e, t);
    }
}
class Sg extends lt {
    get methods() {
        return { save: () => this.save() };
    }
    save() {
        const e = "Editor's content can not be saved in read-only mode";
        return this.Editor.ReadOnly.isEnabled ?
                (Dn(e, 'warn'), Promise.reject(new Error(e)))
            :   this.Editor.Saver.save();
    }
}
class Bg extends lt {
    constructor() {
        super(...arguments), (this.selectionUtils = new We());
    }
    get methods() {
        return {
            findParentTag: (e, t) => this.findParentTag(e, t),
            expandToTag: (e) => this.expandToTag(e),
            save: () => this.selectionUtils.save(),
            restore: () => this.selectionUtils.restore(),
            setFakeBackground: () => this.selectionUtils.setFakeBackground(),
            removeFakeBackground: () =>
                this.selectionUtils.removeFakeBackground(),
        };
    }
    findParentTag(e, t) {
        return this.selectionUtils.findParentTag(e, t);
    }
    expandToTag(e) {
        this.selectionUtils.expandToTag(e);
    }
}
class Ig extends lt {
    get methods() {
        return {
            getBlockTools: () =>
                Array.from(this.Editor.Tools.blockTools.values()),
        };
    }
}
class Lg extends lt {
    get classes() {
        return {
            block: 'cdx-block',
            inlineToolButton: 'ce-inline-tool',
            inlineToolButtonActive: 'ce-inline-tool--active',
            input: 'cdx-input',
            loader: 'cdx-loader',
            button: 'cdx-button',
            settingsButton: 'cdx-settings-button',
            settingsButtonActive: 'cdx-settings-button--active',
        };
    }
}
class Ag extends lt {
    get methods() {
        return {
            close: () => this.close(),
            open: () => this.open(),
            toggleBlockSettings: (e) => this.toggleBlockSettings(e),
            toggleToolbox: (e) => this.toggleToolbox(e),
        };
    }
    open() {
        this.Editor.Toolbar.moveAndOpen();
    }
    close() {
        this.Editor.Toolbar.close();
    }
    toggleBlockSettings(e) {
        if (this.Editor.BlockManager.currentBlockIndex === -1) {
            Dn(
                "Could't toggle the Toolbar because there is no block selected ",
                'warn',
            );
            return;
        }
        (e ?? !this.Editor.BlockSettings.opened) ?
            (this.Editor.Toolbar.moveAndOpen(),
            this.Editor.BlockSettings.open())
        :   this.Editor.BlockSettings.close();
    }
    toggleToolbox(e) {
        if (this.Editor.BlockManager.currentBlockIndex === -1) {
            Dn(
                "Could't toggle the Toolbox because there is no block selected ",
                'warn',
            );
            return;
        }
        (e ?? !this.Editor.Toolbar.toolbox.opened) ?
            (this.Editor.Toolbar.moveAndOpen(),
            this.Editor.Toolbar.toolbox.open())
        :   this.Editor.Toolbar.toolbox.close();
    }
}
var Lu = { exports: {} };
/*!
 * CodeX.Tooltips
 *
 * @version 1.0.5
 *
 * @licence MIT
 * @author CodeX <https://codex.so>
 *
 *
 */ (function (o, e) {
    (function (t, n) {
        o.exports = n();
    })(window, function () {
        return (function (t) {
            var n = {};
            function i(s) {
                if (n[s]) return n[s].exports;
                var r = (n[s] = { i: s, l: !1, exports: {} });
                return (
                    t[s].call(r.exports, r, r.exports, i), (r.l = !0), r.exports
                );
            }
            return (
                (i.m = t),
                (i.c = n),
                (i.d = function (s, r, l) {
                    i.o(s, r) ||
                        Object.defineProperty(s, r, { enumerable: !0, get: l });
                }),
                (i.r = function (s) {
                    typeof Symbol < 'u' &&
                        Symbol.toStringTag &&
                        Object.defineProperty(s, Symbol.toStringTag, {
                            value: 'Module',
                        }),
                        Object.defineProperty(s, '__esModule', { value: !0 });
                }),
                (i.t = function (s, r) {
                    if (
                        (1 & r && (s = i(s)),
                        8 & r ||
                            (4 & r &&
                                typeof s == 'object' &&
                                s &&
                                s.__esModule))
                    )
                        return s;
                    var l = Object.create(null);
                    if (
                        (i.r(l),
                        Object.defineProperty(l, 'default', {
                            enumerable: !0,
                            value: s,
                        }),
                        2 & r && typeof s != 'string')
                    )
                        for (var a in s)
                            i.d(
                                l,
                                a,
                                function (c) {
                                    return s[c];
                                }.bind(null, a),
                            );
                    return l;
                }),
                (i.n = function (s) {
                    var r =
                        s && s.__esModule ?
                            function () {
                                return s.default;
                            }
                        :   function () {
                                return s;
                            };
                    return i.d(r, 'a', r), r;
                }),
                (i.o = function (s, r) {
                    return Object.prototype.hasOwnProperty.call(s, r);
                }),
                (i.p = ''),
                i((i.s = 0))
            );
        })([
            function (t, n, i) {
                t.exports = i(1);
            },
            function (t, n, i) {
                i.r(n),
                    i.d(n, 'default', function () {
                        return s;
                    });
                class s {
                    constructor() {
                        (this.nodes = { wrapper: null, content: null }),
                            (this.showed = !1),
                            (this.offsetTop = 10),
                            (this.offsetLeft = 10),
                            (this.offsetRight = 10),
                            (this.hidingDelay = 0),
                            (this.handleWindowScroll = () => {
                                this.showed && this.hide(!0);
                            }),
                            this.loadStyles(),
                            this.prepare(),
                            window.addEventListener(
                                'scroll',
                                this.handleWindowScroll,
                                { passive: !0 },
                            );
                    }
                    get CSS() {
                        return {
                            tooltip: 'ct',
                            tooltipContent: 'ct__content',
                            tooltipShown: 'ct--shown',
                            placement: {
                                left: 'ct--left',
                                bottom: 'ct--bottom',
                                right: 'ct--right',
                                top: 'ct--top',
                            },
                        };
                    }
                    show(l, a, c) {
                        this.nodes.wrapper || this.prepare(),
                            this.hidingTimeout &&
                                clearTimeout(this.hidingTimeout);
                        const h = Object.assign(
                            {
                                placement: 'bottom',
                                marginTop: 0,
                                marginLeft: 0,
                                marginRight: 0,
                                marginBottom: 0,
                                delay: 70,
                                hidingDelay: 0,
                            },
                            c,
                        );
                        if (
                            (h.hidingDelay &&
                                (this.hidingDelay = h.hidingDelay),
                            (this.nodes.content.innerHTML = ''),
                            typeof a == 'string')
                        )
                            this.nodes.content.appendChild(
                                document.createTextNode(a),
                            );
                        else {
                            if (!(a instanceof Node))
                                throw Error(
                                    '[CodeX Tooltip] Wrong type of «content» passed. It should be an instance of Node or String. But ' +
                                        typeof a +
                                        ' given.',
                                );
                            this.nodes.content.appendChild(a);
                        }
                        switch (
                            (this.nodes.wrapper.classList.remove(
                                ...Object.values(this.CSS.placement),
                            ),
                            h.placement)
                        ) {
                            case 'top':
                                this.placeTop(l, h);
                                break;
                            case 'left':
                                this.placeLeft(l, h);
                                break;
                            case 'right':
                                this.placeRight(l, h);
                                break;
                            case 'bottom':
                            default:
                                this.placeBottom(l, h);
                        }
                        h && h.delay ?
                            (this.showingTimeout = setTimeout(() => {
                                this.nodes.wrapper.classList.add(
                                    this.CSS.tooltipShown,
                                ),
                                    (this.showed = !0);
                            }, h.delay))
                        :   (this.nodes.wrapper.classList.add(
                                this.CSS.tooltipShown,
                            ),
                            (this.showed = !0));
                    }
                    hide(l = !1) {
                        if (this.hidingDelay && !l)
                            return (
                                this.hidingTimeout &&
                                    clearTimeout(this.hidingTimeout),
                                void (this.hidingTimeout = setTimeout(() => {
                                    this.hide(!0);
                                }, this.hidingDelay))
                            );
                        this.nodes.wrapper.classList.remove(
                            this.CSS.tooltipShown,
                        ),
                            (this.showed = !1),
                            this.showingTimeout &&
                                clearTimeout(this.showingTimeout);
                    }
                    onHover(l, a, c) {
                        l.addEventListener('mouseenter', () => {
                            this.show(l, a, c);
                        }),
                            l.addEventListener('mouseleave', () => {
                                this.hide();
                            });
                    }
                    destroy() {
                        this.nodes.wrapper.remove(),
                            window.removeEventListener(
                                'scroll',
                                this.handleWindowScroll,
                            );
                    }
                    prepare() {
                        (this.nodes.wrapper = this.make(
                            'div',
                            this.CSS.tooltip,
                        )),
                            (this.nodes.content = this.make(
                                'div',
                                this.CSS.tooltipContent,
                            )),
                            this.append(this.nodes.wrapper, this.nodes.content),
                            this.append(document.body, this.nodes.wrapper);
                    }
                    loadStyles() {
                        const l = 'codex-tooltips-style';
                        if (document.getElementById(l)) return;
                        const a = i(2),
                            c = this.make('style', null, {
                                textContent: a.toString(),
                                id: l,
                            });
                        this.prepend(document.head, c);
                    }
                    placeBottom(l, a) {
                        const c = l.getBoundingClientRect(),
                            h =
                                c.left +
                                l.clientWidth / 2 -
                                this.nodes.wrapper.offsetWidth / 2,
                            u =
                                c.bottom +
                                window.pageYOffset +
                                this.offsetTop +
                                a.marginTop;
                        this.applyPlacement('bottom', h, u);
                    }
                    placeTop(l, a) {
                        const c = l.getBoundingClientRect(),
                            h =
                                c.left +
                                l.clientWidth / 2 -
                                this.nodes.wrapper.offsetWidth / 2,
                            u =
                                c.top +
                                window.pageYOffset -
                                this.nodes.wrapper.clientHeight -
                                this.offsetTop;
                        this.applyPlacement('top', h, u);
                    }
                    placeLeft(l, a) {
                        const c = l.getBoundingClientRect(),
                            h =
                                c.left -
                                this.nodes.wrapper.offsetWidth -
                                this.offsetLeft -
                                a.marginLeft,
                            u =
                                c.top +
                                window.pageYOffset +
                                l.clientHeight / 2 -
                                this.nodes.wrapper.offsetHeight / 2;
                        this.applyPlacement('left', h, u);
                    }
                    placeRight(l, a) {
                        const c = l.getBoundingClientRect(),
                            h = c.right + this.offsetRight + a.marginRight,
                            u =
                                c.top +
                                window.pageYOffset +
                                l.clientHeight / 2 -
                                this.nodes.wrapper.offsetHeight / 2;
                        this.applyPlacement('right', h, u);
                    }
                    applyPlacement(l, a, c) {
                        this.nodes.wrapper.classList.add(this.CSS.placement[l]),
                            (this.nodes.wrapper.style.left = a + 'px'),
                            (this.nodes.wrapper.style.top = c + 'px');
                    }
                    make(l, a = null, c = {}) {
                        const h = document.createElement(l);
                        Array.isArray(a) ?
                            h.classList.add(...a)
                        :   a && h.classList.add(a);
                        for (const u in c) c.hasOwnProperty(u) && (h[u] = c[u]);
                        return h;
                    }
                    append(l, a) {
                        Array.isArray(a) ?
                            a.forEach((c) => l.appendChild(c))
                        :   l.appendChild(a);
                    }
                    prepend(l, a) {
                        Array.isArray(a) ?
                            (a = a.reverse()).forEach((c) => l.prepend(c))
                        :   l.prepend(a);
                    }
                }
            },
            function (t, n) {
                t.exports = `.ct{z-index:999;opacity:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;-webkit-transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1),-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);will-change:opacity,top,left;-webkit-box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);border-radius:9px}.ct,.ct:before{position:absolute;top:0;left:0}.ct:before{content:"";bottom:0;right:0;background-color:#1d202b;z-index:-1;border-radius:4px}@supports(-webkit-mask-box-image:url("")){.ct:before{border-radius:0;-webkit-mask-box-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M10.71 0h2.58c3.02 0 4.64.42 6.1 1.2a8.18 8.18 0 013.4 3.4C23.6 6.07 24 7.7 24 10.71v2.58c0 3.02-.42 4.64-1.2 6.1a8.18 8.18 0 01-3.4 3.4c-1.47.8-3.1 1.21-6.11 1.21H10.7c-3.02 0-4.64-.42-6.1-1.2a8.18 8.18 0 01-3.4-3.4C.4 17.93 0 16.3 0 13.29V10.7c0-3.02.42-4.64 1.2-6.1a8.18 8.18 0 013.4-3.4C6.07.4 7.7 0 10.71 0z"/></svg>') 48% 41% 37.9% 53.3%}}@media (--mobile){.ct{display:none}}.ct__content{padding:6px 10px;color:#cdd1e0;font-size:12px;text-align:center;letter-spacing:.02em;line-height:1em}.ct:after{content:"";width:8px;height:8px;position:absolute;background-color:#1d202b;z-index:-1}.ct--bottom{-webkit-transform:translateY(5px);transform:translateY(5px)}.ct--bottom:after{top:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--top{-webkit-transform:translateY(-5px);transform:translateY(-5px)}.ct--top:after{top:auto;bottom:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--left{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.ct--left:after{top:50%;left:auto;right:0;-webkit-transform:translate(41.6%,-50%) rotate(-45deg);transform:translate(41.6%,-50%) rotate(-45deg)}.ct--right{-webkit-transform:translateX(5px);transform:translateX(5px)}.ct--right:after{top:50%;left:0;-webkit-transform:translate(-41.6%,-50%) rotate(-45deg);transform:translate(-41.6%,-50%) rotate(-45deg)}.ct--shown{opacity:1;-webkit-transform:none;transform:none}`;
            },
        ]).default;
    });
})(Lu);
var Og = Lu.exports;
const Mg = Er(Og);
let Wn = null;
function Ml() {
    Wn || (Wn = new Mg());
}
function Pg(o, e, t) {
    Ml(), Wn?.show(o, e, t);
}
function dr(o = !1) {
    Ml(), Wn?.hide(o);
}
function ur(o, e, t) {
    Ml(), Wn?.onHover(o, e, t);
}
function Ng() {
    Wn?.destroy(), (Wn = null);
}
class Rg extends lt {
    constructor({ config: e, eventsDispatcher: t }) {
        super({ config: e, eventsDispatcher: t });
    }
    get methods() {
        return {
            show: (e, t, n) => this.show(e, t, n),
            hide: () => this.hide(),
            onHover: (e, t, n) => this.onHover(e, t, n),
        };
    }
    show(e, t, n) {
        Pg(e, t, n);
    }
    hide() {
        dr();
    }
    onHover(e, t, n) {
        ur(e, t, n);
    }
}
class Dg extends lt {
    get methods() {
        return { nodes: this.editorNodes };
    }
    get editorNodes() {
        return {
            wrapper: this.Editor.UI.nodes.wrapper,
            redactor: this.Editor.UI.nodes.redactor,
        };
    }
}
function Au(o, e) {
    const t = {};
    return (
        Object.entries(o).forEach(([n, i]) => {
            if (tn(i)) {
                const s = e ? `${e}.${n}` : n;
                Object.values(i).every((r) => xo(r)) ?
                    (t[n] = s)
                :   (t[n] = Au(i, s));
                return;
            }
            t[n] = i;
        }),
        t
    );
}
const Ln = Au(wu);
function Fg(o, e) {
    const t = {};
    return (
        Object.keys(o).forEach((n) => {
            const i = e[n];
            i !== void 0 ? (t[i] = o[n]) : (t[n] = o[n]);
        }),
        t
    );
}
const Ou = class ks {
    constructor(e, t) {
        (this.cursor = -1),
            (this.items = []),
            (this.items = e || []),
            (this.focusedCssClass = t);
    }
    get currentItem() {
        return this.cursor === -1 ? null : this.items[this.cursor];
    }
    setCursor(e) {
        e < this.items.length &&
            e >= -1 &&
            (this.dropCursor(),
            (this.cursor = e),
            this.items[this.cursor].classList.add(this.focusedCssClass));
    }
    setItems(e) {
        this.items = e;
    }
    next() {
        this.cursor = this.leafNodesAndReturnIndex(ks.directions.RIGHT);
    }
    previous() {
        this.cursor = this.leafNodesAndReturnIndex(ks.directions.LEFT);
    }
    dropCursor() {
        this.cursor !== -1 &&
            (this.items[this.cursor].classList.remove(this.focusedCssClass),
            (this.cursor = -1));
    }
    leafNodesAndReturnIndex(e) {
        if (this.items.length === 0) return this.cursor;
        let t = this.cursor;
        return (
            t === -1 ?
                (t = e === ks.directions.RIGHT ? -1 : 0)
            :   this.items[t].classList.remove(this.focusedCssClass),
            e === ks.directions.RIGHT ?
                (t = (t + 1) % this.items.length)
            :   (t = (this.items.length + t - 1) % this.items.length),
            oe.canSetCaret(this.items[t]) &&
                ar(() => We.setCursor(this.items[t]), 50)(),
            this.items[t].classList.add(this.focusedCssClass),
            t
        );
    }
};
Ou.directions = { RIGHT: 'right', LEFT: 'left' };
let ps = Ou;
class hi {
    constructor(e) {
        (this.iterator = null),
            (this.activated = !1),
            (this.flipCallbacks = []),
            (this.onKeyDown = (t) => {
                if (this.isEventReadyForHandling(t))
                    switch (
                        (hi.usedKeys.includes(t.keyCode) && t.preventDefault(),
                        t.keyCode)
                    ) {
                        case Ve.TAB:
                            this.handleTabPress(t);
                            break;
                        case Ve.LEFT:
                        case Ve.UP:
                            this.flipLeft();
                            break;
                        case Ve.RIGHT:
                        case Ve.DOWN:
                            this.flipRight();
                            break;
                        case Ve.ENTER:
                            this.handleEnterPress(t);
                            break;
                    }
            }),
            (this.iterator = new ps(e.items, e.focusedItemClass)),
            (this.activateCallback = e.activateCallback),
            (this.allowedKeys = e.allowedKeys || hi.usedKeys);
    }
    get isActivated() {
        return this.activated;
    }
    static get usedKeys() {
        return [Ve.TAB, Ve.LEFT, Ve.RIGHT, Ve.ENTER, Ve.UP, Ve.DOWN];
    }
    activate(e, t) {
        (this.activated = !0),
            e && this.iterator.setItems(e),
            t !== void 0 && this.iterator.setCursor(t),
            document.addEventListener('keydown', this.onKeyDown, !0);
    }
    deactivate() {
        (this.activated = !1),
            this.dropCursor(),
            document.removeEventListener('keydown', this.onKeyDown);
    }
    focusFirst() {
        this.dropCursor(), this.flipRight();
    }
    flipLeft() {
        this.iterator.previous(), this.flipCallback();
    }
    flipRight() {
        this.iterator.next(), this.flipCallback();
    }
    hasFocus() {
        return !!this.iterator.currentItem;
    }
    onFlip(e) {
        this.flipCallbacks.push(e);
    }
    removeOnFlip(e) {
        this.flipCallbacks = this.flipCallbacks.filter((t) => t !== e);
    }
    dropCursor() {
        this.iterator.dropCursor();
    }
    isEventReadyForHandling(e) {
        return this.activated && this.allowedKeys.includes(e.keyCode);
    }
    handleTabPress(e) {
        switch (e.shiftKey ? ps.directions.LEFT : ps.directions.RIGHT) {
            case ps.directions.RIGHT:
                this.flipRight();
                break;
            case ps.directions.LEFT:
                this.flipLeft();
                break;
        }
    }
    handleEnterPress(e) {
        this.activated &&
            (this.iterator.currentItem &&
                (e.stopPropagation(),
                e.preventDefault(),
                this.iterator.currentItem.click()),
            Mt(this.activateCallback) &&
                this.activateCallback(this.iterator.currentItem));
    }
    flipCallback() {
        this.iterator.currentItem &&
            this.iterator.currentItem.scrollIntoViewIfNeeded(),
            this.flipCallbacks.forEach((e) => e());
    }
}
const Hg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 12L9 7.1C9 7.04477 9.04477 7 9.1 7H10.4C11.5 7 14 7.1 14 9.5C14 9.5 14 12 11 12M9 12V16.8C9 16.9105 9.08954 17 9.2 17H12.5C14 17 15 16 15 14.5C15 11.7046 11 12 11 12M9 12H11"/></svg>',
    zg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 10L11.8586 14.8586C11.9367 14.9367 12.0633 14.9367 12.1414 14.8586L17 10"/></svg>',
    Ug =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.5 17.5L9.64142 12.6414C9.56331 12.5633 9.56331 12.4367 9.64142 12.3586L14.5 7.5"/></svg>',
    jg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9.58284 17.5L14.4414 12.6414C14.5195 12.5633 14.5195 12.4367 14.4414 12.3586L9.58284 7.5"/></svg>',
    $g =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 15L11.8586 10.1414C11.9367 10.0633 12.0633 10.0633 12.1414 10.1414L17 15"/></svg>',
    Wg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>',
    Gg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="4" stroke="currentColor" stroke-width="2"/></svg>',
    qg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M13.34 10C12.4223 12.7337 11 17 11 17"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.21 7H14.2"/></svg>',
    _a =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.69998 12.6L7.67896 12.62C6.53993 13.7048 6.52012 15.5155 7.63516 16.625V16.625C8.72293 17.7073 10.4799 17.7102 11.5712 16.6314L13.0263 15.193C14.0703 14.1609 14.2141 12.525 13.3662 11.3266L13.22 11.12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16.22 11.12L16.3564 10.9805C17.2895 10.0265 17.3478 8.5207 16.4914 7.49733V7.49733C15.5691 6.39509 13.9269 6.25143 12.8271 7.17675L11.3901 8.38588C10.0935 9.47674 9.95706 11.4241 11.0888 12.6852L11.12 12.72"/></svg>',
    Vg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 7.29999H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 7.29999H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.30999 12H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 12H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 16.7H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 16.7H14.59"/></svg>',
    Yg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>',
    Mu =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M11.5 17.5L5 11M5 11V15.5M5 11H9.5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12.5 6.5L19 13M19 13V8.5M19 13H14.5"/></svg>',
    Kg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="10.5" cy="10.5" r="5.5" stroke="currentColor" stroke-width="2"/><line x1="15.4142" x2="19" y1="15" y2="18.5858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>',
    Xg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M15.7795 11.5C15.7795 11.5 16.053 11.1962 16.5497 10.6722C17.4442 9.72856 17.4701 8.2475 16.5781 7.30145V7.30145C15.6482 6.31522 14.0873 6.29227 13.1288 7.25073L11.8796 8.49999"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8.24517 12.3883C8.24517 12.3883 7.97171 12.6922 7.47504 13.2161C6.58051 14.1598 6.55467 15.6408 7.44666 16.5869V16.5869C8.37653 17.5731 9.93744 17.5961 10.8959 16.6376L12.1452 15.3883"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17.7802 15.1032L16.597 14.9422C16.0109 14.8624 15.4841 15.3059 15.4627 15.8969L15.4199 17.0818"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6.39064 9.03238L7.58432 9.06668C8.17551 9.08366 8.6522 8.58665 8.61056 7.99669L8.5271 6.81397"/><line x1="12.1142" x2="11.7" y1="12.2" y2="11.7858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>',
    Zg =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><line x1="12" x2="12" y1="9" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 15.02V15.01"/></svg>',
    Jg = '__',
    Qg = '--';
function zo(o) {
    return (e, t) =>
        [[o, e].filter((n) => !!n).join(Jg), t].filter((n) => !!n).join(Qg);
}
const fs = zo('ce-hint'),
    gs = {
        root: fs(),
        alignedStart: fs(null, 'align-left'),
        alignedCenter: fs(null, 'align-center'),
        title: fs('title'),
        description: fs('description'),
    };
class em {
    constructor(e) {
        (this.nodes = {
            root: oe.make('div', [
                gs.root,
                e.alignment === 'center' ? gs.alignedCenter : gs.alignedStart,
            ]),
            title: oe.make('div', gs.title, { textContent: e.title }),
        }),
            this.nodes.root.appendChild(this.nodes.title),
            e.description !== void 0 &&
                ((this.nodes.description = oe.make('div', gs.description, {
                    textContent: e.description,
                })),
                this.nodes.root.appendChild(this.nodes.description));
    }
    getElement() {
        return this.nodes.root;
    }
}
class Pl {
    constructor(e) {
        this.params = e;
    }
    get name() {
        if (this.params !== void 0 && 'name' in this.params)
            return this.params.name;
    }
    destroy() {
        dr();
    }
    onChildrenOpen() {
        var e;
        this.params !== void 0 &&
            'children' in this.params &&
            typeof ((e = this.params.children) == null ? void 0 : e.onOpen) ==
                'function' &&
            this.params.children.onOpen();
    }
    onChildrenClose() {
        var e;
        this.params !== void 0 &&
            'children' in this.params &&
            typeof ((e = this.params.children) == null ? void 0 : e.onClose) ==
                'function' &&
            this.params.children.onClose();
    }
    handleClick() {
        var e, t;
        this.params !== void 0 &&
            'onActivate' in this.params &&
            ((t = (e = this.params).onActivate) == null ||
                t.call(e, this.params));
    }
    addHint(e, t) {
        const n = new em(t);
        ur(e, n.getElement(), { placement: t.position, hidingDelay: 100 });
    }
    get children() {
        var e;
        return (
                this.params !== void 0 &&
                    'children' in this.params &&
                    ((e = this.params.children) == null ? void 0 : e.items) !==
                        void 0
            ) ?
                this.params.children.items
            :   [];
    }
    get hasChildren() {
        return this.children.length > 0;
    }
    get isChildrenOpen() {
        var e;
        return (
            this.params !== void 0 &&
            'children' in this.params &&
            ((e = this.params.children) == null ? void 0 : e.isOpen) === !0
        );
    }
    get isChildrenFlippable() {
        var e;
        return !(
            this.params === void 0 ||
            !('children' in this.params) ||
            ((e = this.params.children) == null ? void 0 : e.isFlippable) === !1
        );
    }
    get isChildrenSearchable() {
        var e;
        return (
            this.params !== void 0 &&
            'children' in this.params &&
            ((e = this.params.children) == null ? void 0 : e.searchable) === !0
        );
    }
    get closeOnActivate() {
        return (
            this.params !== void 0 &&
            'closeOnActivate' in this.params &&
            this.params.closeOnActivate
        );
    }
    get isActive() {
        return (
            this.params === void 0 || !('isActive' in this.params) ? !1
            : typeof this.params.isActive == 'function' ? this.params.isActive()
            : this.params.isActive === !0
        );
    }
}
const Cn = zo('ce-popover-item'),
    Ft = {
        container: Cn(),
        active: Cn(null, 'active'),
        disabled: Cn(null, 'disabled'),
        focused: Cn(null, 'focused'),
        hidden: Cn(null, 'hidden'),
        confirmationState: Cn(null, 'confirmation'),
        noHover: Cn(null, 'no-hover'),
        noFocus: Cn(null, 'no-focus'),
        title: Cn('title'),
        secondaryTitle: Cn('secondary-title'),
        icon: Cn('icon'),
        iconTool: Cn('icon', 'tool'),
        iconChevronRight: Cn('icon', 'chevron-right'),
        wobbleAnimation: zo('wobble')(),
    };
class ii extends Pl {
    constructor(e, t) {
        super(e),
            (this.params = e),
            (this.nodes = { root: null, icon: null }),
            (this.confirmationState = null),
            (this.removeSpecialFocusBehavior = () => {
                var n;
                (n = this.nodes.root) == null || n.classList.remove(Ft.noFocus);
            }),
            (this.removeSpecialHoverBehavior = () => {
                var n;
                (n = this.nodes.root) == null || n.classList.remove(Ft.noHover);
            }),
            (this.onErrorAnimationEnd = () => {
                var n, i;
                (n = this.nodes.icon) == null ||
                    n.classList.remove(Ft.wobbleAnimation),
                    (i = this.nodes.icon) == null ||
                        i.removeEventListener(
                            'animationend',
                            this.onErrorAnimationEnd,
                        );
            }),
            (this.nodes.root = this.make(e, t));
    }
    get isDisabled() {
        return this.params.isDisabled === !0;
    }
    get toggle() {
        return this.params.toggle;
    }
    get title() {
        return this.params.title;
    }
    get isConfirmationStateEnabled() {
        return this.confirmationState !== null;
    }
    get isFocused() {
        return this.nodes.root === null ?
                !1
            :   this.nodes.root.classList.contains(Ft.focused);
    }
    getElement() {
        return this.nodes.root;
    }
    handleClick() {
        if (
            this.isConfirmationStateEnabled &&
            this.confirmationState !== null
        ) {
            this.activateOrEnableConfirmationMode(this.confirmationState);
            return;
        }
        this.activateOrEnableConfirmationMode(this.params);
    }
    toggleActive(e) {
        var t;
        (t = this.nodes.root) == null || t.classList.toggle(Ft.active, e);
    }
    toggleHidden(e) {
        var t;
        (t = this.nodes.root) == null || t.classList.toggle(Ft.hidden, e);
    }
    reset() {
        this.isConfirmationStateEnabled && this.disableConfirmationMode();
    }
    onFocus() {
        this.disableSpecialHoverAndFocusBehavior();
    }
    make(e, t) {
        var n, i;
        const s = t?.wrapperTag || 'div',
            r = oe.make(s, Ft.container, {
                type: s === 'button' ? 'button' : void 0,
            });
        return (
            e.name && (r.dataset.itemName = e.name),
            (this.nodes.icon = oe.make('div', [Ft.icon, Ft.iconTool], {
                innerHTML: e.icon || Gg,
            })),
            r.appendChild(this.nodes.icon),
            e.title !== void 0 &&
                r.appendChild(
                    oe.make('div', Ft.title, { innerHTML: e.title || '' }),
                ),
            e.secondaryLabel &&
                r.appendChild(
                    oe.make('div', Ft.secondaryTitle, {
                        textContent: e.secondaryLabel,
                    }),
                ),
            this.hasChildren &&
                r.appendChild(
                    oe.make('div', [Ft.icon, Ft.iconChevronRight], {
                        innerHTML: jg,
                    }),
                ),
            this.isActive && r.classList.add(Ft.active),
            e.isDisabled && r.classList.add(Ft.disabled),
            e.hint !== void 0 &&
                ((n = t?.hint) == null ? void 0 : n.enabled) !== !1 &&
                this.addHint(r, {
                    ...e.hint,
                    position:
                        ((i = t?.hint) == null ? void 0 : i.position) ||
                        'right',
                }),
            r
        );
    }
    enableConfirmationMode(e) {
        if (this.nodes.root === null) return;
        const t = {
                ...this.params,
                ...e,
                confirmation: 'confirmation' in e ? e.confirmation : void 0,
            },
            n = this.make(t);
        (this.nodes.root.innerHTML = n.innerHTML),
            this.nodes.root.classList.add(Ft.confirmationState),
            (this.confirmationState = e),
            this.enableSpecialHoverAndFocusBehavior();
    }
    disableConfirmationMode() {
        if (this.nodes.root === null) return;
        const e = this.make(this.params);
        (this.nodes.root.innerHTML = e.innerHTML),
            this.nodes.root.classList.remove(Ft.confirmationState),
            (this.confirmationState = null),
            this.disableSpecialHoverAndFocusBehavior();
    }
    enableSpecialHoverAndFocusBehavior() {
        var e, t, n;
        (e = this.nodes.root) == null || e.classList.add(Ft.noHover),
            (t = this.nodes.root) == null || t.classList.add(Ft.noFocus),
            (n = this.nodes.root) == null ||
                n.addEventListener(
                    'mouseleave',
                    this.removeSpecialHoverBehavior,
                    { once: !0 },
                );
    }
    disableSpecialHoverAndFocusBehavior() {
        var e;
        this.removeSpecialFocusBehavior(),
            this.removeSpecialHoverBehavior(),
            (e = this.nodes.root) == null ||
                e.removeEventListener(
                    'mouseleave',
                    this.removeSpecialHoverBehavior,
                );
    }
    activateOrEnableConfirmationMode(e) {
        var t;
        if (!('confirmation' in e) || e.confirmation === void 0)
            try {
                (t = e.onActivate) == null || t.call(e, e),
                    this.disableConfirmationMode();
            } catch {
                this.animateError();
            }
        else this.enableConfirmationMode(e.confirmation);
    }
    animateError() {
        var e, t, n;
        ((e = this.nodes.icon) != null &&
            e.classList.contains(Ft.wobbleAnimation)) ||
            ((t = this.nodes.icon) == null ||
                t.classList.add(Ft.wobbleAnimation),
            (n = this.nodes.icon) == null ||
                n.addEventListener('animationend', this.onErrorAnimationEnd));
    }
}
const Or = zo('ce-popover-item-separator'),
    Mr = { container: Or(), line: Or('line'), hidden: Or(null, 'hidden') };
class Pu extends Pl {
    constructor() {
        super(),
            (this.nodes = {
                root: oe.make('div', Mr.container),
                line: oe.make('div', Mr.line),
            }),
            this.nodes.root.appendChild(this.nodes.line);
    }
    getElement() {
        return this.nodes.root;
    }
    toggleHidden(e) {
        var t;
        (t = this.nodes.root) == null || t.classList.toggle(Mr.hidden, e);
    }
}
var ao = ((o) => (
    (o.Closed = 'closed'), (o.ClosedOnActivate = 'closed-on-activate'), o
))(ao || {});
const rn = zo('ce-popover'),
    Ut = {
        popover: rn(),
        popoverContainer: rn('container'),
        popoverOpenTop: rn(null, 'open-top'),
        popoverOpenLeft: rn(null, 'open-left'),
        popoverOpened: rn(null, 'opened'),
        search: rn('search'),
        nothingFoundMessage: rn('nothing-found-message'),
        nothingFoundMessageDisplayed: rn('nothing-found-message', 'displayed'),
        items: rn('items'),
        overlay: rn('overlay'),
        overlayHidden: rn('overlay', 'hidden'),
        popoverNested: rn(null, 'nested'),
        getPopoverNestedClass: (o) => rn(null, `nested-level-${o.toString()}`),
        popoverInline: rn(null, 'inline'),
        popoverHeader: rn('header'),
    };
var Mi = ((o) => (
    (o.NestingLevel = '--nesting-level'),
    (o.PopoverHeight = '--popover-height'),
    (o.InlinePopoverWidth = '--inline-popover-width'),
    (o.TriggerItemLeft = '--trigger-item-left'),
    (o.TriggerItemTop = '--trigger-item-top'),
    o
))(Mi || {});
const xa = zo('ce-popover-item-html'),
    Ca = { root: xa(), hidden: xa(null, 'hidden') };
class As extends Pl {
    constructor(e, t) {
        var n, i;
        super(e),
            (this.nodes = { root: oe.make('div', Ca.root) }),
            this.nodes.root.appendChild(e.element),
            e.name && (this.nodes.root.dataset.itemName = e.name),
            e.hint !== void 0 &&
                ((n = t?.hint) == null ? void 0 : n.enabled) !== !1 &&
                this.addHint(this.nodes.root, {
                    ...e.hint,
                    position:
                        ((i = t?.hint) == null ? void 0 : i.position) ||
                        'right',
                });
    }
    getElement() {
        return this.nodes.root;
    }
    toggleHidden(e) {
        var t;
        (t = this.nodes.root) == null || t.classList.toggle(Ca.hidden, e);
    }
    getControls() {
        const e = this.nodes.root.querySelectorAll(
            `button, ${oe.allInputsSelector}`,
        );
        return Array.from(e);
    }
}
class Nu extends Rs {
    constructor(e, t = {}) {
        super(),
            (this.params = e),
            (this.itemsRenderParams = t),
            (this.listeners = new Ds()),
            (this.messages = {
                nothingFound: 'Nothing found',
                search: 'Search',
            }),
            (this.items = this.buildItems(e.items)),
            e.messages && (this.messages = { ...this.messages, ...e.messages }),
            (this.nodes = {}),
            (this.nodes.popoverContainer = oe.make('div', [
                Ut.popoverContainer,
            ])),
            (this.nodes.nothingFoundMessage = oe.make(
                'div',
                [Ut.nothingFoundMessage],
                { textContent: this.messages.nothingFound },
            )),
            this.nodes.popoverContainer.appendChild(
                this.nodes.nothingFoundMessage,
            ),
            (this.nodes.items = oe.make('div', [Ut.items])),
            this.items.forEach((n) => {
                const i = n.getElement();
                i !== null && this.nodes.items.appendChild(i);
            }),
            this.nodes.popoverContainer.appendChild(this.nodes.items),
            this.listeners.on(this.nodes.popoverContainer, 'click', (n) =>
                this.handleClick(n),
            ),
            (this.nodes.popover = oe.make('div', [
                Ut.popover,
                this.params.class,
            ])),
            this.nodes.popover.appendChild(this.nodes.popoverContainer);
    }
    get itemsDefault() {
        return this.items.filter((e) => e instanceof ii);
    }
    getElement() {
        return this.nodes.popover;
    }
    show() {
        this.nodes.popover.classList.add(Ut.popoverOpened),
            this.search !== void 0 && this.search.focus();
    }
    hide() {
        this.nodes.popover.classList.remove(Ut.popoverOpened),
            this.nodes.popover.classList.remove(Ut.popoverOpenTop),
            this.itemsDefault.forEach((e) => e.reset()),
            this.search !== void 0 && this.search.clear(),
            this.emit(ao.Closed);
    }
    destroy() {
        var e;
        this.items.forEach((t) => t.destroy()),
            this.nodes.popover.remove(),
            this.listeners.removeAll(),
            (e = this.search) == null || e.destroy();
    }
    activateItemByName(e) {
        const t = this.items.find((n) => n.name === e);
        this.handleItemClick(t);
    }
    buildItems(e) {
        return e.map((t) => {
            switch (t.type) {
                case Tt.Separator:
                    return new Pu();
                case Tt.Html:
                    return new As(t, this.itemsRenderParams[Tt.Html]);
                default:
                    return new ii(t, this.itemsRenderParams[Tt.Default]);
            }
        });
    }
    getTargetItem(e) {
        return this.items
            .filter((t) => t instanceof ii || t instanceof As)
            .find((t) => {
                const n = t.getElement();
                return n === null ? !1 : e.composedPath().includes(n);
            });
    }
    handleItemClick(e) {
        if (!('isDisabled' in e && e.isDisabled)) {
            if (e.hasChildren) {
                this.showNestedItems(e),
                    'handleClick' in e &&
                        typeof e.handleClick == 'function' &&
                        e.handleClick();
                return;
            }
            this.itemsDefault.filter((t) => t !== e).forEach((t) => t.reset()),
                'handleClick' in e &&
                    typeof e.handleClick == 'function' &&
                    e.handleClick(),
                this.toggleItemActivenessIfNeeded(e),
                e.closeOnActivate &&
                    (this.hide(), this.emit(ao.ClosedOnActivate));
        }
    }
    handleClick(e) {
        const t = this.getTargetItem(e);
        t !== void 0 && this.handleItemClick(t);
    }
    toggleItemActivenessIfNeeded(e) {
        if (
            e instanceof ii &&
            (e.toggle === !0 && e.toggleActive(), typeof e.toggle == 'string')
        ) {
            const t = this.itemsDefault.filter((n) => n.toggle === e.toggle);
            if (t.length === 1) {
                e.toggleActive();
                return;
            }
            t.forEach((n) => {
                n.toggleActive(n === e);
            });
        }
    }
}
var pr = ((o) => ((o.Search = 'search'), o))(pr || {});
const Pr = zo('cdx-search-field'),
    Nr = { wrapper: Pr(), icon: Pr('icon'), input: Pr('input') };
class tm extends Rs {
    constructor({ items: e, placeholder: t }) {
        super(),
            (this.listeners = new Ds()),
            (this.items = e),
            (this.wrapper = oe.make('div', Nr.wrapper));
        const n = oe.make('div', Nr.icon, { innerHTML: Kg });
        (this.input = oe.make('input', Nr.input, {
            placeholder: t,
            tabIndex: -1,
        })),
            this.wrapper.appendChild(n),
            this.wrapper.appendChild(this.input),
            this.listeners.on(this.input, 'input', () => {
                (this.searchQuery = this.input.value),
                    this.emit(pr.Search, {
                        query: this.searchQuery,
                        items: this.foundItems,
                    });
            });
    }
    getElement() {
        return this.wrapper;
    }
    focus() {
        this.input.focus();
    }
    clear() {
        (this.input.value = ''),
            (this.searchQuery = ''),
            this.emit(pr.Search, { query: '', items: this.foundItems });
    }
    destroy() {
        this.listeners.removeAll();
    }
    get foundItems() {
        return this.items.filter((e) => this.checkItem(e));
    }
    checkItem(e) {
        var t, n;
        const i = ((t = e.title) == null ? void 0 : t.toLowerCase()) || '',
            s = (n = this.searchQuery) == null ? void 0 : n.toLowerCase();
        return s !== void 0 ? i.includes(s) : !1;
    }
}
var nm = Object.defineProperty,
    om = Object.getOwnPropertyDescriptor,
    im = (o, e, t, n) => {
        for (var i = om(e, t), s = o.length - 1, r; s >= 0; s--)
            (r = o[s]) && (i = r(e, t, i) || i);
        return i && nm(e, t, i), i;
    };
const Ru = class Du extends Nu {
    constructor(e, t) {
        super(e, t),
            (this.nestingLevel = 0),
            (this.nestedPopoverTriggerItem = null),
            (this.previouslyHoveredItem = null),
            (this.scopeElement = document.body),
            (this.hide = () => {
                var n;
                super.hide(),
                    this.destroyNestedPopoverIfExists(),
                    (n = this.flipper) == null || n.deactivate(),
                    (this.previouslyHoveredItem = null);
            }),
            (this.onFlip = () => {
                const n = this.itemsDefault.find((i) => i.isFocused);
                n?.onFocus();
            }),
            (this.onSearch = (n) => {
                var i;
                const s = n.query === '',
                    r = n.items.length === 0;
                this.items.forEach((a) => {
                    let c = !1;
                    a instanceof ii ?
                        (c = !n.items.includes(a))
                    :   (a instanceof Pu || a instanceof As) && (c = r || !s),
                        a.toggleHidden(c);
                }),
                    this.toggleNothingFoundMessage(r);
                const l =
                    n.query === '' ?
                        this.flippableElements
                    :   n.items.map((a) => a.getElement());
                (i = this.flipper) != null &&
                    i.isActivated &&
                    (this.flipper.deactivate(), this.flipper.activate(l));
            }),
            e.nestingLevel !== void 0 && (this.nestingLevel = e.nestingLevel),
            this.nestingLevel > 0 &&
                this.nodes.popover.classList.add(Ut.popoverNested),
            e.scopeElement !== void 0 && (this.scopeElement = e.scopeElement),
            this.nodes.popoverContainer !== null &&
                this.listeners.on(
                    this.nodes.popoverContainer,
                    'mouseover',
                    (n) => this.handleHover(n),
                ),
            e.searchable && this.addSearch(),
            e.flippable !== !1 &&
                ((this.flipper = new hi({
                    items: this.flippableElements,
                    focusedItemClass: Ft.focused,
                    allowedKeys: [Ve.TAB, Ve.UP, Ve.DOWN, Ve.ENTER],
                })),
                this.flipper.onFlip(this.onFlip));
    }
    hasFocus() {
        return this.flipper === void 0 ? !1 : this.flipper.hasFocus();
    }
    get scrollTop() {
        return this.nodes.items === null ? 0 : this.nodes.items.scrollTop;
    }
    get offsetTop() {
        return this.nodes.popoverContainer === null ?
                0
            :   this.nodes.popoverContainer.offsetTop;
    }
    show() {
        var e;
        this.nodes.popover.style.setProperty(
            Mi.PopoverHeight,
            this.size.height + 'px',
        ),
            this.shouldOpenBottom ||
                this.nodes.popover.classList.add(Ut.popoverOpenTop),
            this.shouldOpenRight ||
                this.nodes.popover.classList.add(Ut.popoverOpenLeft),
            super.show(),
            (e = this.flipper) == null || e.activate(this.flippableElements);
    }
    destroy() {
        this.hide(), super.destroy();
    }
    showNestedItems(e) {
        (this.nestedPopover !== null && this.nestedPopover !== void 0) ||
            ((this.nestedPopoverTriggerItem = e),
            this.showNestedPopoverForItem(e));
    }
    handleHover(e) {
        const t = this.getTargetItem(e);
        t !== void 0 &&
            this.previouslyHoveredItem !== t &&
            (this.destroyNestedPopoverIfExists(),
            (this.previouslyHoveredItem = t),
            t.hasChildren && this.showNestedPopoverForItem(t));
    }
    setTriggerItemPosition(e, t) {
        const n = t.getElement(),
            i = (n ? n.offsetTop : 0) - this.scrollTop,
            s = this.offsetTop + i;
        e.style.setProperty(Mi.TriggerItemTop, s + 'px');
    }
    destroyNestedPopoverIfExists() {
        var e, t;
        this.nestedPopover === void 0 ||
            this.nestedPopover === null ||
            (this.nestedPopover.off(ao.ClosedOnActivate, this.hide),
            this.nestedPopover.hide(),
            this.nestedPopover.destroy(),
            this.nestedPopover.getElement().remove(),
            (this.nestedPopover = null),
            (e = this.flipper) == null || e.activate(this.flippableElements),
            (t = this.nestedPopoverTriggerItem) == null || t.onChildrenClose());
    }
    showNestedPopoverForItem(e) {
        var t;
        (this.nestedPopover = new Du({
            searchable: e.isChildrenSearchable,
            items: e.children,
            nestingLevel: this.nestingLevel + 1,
            flippable: e.isChildrenFlippable,
            messages: this.messages,
        })),
            e.onChildrenOpen(),
            this.nestedPopover.on(ao.ClosedOnActivate, this.hide);
        const n = this.nestedPopover.getElement();
        return (
            this.nodes.popover.appendChild(n),
            this.setTriggerItemPosition(n, e),
            n.style.setProperty(
                Mi.NestingLevel,
                this.nestedPopover.nestingLevel.toString(),
            ),
            this.nestedPopover.show(),
            (t = this.flipper) == null || t.deactivate(),
            this.nestedPopover
        );
    }
    get shouldOpenBottom() {
        if (this.nodes.popover === void 0 || this.nodes.popover === null)
            return !1;
        const e = this.nodes.popoverContainer.getBoundingClientRect(),
            t = this.scopeElement.getBoundingClientRect(),
            n = this.size.height,
            i = e.top + n,
            s = e.top - n,
            r = Math.min(window.innerHeight, t.bottom);
        return s < t.top || i <= r;
    }
    get shouldOpenRight() {
        if (this.nodes.popover === void 0 || this.nodes.popover === null)
            return !1;
        const e = this.nodes.popover.getBoundingClientRect(),
            t = this.scopeElement.getBoundingClientRect(),
            n = this.size.width,
            i = e.right + n,
            s = e.left - n,
            r = Math.min(window.innerWidth, t.right);
        return s < t.left || i <= r;
    }
    get size() {
        var e;
        const t = { height: 0, width: 0 };
        if (this.nodes.popover === null) return t;
        const n = this.nodes.popover.cloneNode(!0);
        (n.style.visibility = 'hidden'),
            (n.style.position = 'absolute'),
            (n.style.top = '-1000px'),
            n.classList.add(Ut.popoverOpened),
            (e = n.querySelector('.' + Ut.popoverNested)) == null || e.remove(),
            document.body.appendChild(n);
        const i = n.querySelector('.' + Ut.popoverContainer);
        return (
            (t.height = i.offsetHeight),
            (t.width = i.offsetWidth),
            n.remove(),
            t
        );
    }
    get flippableElements() {
        return this.items
            .map((e) => {
                if (e instanceof ii) return e.getElement();
                if (e instanceof As) return e.getControls();
            })
            .flat()
            .filter((e) => e != null);
    }
    addSearch() {
        (this.search = new tm({
            items: this.itemsDefault,
            placeholder: this.messages.search,
        })),
            this.search.on(pr.Search, this.onSearch);
        const e = this.search.getElement();
        e.classList.add(Ut.search),
            this.nodes.popoverContainer.insertBefore(
                e,
                this.nodes.popoverContainer.firstChild,
            );
    }
    toggleNothingFoundMessage(e) {
        this.nodes.nothingFoundMessage.classList.toggle(
            Ut.nothingFoundMessageDisplayed,
            e,
        );
    }
};
im([$i], Ru.prototype, 'size');
let Nl = Ru;
class sm extends Nl {
    constructor(e) {
        const t = !Wi();
        super(
            { ...e, class: Ut.popoverInline },
            {
                [Tt.Default]: {
                    wrapperTag: 'button',
                    hint: { position: 'top', alignment: 'center', enabled: t },
                },
                [Tt.Html]: {
                    hint: { position: 'top', alignment: 'center', enabled: t },
                },
            },
        ),
            this.items.forEach((n) => {
                (!(n instanceof ii) && !(n instanceof As)) ||
                    (n.hasChildren &&
                        n.isChildrenOpen &&
                        this.showNestedItems(n));
            });
    }
    get offsetLeft() {
        return this.nodes.popoverContainer === null ?
                0
            :   this.nodes.popoverContainer.offsetLeft;
    }
    show() {
        this.nestingLevel === 0 &&
            this.nodes.popover.style.setProperty(
                Mi.InlinePopoverWidth,
                this.size.width + 'px',
            ),
            super.show();
    }
    handleHover() {}
    setTriggerItemPosition(e, t) {
        const n = t.getElement(),
            i = n ? n.offsetLeft : 0,
            s = this.offsetLeft + i;
        e.style.setProperty(Mi.TriggerItemLeft, s + 'px');
    }
    showNestedItems(e) {
        if (this.nestedPopoverTriggerItem === e) {
            this.destroyNestedPopoverIfExists(),
                (this.nestedPopoverTriggerItem = null);
            return;
        }
        super.showNestedItems(e);
    }
    showNestedPopoverForItem(e) {
        const t = super.showNestedPopoverForItem(e);
        return (
            t
                .getElement()
                .classList.add(Ut.getPopoverNestedClass(t.nestingLevel)),
            t
        );
    }
    handleItemClick(e) {
        var t;
        e !== this.nestedPopoverTriggerItem &&
            ((t = this.nestedPopoverTriggerItem) == null || t.handleClick(),
            super.destroyNestedPopoverIfExists()),
            super.handleItemClick(e);
    }
}
const Fu = class _s {
    constructor() {
        this.scrollPosition = null;
    }
    lock() {
        il ? this.lockHard() : document.body.classList.add(_s.CSS.scrollLocked);
    }
    unlock() {
        il ?
            this.unlockHard()
        :   document.body.classList.remove(_s.CSS.scrollLocked);
    }
    lockHard() {
        (this.scrollPosition = window.pageYOffset),
            document.documentElement.style.setProperty(
                '--window-scroll-offset',
                `${this.scrollPosition}px`,
            ),
            document.body.classList.add(_s.CSS.scrollLockedHard);
    }
    unlockHard() {
        document.body.classList.remove(_s.CSS.scrollLockedHard),
            this.scrollPosition !== null &&
                window.scrollTo(0, this.scrollPosition),
            (this.scrollPosition = null);
    }
};
Fu.CSS = {
    scrollLocked: 'ce-scroll-locked',
    scrollLockedHard: 'ce-scroll-locked--hard',
};
let rm = Fu;
const Rr = zo('ce-popover-header'),
    Dr = { root: Rr(), text: Rr('text'), backButton: Rr('back-button') };
class lm {
    constructor({ text: e, onBackButtonClick: t }) {
        (this.listeners = new Ds()),
            (this.text = e),
            (this.onBackButtonClick = t),
            (this.nodes = {
                root: oe.make('div', [Dr.root]),
                backButton: oe.make('button', [Dr.backButton]),
                text: oe.make('div', [Dr.text]),
            }),
            (this.nodes.backButton.innerHTML = Ug),
            this.nodes.root.appendChild(this.nodes.backButton),
            this.listeners.on(
                this.nodes.backButton,
                'click',
                this.onBackButtonClick,
            ),
            (this.nodes.text.innerText = this.text),
            this.nodes.root.appendChild(this.nodes.text);
    }
    getElement() {
        return this.nodes.root;
    }
    destroy() {
        this.nodes.root.remove(), this.listeners.destroy();
    }
}
class am {
    constructor() {
        this.history = [];
    }
    push(e) {
        this.history.push(e);
    }
    pop() {
        return this.history.pop();
    }
    get currentTitle() {
        return this.history.length === 0 ?
                ''
            :   this.history[this.history.length - 1].title;
    }
    get currentItems() {
        return this.history.length === 0 ?
                []
            :   this.history[this.history.length - 1].items;
    }
    reset() {
        for (; this.history.length > 1; ) this.pop();
    }
}
class Hu extends Nu {
    constructor(e) {
        super(e, {
            [Tt.Default]: { hint: { enabled: !1 } },
            [Tt.Html]: { hint: { enabled: !1 } },
        }),
            (this.scrollLocker = new rm()),
            (this.history = new am()),
            (this.isHidden = !0),
            (this.nodes.overlay = oe.make('div', [
                Ut.overlay,
                Ut.overlayHidden,
            ])),
            this.nodes.popover.insertBefore(
                this.nodes.overlay,
                this.nodes.popover.firstChild,
            ),
            this.listeners.on(this.nodes.overlay, 'click', () => {
                this.hide();
            }),
            this.history.push({ items: e.items });
    }
    show() {
        this.nodes.overlay.classList.remove(Ut.overlayHidden),
            super.show(),
            this.scrollLocker.lock(),
            (this.isHidden = !1);
    }
    hide() {
        this.isHidden ||
            (super.hide(),
            this.nodes.overlay.classList.add(Ut.overlayHidden),
            this.scrollLocker.unlock(),
            this.history.reset(),
            (this.isHidden = !0));
    }
    destroy() {
        super.destroy(), this.scrollLocker.unlock();
    }
    showNestedItems(e) {
        this.updateItemsAndHeader(e.children, e.title),
            this.history.push({ title: e.title, items: e.children });
    }
    updateItemsAndHeader(e, t) {
        if (
            (this.header !== null &&
                this.header !== void 0 &&
                (this.header.destroy(), (this.header = null)),
            t !== void 0)
        ) {
            this.header = new lm({
                text: t,
                onBackButtonClick: () => {
                    this.history.pop(),
                        this.updateItemsAndHeader(
                            this.history.currentItems,
                            this.history.currentTitle,
                        );
                },
            });
            const n = this.header.getElement();
            n !== null &&
                this.nodes.popoverContainer.insertBefore(
                    n,
                    this.nodes.popoverContainer.firstChild,
                );
        }
        this.items.forEach((n) => {
            var i;
            return (i = n.getElement()) == null ? void 0 : i.remove();
        }),
            (this.items = this.buildItems(e)),
            this.items.forEach((n) => {
                var i;
                const s = n.getElement();
                s !== null &&
                    ((i = this.nodes.items) == null || i.appendChild(s));
            });
    }
}
class cm extends lt {
    constructor() {
        super(...arguments),
            (this.opened = !1),
            (this.selection = new We()),
            (this.popover = null),
            (this.close = () => {
                this.opened &&
                    ((this.opened = !1),
                    We.isAtEditor || this.selection.restore(),
                    this.selection.clearSaved(),
                    !this.Editor.CrossBlockSelection
                        .isCrossBlockSelectionStarted &&
                        this.Editor.BlockManager.currentBlock &&
                        this.Editor.BlockSelection.unselectBlock(
                            this.Editor.BlockManager.currentBlock,
                        ),
                    this.eventsDispatcher.emit(this.events.closed),
                    this.popover &&
                        (this.popover.off(ao.Closed, this.onPopoverClose),
                        this.popover.destroy(),
                        this.popover.getElement().remove(),
                        (this.popover = null)));
            }),
            (this.onPopoverClose = () => {
                this.close();
            });
    }
    get events() {
        return {
            opened: 'block-settings-opened',
            closed: 'block-settings-closed',
        };
    }
    get CSS() {
        return { settings: 'ce-settings' };
    }
    get flipper() {
        var e;
        if (this.popover !== null)
            return (
                'flipper' in this.popover ?
                    (e = this.popover) == null ?
                        void 0
                    :   e.flipper
                :   void 0
            );
    }
    make() {
        (this.nodes.wrapper = oe.make('div', [this.CSS.settings])),
            this.eventsDispatcher.on(Ls, this.close);
    }
    destroy() {
        this.removeAllNodes(),
            this.listeners.destroy(),
            this.eventsDispatcher.off(Ls, this.close);
    }
    async open(e = this.Editor.BlockManager.currentBlock) {
        var t;
        (this.opened = !0),
            this.selection.save(),
            this.Editor.BlockSelection.selectBlock(e),
            this.Editor.BlockSelection.clearCache();
        const { toolTunes: n, commonTunes: i } = e.getTunes();
        this.eventsDispatcher.emit(this.events.opened);
        const s = Wi() ? Hu : Nl;
        (this.popover = new s({
            searchable: !0,
            items: await this.getTunesItems(e, i, n),
            scopeElement: this.Editor.API.methods.ui.nodes.redactor,
            messages: {
                nothingFound: dn.ui(Ln.ui.popover, 'Nothing found'),
                search: dn.ui(Ln.ui.popover, 'Filter'),
            },
        })),
            this.popover.on(ao.Closed, this.onPopoverClose),
            (t = this.nodes.wrapper) == null ||
                t.append(this.popover.getElement()),
            this.popover.show();
    }
    getElement() {
        return this.nodes.wrapper;
    }
    async getTunesItems(e, t, n) {
        const i = [];
        n !== void 0 &&
            n.length > 0 &&
            (i.push(...n), i.push({ type: Tt.Separator }));
        const s = Array.from(this.Editor.Tools.blockTools.values()),
            r = (await Su(e, s)).reduce(
                (l, a) => (
                    a.toolbox.forEach((c) => {
                        l.push({
                            icon: c.icon,
                            title: dn.t(Ln.toolNames, c.title),
                            name: a.name,
                            closeOnActivate: !0,
                            onActivate: async () => {
                                const {
                                        BlockManager: h,
                                        Caret: u,
                                        Toolbar: p,
                                    } = this.Editor,
                                    b = await h.convert(e, a.name, c.data);
                                p.close(), u.setToBlock(b, u.positions.END);
                            },
                        });
                    }),
                    l
                ),
                [],
            );
        return (
            r.length > 0 &&
                (i.push({
                    icon: Mu,
                    name: 'convert-to',
                    title: dn.ui(Ln.ui.popover, 'Convert to'),
                    children: { searchable: !0, items: r },
                }),
                i.push({ type: Tt.Separator })),
            i.push(...t),
            i.map((l) => this.resolveTuneAliases(l))
        );
    }
    resolveTuneAliases(e) {
        if (e.type === Tt.Separator || e.type === Tt.Html) return e;
        const t = Fg(e, { label: 'title' });
        return (
            e.confirmation &&
                (t.confirmation = this.resolveTuneAliases(e.confirmation)),
            t
        );
    }
}
var zu = { exports: {} };
/*!
 * Library for handling keyboard shortcuts
 * @copyright CodeX (https://codex.so)
 * @license MIT
 * @author CodeX (https://codex.so)
 * @version 1.2.0
 */ (function (o, e) {
    (function (t, n) {
        o.exports = n();
    })(window, function () {
        return (function (t) {
            var n = {};
            function i(s) {
                if (n[s]) return n[s].exports;
                var r = (n[s] = { i: s, l: !1, exports: {} });
                return (
                    t[s].call(r.exports, r, r.exports, i), (r.l = !0), r.exports
                );
            }
            return (
                (i.m = t),
                (i.c = n),
                (i.d = function (s, r, l) {
                    i.o(s, r) ||
                        Object.defineProperty(s, r, { enumerable: !0, get: l });
                }),
                (i.r = function (s) {
                    typeof Symbol < 'u' &&
                        Symbol.toStringTag &&
                        Object.defineProperty(s, Symbol.toStringTag, {
                            value: 'Module',
                        }),
                        Object.defineProperty(s, '__esModule', { value: !0 });
                }),
                (i.t = function (s, r) {
                    if (
                        (1 & r && (s = i(s)),
                        8 & r ||
                            (4 & r &&
                                typeof s == 'object' &&
                                s &&
                                s.__esModule))
                    )
                        return s;
                    var l = Object.create(null);
                    if (
                        (i.r(l),
                        Object.defineProperty(l, 'default', {
                            enumerable: !0,
                            value: s,
                        }),
                        2 & r && typeof s != 'string')
                    )
                        for (var a in s)
                            i.d(
                                l,
                                a,
                                function (c) {
                                    return s[c];
                                }.bind(null, a),
                            );
                    return l;
                }),
                (i.n = function (s) {
                    var r =
                        s && s.__esModule ?
                            function () {
                                return s.default;
                            }
                        :   function () {
                                return s;
                            };
                    return i.d(r, 'a', r), r;
                }),
                (i.o = function (s, r) {
                    return Object.prototype.hasOwnProperty.call(s, r);
                }),
                (i.p = ''),
                i((i.s = 0))
            );
        })([
            function (t, n, i) {
                function s(a, c) {
                    for (var h = 0; h < c.length; h++) {
                        var u = c[h];
                        (u.enumerable = u.enumerable || !1),
                            (u.configurable = !0),
                            'value' in u && (u.writable = !0),
                            Object.defineProperty(a, u.key, u);
                    }
                }
                function r(a, c, h) {
                    return c && s(a.prototype, c), h && s(a, h), a;
                }
                i.r(n);
                var l = (function () {
                    function a(c) {
                        var h = this;
                        (function (u, p) {
                            if (!(u instanceof p))
                                throw new TypeError(
                                    'Cannot call a class as a function',
                                );
                        })(this, a),
                            (this.commands = {}),
                            (this.keys = {}),
                            (this.name = c.name),
                            this.parseShortcutName(c.name),
                            (this.element = c.on),
                            (this.callback = c.callback),
                            (this.executeShortcut = function (u) {
                                h.execute(u);
                            }),
                            this.element.addEventListener(
                                'keydown',
                                this.executeShortcut,
                                !1,
                            );
                    }
                    return (
                        r(a, null, [
                            {
                                key: 'supportedCommands',
                                get: function () {
                                    return {
                                        SHIFT: ['SHIFT'],
                                        CMD: [
                                            'CMD',
                                            'CONTROL',
                                            'COMMAND',
                                            'WINDOWS',
                                            'CTRL',
                                        ],
                                        ALT: ['ALT', 'OPTION'],
                                    };
                                },
                            },
                            {
                                key: 'keyCodes',
                                get: function () {
                                    return {
                                        0: 48,
                                        1: 49,
                                        2: 50,
                                        3: 51,
                                        4: 52,
                                        5: 53,
                                        6: 54,
                                        7: 55,
                                        8: 56,
                                        9: 57,
                                        A: 65,
                                        B: 66,
                                        C: 67,
                                        D: 68,
                                        E: 69,
                                        F: 70,
                                        G: 71,
                                        H: 72,
                                        I: 73,
                                        J: 74,
                                        K: 75,
                                        L: 76,
                                        M: 77,
                                        N: 78,
                                        O: 79,
                                        P: 80,
                                        Q: 81,
                                        R: 82,
                                        S: 83,
                                        T: 84,
                                        U: 85,
                                        V: 86,
                                        W: 87,
                                        X: 88,
                                        Y: 89,
                                        Z: 90,
                                        BACKSPACE: 8,
                                        ENTER: 13,
                                        ESCAPE: 27,
                                        LEFT: 37,
                                        UP: 38,
                                        RIGHT: 39,
                                        DOWN: 40,
                                        INSERT: 45,
                                        DELETE: 46,
                                        '.': 190,
                                    };
                                },
                            },
                        ]),
                        r(a, [
                            {
                                key: 'parseShortcutName',
                                value: function (c) {
                                    c = c.split('+');
                                    for (var h = 0; h < c.length; h++) {
                                        c[h] = c[h].toUpperCase();
                                        var u = !1;
                                        for (var p in a.supportedCommands)
                                            if (
                                                a.supportedCommands[p].includes(
                                                    c[h],
                                                )
                                            ) {
                                                u = this.commands[p] = !0;
                                                break;
                                            }
                                        u || (this.keys[c[h]] = !0);
                                    }
                                    for (var b in a.supportedCommands)
                                        this.commands[b] ||
                                            (this.commands[b] = !1);
                                },
                            },
                            {
                                key: 'execute',
                                value: function (c) {
                                    var h,
                                        u = {
                                            CMD: c.ctrlKey || c.metaKey,
                                            SHIFT: c.shiftKey,
                                            ALT: c.altKey,
                                        },
                                        p = !0;
                                    for (h in this.commands)
                                        this.commands[h] !== u[h] && (p = !1);
                                    var b,
                                        m = !0;
                                    for (b in this.keys)
                                        m = m && c.keyCode === a.keyCodes[b];
                                    p && m && this.callback(c);
                                },
                            },
                            {
                                key: 'remove',
                                value: function () {
                                    this.element.removeEventListener(
                                        'keydown',
                                        this.executeShortcut,
                                    );
                                },
                            },
                        ]),
                        a
                    );
                })();
                n.default = l;
            },
        ]).default;
    });
})(zu);
var hm = zu.exports;
const dm = Er(hm);
class um {
    constructor() {
        this.registeredShortcuts = new Map();
    }
    add(e) {
        if (this.findShortcut(e.on, e.name))
            throw Error(
                `Shortcut ${e.name} is already registered for ${e.on}. Please remove it before add a new handler.`,
            );
        const t = new dm({ name: e.name, on: e.on, callback: e.handler }),
            n = this.registeredShortcuts.get(e.on) || [];
        this.registeredShortcuts.set(e.on, [...n, t]);
    }
    remove(e, t) {
        const n = this.findShortcut(e, t);
        if (!n) return;
        n.remove();
        const i = this.registeredShortcuts.get(e);
        this.registeredShortcuts.set(
            e,
            i.filter((s) => s !== n),
        );
    }
    findShortcut(e, t) {
        return (this.registeredShortcuts.get(e) || []).find(
            ({ name: n }) => n === t,
        );
    }
}
const Fi = new um();
var pm = Object.defineProperty,
    fm = Object.getOwnPropertyDescriptor,
    Uu = (o, e, t, n) => {
        for (var i = fm(e, t), s = o.length - 1, r; s >= 0; s--)
            (r = o[s]) && (i = r(e, t, i) || i);
        return i && pm(e, t, i), i;
    },
    Xs = ((o) => (
        (o.Opened = 'toolbox-opened'),
        (o.Closed = 'toolbox-closed'),
        (o.BlockAdded = 'toolbox-block-added'),
        o
    ))(Xs || {});
const Rl = class ju extends Rs {
    constructor({ api: e, tools: t, i18nLabels: n }) {
        super(),
            (this.opened = !1),
            (this.listeners = new Ds()),
            (this.popover = null),
            (this.handleMobileLayoutToggle = () => {
                this.destroyPopover(), this.initPopover();
            }),
            (this.onPopoverClose = () => {
                (this.opened = !1), this.emit('toolbox-closed');
            }),
            (this.api = e),
            (this.tools = t),
            (this.i18nLabels = n),
            this.enableShortcuts(),
            (this.nodes = { toolbox: oe.make('div', ju.CSS.toolbox) }),
            this.initPopover(),
            this.api.events.on(Ls, this.handleMobileLayoutToggle);
    }
    get isEmpty() {
        return this.toolsToBeDisplayed.length === 0;
    }
    static get CSS() {
        return { toolbox: 'ce-toolbox' };
    }
    getElement() {
        return this.nodes.toolbox;
    }
    hasFocus() {
        if (this.popover !== null)
            return 'hasFocus' in this.popover ?
                    this.popover.hasFocus()
                :   void 0;
    }
    destroy() {
        var e;
        super.destroy(),
            this.nodes && this.nodes.toolbox && this.nodes.toolbox.remove(),
            this.removeAllShortcuts(),
            (e = this.popover) == null || e.off(ao.Closed, this.onPopoverClose),
            this.listeners.destroy(),
            this.api.events.off(Ls, this.handleMobileLayoutToggle);
    }
    toolButtonActivated(e, t) {
        this.insertNewBlock(e, t);
    }
    open() {
        var e;
        this.isEmpty ||
            ((e = this.popover) == null || e.show(),
            (this.opened = !0),
            this.emit('toolbox-opened'));
    }
    close() {
        var e;
        (e = this.popover) == null || e.hide(),
            (this.opened = !1),
            this.emit('toolbox-closed');
    }
    toggle() {
        this.opened ? this.close() : this.open();
    }
    initPopover() {
        var e;
        const t = Wi() ? Hu : Nl;
        (this.popover = new t({
            scopeElement: this.api.ui.nodes.redactor,
            searchable: !0,
            messages: {
                nothingFound: this.i18nLabels.nothingFound,
                search: this.i18nLabels.filter,
            },
            items: this.toolboxItemsToBeDisplayed,
        })),
            this.popover.on(ao.Closed, this.onPopoverClose),
            (e = this.nodes.toolbox) == null ||
                e.append(this.popover.getElement());
    }
    destroyPopover() {
        this.popover !== null &&
            (this.popover.hide(),
            this.popover.off(ao.Closed, this.onPopoverClose),
            this.popover.destroy(),
            (this.popover = null)),
            this.nodes.toolbox !== null && (this.nodes.toolbox.innerHTML = '');
    }
    get toolsToBeDisplayed() {
        const e = [];
        return (
            this.tools.forEach((t) => {
                t.toolbox && e.push(t);
            }),
            e
        );
    }
    get toolboxItemsToBeDisplayed() {
        const e = (t, n) => ({
            icon: t.icon,
            title: dn.t(Ln.toolNames, t.title || cr(n.name)),
            name: n.name,
            onActivate: () => {
                this.toolButtonActivated(n.name, t.data);
            },
            secondaryLabel: n.shortcut ? Il(n.shortcut) : '',
        });
        return this.toolsToBeDisplayed.reduce(
            (t, n) => (
                Array.isArray(n.toolbox) ?
                    n.toolbox.forEach((i) => {
                        t.push(e(i, n));
                    })
                :   n.toolbox !== void 0 && t.push(e(n.toolbox, n)),
                t
            ),
            [],
        );
    }
    enableShortcuts() {
        this.toolsToBeDisplayed.forEach((e) => {
            const t = e.shortcut;
            t && this.enableShortcutForTool(e.name, t);
        });
    }
    enableShortcutForTool(e, t) {
        Fi.add({
            name: t,
            on: this.api.ui.nodes.redactor,
            handler: async (n) => {
                n.preventDefault();
                const i = this.api.blocks.getCurrentBlockIndex(),
                    s = this.api.blocks.getBlockByIndex(i);
                if (s)
                    try {
                        const r = await this.api.blocks.convert(s.id, e);
                        this.api.caret.setToBlock(r, 'end');
                        return;
                    } catch {}
                this.insertNewBlock(e);
            },
        });
    }
    removeAllShortcuts() {
        this.toolsToBeDisplayed.forEach((e) => {
            const t = e.shortcut;
            t && Fi.remove(this.api.ui.nodes.redactor, t);
        });
    }
    async insertNewBlock(e, t) {
        const n = this.api.blocks.getCurrentBlockIndex(),
            i = this.api.blocks.getBlockByIndex(n);
        if (!i) return;
        const s = i.isEmpty ? n : n + 1;
        let r;
        if (t) {
            const a = await this.api.blocks.composeBlockData(e);
            r = Object.assign(a, t);
        }
        const l = this.api.blocks.insert(e, r, void 0, s, void 0, i.isEmpty);
        l.call(go.APPEND_CALLBACK),
            this.api.caret.setToBlock(s),
            this.emit('toolbox-block-added', { block: l }),
            this.api.toolbar.close();
    }
};
Uu([$i], Rl.prototype, 'toolsToBeDisplayed');
Uu([$i], Rl.prototype, 'toolboxItemsToBeDisplayed');
let gm = Rl;
const $u = 'block hovered';
async function mm(o, e) {
    const t = navigator.keyboard;
    return (t && (await t.getLayoutMap()).get(o)) || e;
}
class bm extends lt {
    constructor({ config: e, eventsDispatcher: t }) {
        super({ config: e, eventsDispatcher: t }),
            (this.toolboxInstance = null);
    }
    get CSS() {
        return {
            toolbar: 'ce-toolbar',
            content: 'ce-toolbar__content',
            actions: 'ce-toolbar__actions',
            actionsOpened: 'ce-toolbar__actions--opened',
            toolbarOpened: 'ce-toolbar--opened',
            openedToolboxHolderModifier: 'codex-editor--toolbox-opened',
            plusButton: 'ce-toolbar__plus',
            plusButtonShortcut: 'ce-toolbar__plus-shortcut',
            settingsToggler: 'ce-toolbar__settings-btn',
            settingsTogglerHidden: 'ce-toolbar__settings-btn--hidden',
        };
    }
    get opened() {
        return this.nodes.wrapper.classList.contains(this.CSS.toolbarOpened);
    }
    get toolbox() {
        var e;
        return {
            opened: (e = this.toolboxInstance) == null ? void 0 : e.opened,
            close: () => {
                var t;
                (t = this.toolboxInstance) == null || t.close();
            },
            open: () => {
                if (this.toolboxInstance === null) {
                    pt(
                        'toolbox.open() called before initialization is finished',
                        'warn',
                    );
                    return;
                }
                (this.Editor.BlockManager.currentBlock = this.hoveredBlock),
                    this.toolboxInstance.open();
            },
            toggle: () => {
                if (this.toolboxInstance === null) {
                    pt(
                        'toolbox.toggle() called before initialization is finished',
                        'warn',
                    );
                    return;
                }
                this.toolboxInstance.toggle();
            },
            hasFocus: () => {
                var t;
                return (t = this.toolboxInstance) == null ?
                        void 0
                    :   t.hasFocus();
            },
        };
    }
    get blockActions() {
        return {
            hide: () => {
                this.nodes.actions.classList.remove(this.CSS.actionsOpened);
            },
            show: () => {
                this.nodes.actions.classList.add(this.CSS.actionsOpened);
            },
        };
    }
    get blockTunesToggler() {
        return {
            hide: () =>
                this.nodes.settingsToggler.classList.add(
                    this.CSS.settingsTogglerHidden,
                ),
            show: () =>
                this.nodes.settingsToggler.classList.remove(
                    this.CSS.settingsTogglerHidden,
                ),
        };
    }
    toggleReadOnly(e) {
        e ?
            (this.destroy(),
            this.Editor.BlockSettings.destroy(),
            this.disableModuleBindings())
        :   window.requestIdleCallback(
                () => {
                    this.drawUI(), this.enableModuleBindings();
                },
                { timeout: 2e3 },
            );
    }
    moveAndOpen(e = this.Editor.BlockManager.currentBlock) {
        if (this.toolboxInstance === null) {
            pt(
                "Can't open Toolbar since Editor initialization is not finished yet",
                'warn',
            );
            return;
        }
        if (
            (this.toolboxInstance.opened && this.toolboxInstance.close(),
            this.Editor.BlockSettings.opened &&
                this.Editor.BlockSettings.close(),
            !e)
        )
            return;
        this.hoveredBlock = e;
        const t = e.holder,
            { isMobile: n } = this.Editor.UI;
        let i;
        const s = 20,
            r = e.firstInput,
            l = t.getBoundingClientRect(),
            a = r !== void 0 ? r.getBoundingClientRect() : null,
            c = a !== null ? a.top - l.top : null,
            h = c !== null ? c > s : void 0;
        if (n) i = t.offsetTop + t.offsetHeight;
        else if (r === void 0 || h) {
            const u = parseInt(
                window.getComputedStyle(e.pluginsContent).paddingTop,
            );
            i = t.offsetTop + u;
        } else {
            const u = tg(r),
                p = parseInt(
                    window.getComputedStyle(this.nodes.plusButton).height,
                    10,
                );
            i = t.offsetTop + u - p + 8 + c;
        }
        (this.nodes.wrapper.style.top = `${Math.floor(i)}px`),
            this.Editor.BlockManager.blocks.length === 1 && e.isEmpty ?
                this.blockTunesToggler.hide()
            :   this.blockTunesToggler.show(),
            this.open();
    }
    close() {
        var e, t;
        this.Editor.ReadOnly.isEnabled ||
            ((e = this.nodes.wrapper) == null ||
                e.classList.remove(this.CSS.toolbarOpened),
            this.blockActions.hide(),
            (t = this.toolboxInstance) == null || t.close(),
            this.Editor.BlockSettings.close(),
            this.reset());
    }
    reset() {
        this.nodes.wrapper.style.top = 'unset';
    }
    open(e = !0) {
        this.nodes.wrapper.classList.add(this.CSS.toolbarOpened),
            e ? this.blockActions.show() : this.blockActions.hide();
    }
    async make() {
        (this.nodes.wrapper = oe.make('div', this.CSS.toolbar)),
            ['content', 'actions'].forEach((s) => {
                this.nodes[s] = oe.make('div', this.CSS[s]);
            }),
            oe.append(this.nodes.wrapper, this.nodes.content),
            oe.append(this.nodes.content, this.nodes.actions),
            (this.nodes.plusButton = oe.make('div', this.CSS.plusButton, {
                innerHTML: Yg,
            })),
            oe.append(this.nodes.actions, this.nodes.plusButton),
            this.readOnlyMutableListeners.on(
                this.nodes.plusButton,
                'click',
                () => {
                    dr(!0), this.plusButtonClicked();
                },
                !1,
            );
        const e = oe.make('div');
        e.appendChild(
            document.createTextNode(dn.ui(Ln.ui.toolbar.toolbox, 'Add')),
        ),
            e.appendChild(
                oe.make('div', this.CSS.plusButtonShortcut, {
                    textContent: '/',
                }),
            ),
            ur(this.nodes.plusButton, e, { hidingDelay: 400 }),
            (this.nodes.settingsToggler = oe.make(
                'span',
                this.CSS.settingsToggler,
                { innerHTML: Vg },
            )),
            oe.append(this.nodes.actions, this.nodes.settingsToggler);
        const t = oe.make('div'),
            n = oe.text(dn.ui(Ln.ui.blockTunes.toggler, 'Click to tune')),
            i = await mm('Slash', '/');
        t.appendChild(n),
            t.appendChild(
                oe.make('div', this.CSS.plusButtonShortcut, {
                    textContent: Il(`CMD + ${i}`),
                }),
            ),
            ur(this.nodes.settingsToggler, t, { hidingDelay: 400 }),
            oe.append(this.nodes.actions, this.makeToolbox()),
            oe.append(
                this.nodes.actions,
                this.Editor.BlockSettings.getElement(),
            ),
            oe.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);
    }
    makeToolbox() {
        return (
            (this.toolboxInstance = new gm({
                api: this.Editor.API.methods,
                tools: this.Editor.Tools.blockTools,
                i18nLabels: {
                    filter: dn.ui(Ln.ui.popover, 'Filter'),
                    nothingFound: dn.ui(Ln.ui.popover, 'Nothing found'),
                },
            })),
            this.toolboxInstance.on(Xs.Opened, () => {
                this.Editor.UI.nodes.wrapper.classList.add(
                    this.CSS.openedToolboxHolderModifier,
                );
            }),
            this.toolboxInstance.on(Xs.Closed, () => {
                this.Editor.UI.nodes.wrapper.classList.remove(
                    this.CSS.openedToolboxHolderModifier,
                );
            }),
            this.toolboxInstance.on(Xs.BlockAdded, ({ block: e }) => {
                const { BlockManager: t, Caret: n } = this.Editor,
                    i = t.getBlockById(e.id);
                i.inputs.length === 0 &&
                    (i === t.lastBlock ?
                        (t.insertAtEnd(), n.setToBlock(t.lastBlock))
                    :   n.setToBlock(t.nextBlock));
            }),
            this.toolboxInstance.getElement()
        );
    }
    plusButtonClicked() {
        var e;
        (this.Editor.BlockManager.currentBlock = this.hoveredBlock),
            (e = this.toolboxInstance) == null || e.toggle();
    }
    enableModuleBindings() {
        this.readOnlyMutableListeners.on(
            this.nodes.settingsToggler,
            'mousedown',
            (e) => {
                var t;
                e.stopPropagation(),
                    this.settingsTogglerClicked(),
                    (t = this.toolboxInstance) != null &&
                        t.opened &&
                        this.toolboxInstance.close(),
                    dr(!0);
            },
            !0,
        ),
            Wi() ||
                this.eventsDispatcher.on($u, (e) => {
                    var t;
                    this.Editor.BlockSettings.opened ||
                        ((t = this.toolboxInstance) != null && t.opened) ||
                        this.moveAndOpen(e.block);
                });
    }
    disableModuleBindings() {
        this.readOnlyMutableListeners.clearAll();
    }
    settingsTogglerClicked() {
        (this.Editor.BlockManager.currentBlock = this.hoveredBlock),
            this.Editor.BlockSettings.opened ?
                this.Editor.BlockSettings.close()
            :   this.Editor.BlockSettings.open(this.hoveredBlock);
    }
    drawUI() {
        this.Editor.BlockSettings.make(), this.make();
    }
    destroy() {
        this.removeAllNodes(),
            this.toolboxInstance && this.toolboxInstance.destroy();
    }
}
var ai = ((o) => (
        (o[(o.Block = 0)] = 'Block'),
        (o[(o.Inline = 1)] = 'Inline'),
        (o[(o.Tune = 2)] = 'Tune'),
        o
    ))(ai || {}),
    Zs = ((o) => (
        (o.Shortcut = 'shortcut'),
        (o.Toolbox = 'toolbox'),
        (o.EnabledInlineTools = 'inlineToolbar'),
        (o.EnabledBlockTunes = 'tunes'),
        (o.Config = 'config'),
        o
    ))(Zs || {}),
    Wu = ((o) => (
        (o.Shortcut = 'shortcut'), (o.SanitizeConfig = 'sanitize'), o
    ))(Wu || {}),
    xi = ((o) => (
        (o.IsEnabledLineBreaks = 'enableLineBreaks'),
        (o.Toolbox = 'toolbox'),
        (o.ConversionConfig = 'conversionConfig'),
        (o.IsReadOnlySupported = 'isReadOnlySupported'),
        (o.PasteConfig = 'pasteConfig'),
        o
    ))(xi || {}),
    Dl = ((o) => ((o.IsInline = 'isInline'), (o.Title = 'title'), o))(Dl || {}),
    rl = ((o) => ((o.IsTune = 'isTune'), o))(rl || {});
class Fl {
    constructor({
        name: e,
        constructable: t,
        config: n,
        api: i,
        isDefault: s,
        isInternal: r = !1,
        defaultPlaceholder: l,
    }) {
        (this.api = i),
            (this.name = e),
            (this.constructable = t),
            (this.config = n),
            (this.isDefault = s),
            (this.isInternal = r),
            (this.defaultPlaceholder = l);
    }
    get settings() {
        const e = this.config.config || {};
        return (
            this.isDefault &&
                !('placeholder' in e) &&
                this.defaultPlaceholder &&
                (e.placeholder = this.defaultPlaceholder),
            e
        );
    }
    reset() {
        if (Mt(this.constructable.reset)) return this.constructable.reset();
    }
    prepare() {
        if (Mt(this.constructable.prepare))
            return this.constructable.prepare({
                toolName: this.name,
                config: this.settings,
            });
    }
    get shortcut() {
        const e = this.constructable.shortcut;
        return this.config.shortcut || e;
    }
    get sanitizeConfig() {
        return this.constructable.sanitize || {};
    }
    isInline() {
        return this.type === ai.Inline;
    }
    isBlock() {
        return this.type === ai.Block;
    }
    isTune() {
        return this.type === ai.Tune;
    }
}
class wm extends lt {
    constructor({ config: e, eventsDispatcher: t }) {
        super({ config: e, eventsDispatcher: t }),
            (this.CSS = { inlineToolbar: 'ce-inline-toolbar' }),
            (this.opened = !1),
            (this.popover = null),
            (this.toolbarVerticalMargin = Wi() ? 20 : 6),
            (this.toolsInstances = new Map());
    }
    toggleReadOnly(e) {
        e ?
            this.destroy()
        :   window.requestIdleCallback(
                () => {
                    this.make();
                },
                { timeout: 2e3 },
            );
    }
    async tryToShow(e = !1) {
        e && this.close(),
            this.allowedToShow() &&
                (await this.open(), this.Editor.Toolbar.close());
    }
    close() {
        var e, t;
        this.opened &&
            (this.Editor.ReadOnly.isEnabled ||
                (Array.from(this.toolsInstances.entries()).forEach(([n, i]) => {
                    const s = this.getToolShortcut(n);
                    s && Fi.remove(this.Editor.UI.nodes.redactor, s),
                        Mt(i.clear) && i.clear();
                }),
                (this.toolsInstances = null),
                this.reset(),
                (this.opened = !1),
                (e = this.popover) == null || e.hide(),
                (t = this.popover) == null || t.destroy(),
                (this.popover = null)));
    }
    containsNode(e) {
        return this.nodes.wrapper === void 0 ?
                !1
            :   this.nodes.wrapper.contains(e);
    }
    destroy() {
        var e;
        this.removeAllNodes(),
            (e = this.popover) == null || e.destroy(),
            (this.popover = null);
    }
    make() {
        (this.nodes.wrapper = oe.make('div', [
            this.CSS.inlineToolbar,
            ...(this.isRtl ? [this.Editor.UI.CSS.editorRtlFix] : []),
        ])),
            oe.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);
    }
    async open() {
        var e;
        if (this.opened) return;
        (this.opened = !0), this.popover !== null && this.popover.destroy();
        const t = await this.getInlineTools();
        (this.popover = new sm({
            items: t,
            scopeElement: this.Editor.API.methods.ui.nodes.redactor,
            messages: {
                nothingFound: dn.ui(Ln.ui.popover, 'Nothing found'),
                search: dn.ui(Ln.ui.popover, 'Filter'),
            },
        })),
            this.move(this.popover.size.width),
            (e = this.nodes.wrapper) == null ||
                e.append(this.popover.getElement()),
            this.popover.show();
    }
    move(e) {
        const t = We.rect,
            n = this.Editor.UI.nodes.wrapper.getBoundingClientRect(),
            i = {
                x: t.x - n.x,
                y: t.y + t.height - n.top + this.toolbarVerticalMargin,
            };
        i.x + e + n.x > this.Editor.UI.contentRect.right &&
            (i.x = this.Editor.UI.contentRect.right - e - n.x),
            (this.nodes.wrapper.style.left = Math.floor(i.x) + 'px'),
            (this.nodes.wrapper.style.top = Math.floor(i.y) + 'px');
    }
    reset() {
        (this.nodes.wrapper.style.left = '0'),
            (this.nodes.wrapper.style.top = '0');
    }
    allowedToShow() {
        const e = ['IMG', 'INPUT'],
            t = We.get(),
            n = We.text;
        if (!t || !t.anchorNode || t.isCollapsed || n.length < 1) return !1;
        const i =
            oe.isElement(t.anchorNode) ?
                t.anchorNode
            :   t.anchorNode.parentElement;
        if (
            i === null ||
            (t && e.includes(i.tagName)) ||
            i.closest('[contenteditable="true"]') === null
        )
            return !1;
        const s = this.Editor.BlockManager.getBlock(t.anchorNode);
        return s ? s.tool.inlineTools.size !== 0 : !1;
    }
    async getInlineTools() {
        const e = We.get(),
            t = this.Editor.BlockManager.getBlock(e.anchorNode),
            n = Array.from(t.tool.inlineTools.values()),
            i = [];
        this.toolsInstances === null && (this.toolsInstances = new Map());
        for (let s = 0; s < n.length; s++) {
            const r = n[s],
                l = r.create(),
                a = await l.render();
            this.toolsInstances.set(r.name, l);
            const c = this.getToolShortcut(r.name);
            if (c)
                try {
                    this.enableShortcuts(r.name, c);
                } catch {}
            const h = c !== void 0 ? Il(c) : void 0,
                u = dn.t(Ln.toolNames, r.title || cr(r.name));
            [a].flat().forEach((p) => {
                var b, m;
                const k = {
                    name: r.name,
                    onActivate: () => {
                        this.toolClicked(l);
                    },
                    hint: { title: u, description: h },
                };
                if (oe.isElement(p)) {
                    const y = { ...k, element: p, type: Tt.Html };
                    if (Mt(l.renderActions)) {
                        const w = l.renderActions();
                        y.children = {
                            isOpen:
                                (b = l.checkState) == null ?
                                    void 0
                                :   b.call(l, We.get()),
                            isFlippable: !1,
                            items: [{ type: Tt.Html, element: w }],
                        };
                    } else (m = l.checkState) == null || m.call(l, We.get());
                    i.push(y);
                } else if (p.type === Tt.Html)
                    i.push({ ...k, ...p, type: Tt.Html });
                else if (p.type === Tt.Separator)
                    i.push({ type: Tt.Separator });
                else {
                    const y = { ...k, ...p, type: Tt.Default };
                    'children' in y &&
                        s !== 0 &&
                        i.push({ type: Tt.Separator }),
                        i.push(y),
                        'children' in y &&
                            s < n.length - 1 &&
                            i.push({ type: Tt.Separator });
                }
            });
        }
        return i;
    }
    getToolShortcut(e) {
        const { Tools: t } = this.Editor,
            n = t.inlineTools.get(e),
            i = t.internal.inlineTools;
        return Array.from(i.keys()).includes(e) ?
                this.inlineTools[e][Wu.Shortcut]
            :   n?.shortcut;
    }
    enableShortcuts(e, t) {
        Fi.add({
            name: t,
            handler: (n) => {
                var i;
                const { currentBlock: s } = this.Editor.BlockManager;
                s &&
                    s.tool.enabledInlineTools &&
                    (n.preventDefault(),
                    (i = this.popover) == null || i.activateItemByName(e));
            },
            on: this.Editor.UI.nodes.redactor,
        });
    }
    toolClicked(e) {
        var t;
        const n = We.range;
        (t = e.surround) == null || t.call(e, n), this.checkToolsState();
    }
    checkToolsState() {
        var e;
        (e = this.toolsInstances) == null ||
            e.forEach((t) => {
                var n;
                (n = t.checkState) == null || n.call(t, We.get());
            });
    }
    get inlineTools() {
        const e = {};
        return (
            Array.from(this.Editor.Tools.inlineTools.entries()).forEach(
                ([t, n]) => {
                    e[t] = n.create();
                },
            ),
            e
        );
    }
}
function Gu() {
    const o = window.getSelection();
    if (o === null) return [null, 0];
    let e = o.focusNode,
        t = o.focusOffset;
    return e === null ?
            [null, 0]
        :   (e.nodeType !== Node.TEXT_NODE &&
                e.childNodes.length > 0 &&
                (e.childNodes[t] ?
                    ((e = e.childNodes[t]), (t = 0))
                :   ((e = e.childNodes[t - 1]), (t = e.textContent.length))),
            [e, t]);
}
function qu(o, e, t, n) {
    const i = document.createRange();
    n === 'left' ?
        (i.setStart(o, 0), i.setEnd(e, t))
    :   (i.setStart(e, t), i.setEnd(o, o.childNodes.length));
    const s = i.cloneContents(),
        r = document.createElement('div');
    r.appendChild(s);
    const l = r.textContent || '';
    return eg(l);
}
function Js(o) {
    const e = oe.getDeepestNode(o);
    if (e === null || oe.isEmpty(o)) return !0;
    if (oe.isNativeInput(e)) return e.selectionEnd === 0;
    if (oe.isEmpty(o)) return !0;
    const [t, n] = Gu();
    return t === null ? !1 : qu(o, t, n, 'left');
}
function Qs(o) {
    const e = oe.getDeepestNode(o, !0);
    if (e === null) return !0;
    if (oe.isNativeInput(e)) return e.selectionEnd === e.value.length;
    const [t, n] = Gu();
    return t === null ? !1 : qu(o, t, n, 'right');
}
class ym extends lt {
    keydown(e) {
        switch ((this.beforeKeydownProcessing(e), e.keyCode)) {
            case Ve.BACKSPACE:
                this.backspace(e);
                break;
            case Ve.DELETE:
                this.delete(e);
                break;
            case Ve.ENTER:
                this.enter(e);
                break;
            case Ve.DOWN:
            case Ve.RIGHT:
                this.arrowRightAndDown(e);
                break;
            case Ve.UP:
            case Ve.LEFT:
                this.arrowLeftAndUp(e);
                break;
            case Ve.TAB:
                this.tabPressed(e);
                break;
        }
        e.key === '/' && !e.ctrlKey && !e.metaKey && this.slashPressed(e),
            e.code === 'Slash' &&
                (e.ctrlKey || e.metaKey) &&
                (e.preventDefault(), this.commandSlashPressed());
    }
    beforeKeydownProcessing(e) {
        this.needToolbarClosing(e) &&
            fu(e.keyCode) &&
            (this.Editor.Toolbar.close(),
            e.ctrlKey ||
                e.metaKey ||
                e.altKey ||
                e.shiftKey ||
                this.Editor.BlockSelection.clearSelection(e));
    }
    keyup(e) {
        e.shiftKey || this.Editor.UI.checkEmptiness();
    }
    dragOver(e) {
        const t = this.Editor.BlockManager.getBlockByChildNode(e.target);
        t.dropTarget = !0;
    }
    dragLeave(e) {
        const t = this.Editor.BlockManager.getBlockByChildNode(e.target);
        t.dropTarget = !1;
    }
    handleCommandC(e) {
        const { BlockSelection: t } = this.Editor;
        t.anyBlockSelected && t.copySelectedBlocks(e);
    }
    handleCommandX(e) {
        const { BlockSelection: t, BlockManager: n, Caret: i } = this.Editor;
        t.anyBlockSelected &&
            t.copySelectedBlocks(e).then(() => {
                const s = n.removeSelectedBlocks(),
                    r = n.insertDefaultBlockAtIndex(s, !0);
                i.setToBlock(r, i.positions.START), t.clearSelection(e);
            });
    }
    tabPressed(e) {
        const { InlineToolbar: t, Caret: n } = this.Editor;
        t.opened ||
            ((e.shiftKey ? n.navigatePrevious(!0) : n.navigateNext(!0)) &&
                e.preventDefault());
    }
    commandSlashPressed() {
        this.Editor.BlockSelection.selectedBlocks.length > 1 ||
            this.activateBlockSettings();
    }
    slashPressed(e) {
        this.Editor.BlockManager.currentBlock.isEmpty &&
            (e.preventDefault(),
            this.Editor.Caret.insertContentAtCaretPosition('/'),
            this.activateToolbox());
    }
    enter(e) {
        const { BlockManager: t, UI: n } = this.Editor,
            i = t.currentBlock;
        if (
            i === void 0 ||
            i.tool.isLineBreaksEnabled ||
            (n.someToolbarOpened && n.someFlipperButtonFocused) ||
            (e.shiftKey && !il)
        )
            return;
        let s = i;
        i.currentInput !== void 0 && Js(i.currentInput) && !i.hasMedia ?
            this.Editor.BlockManager.insertDefaultBlockAtIndex(
                this.Editor.BlockManager.currentBlockIndex,
            )
        : i.currentInput && Qs(i.currentInput) ?
            (s = this.Editor.BlockManager.insertDefaultBlockAtIndex(
                this.Editor.BlockManager.currentBlockIndex + 1,
            ))
        :   (s = this.Editor.BlockManager.split()),
            this.Editor.Caret.setToBlock(s),
            this.Editor.Toolbar.moveAndOpen(s),
            e.preventDefault();
    }
    backspace(e) {
        const { BlockManager: t, Caret: n } = this.Editor,
            { currentBlock: i, previousBlock: s } = t;
        if (
            !(
                i === void 0 ||
                !We.isCollapsed ||
                !i.currentInput ||
                !Js(i.currentInput)
            )
        ) {
            if (
                (e.preventDefault(),
                this.Editor.Toolbar.close(),
                i.currentInput !== i.firstInput)
            ) {
                n.navigatePrevious();
                return;
            }
            if (s !== null) {
                if (s.isEmpty) {
                    t.removeBlock(s);
                    return;
                }
                if (i.isEmpty) {
                    t.removeBlock(i);
                    const r = t.currentBlock;
                    n.setToBlock(r, n.positions.END);
                    return;
                }
                va(s, i) ?
                    this.mergeBlocks(s, i)
                :   n.setToBlock(s, n.positions.END);
            }
        }
    }
    delete(e) {
        const { BlockManager: t, Caret: n } = this.Editor,
            { currentBlock: i, nextBlock: s } = t;
        if (!(!We.isCollapsed || !Qs(i.currentInput))) {
            if (
                (e.preventDefault(),
                this.Editor.Toolbar.close(),
                i.currentInput !== i.lastInput)
            ) {
                n.navigateNext();
                return;
            }
            if (s !== null) {
                if (s.isEmpty) {
                    t.removeBlock(s);
                    return;
                }
                if (i.isEmpty) {
                    t.removeBlock(i), n.setToBlock(s, n.positions.START);
                    return;
                }
                va(i, s) ?
                    this.mergeBlocks(i, s)
                :   n.setToBlock(s, n.positions.START);
            }
        }
    }
    mergeBlocks(e, t) {
        const { BlockManager: n, Caret: i, Toolbar: s } = this.Editor;
        i.createShadow(e.lastInput),
            n.mergeBlocks(e, t).then(() => {
                i.restoreCaret(e.pluginsContent), s.close();
            });
    }
    arrowRightAndDown(e) {
        const t =
            hi.usedKeys.includes(e.keyCode) &&
            (!e.shiftKey || e.keyCode === Ve.TAB);
        if (this.Editor.UI.someToolbarOpened && t) return;
        this.Editor.Toolbar.close();
        const { currentBlock: n } = this.Editor.BlockManager,
            i =
                (n?.currentInput !== void 0 ? Qs(n.currentInput) : void 0) ||
                this.Editor.BlockSelection.anyBlockSelected;
        if (e.shiftKey && e.keyCode === Ve.DOWN && i) {
            this.Editor.CrossBlockSelection.toggleBlockSelectedState();
            return;
        }
        if (
            e.keyCode === Ve.DOWN || (e.keyCode === Ve.RIGHT && !this.isRtl) ?
                this.Editor.Caret.navigateNext()
            :   this.Editor.Caret.navigatePrevious()
        ) {
            e.preventDefault();
            return;
        }
        ar(() => {
            this.Editor.BlockManager.currentBlock &&
                this.Editor.BlockManager.currentBlock.updateCurrentInput();
        }, 20)(),
            this.Editor.BlockSelection.clearSelection(e);
    }
    arrowLeftAndUp(e) {
        if (this.Editor.UI.someToolbarOpened) {
            if (
                hi.usedKeys.includes(e.keyCode) &&
                (!e.shiftKey || e.keyCode === Ve.TAB)
            )
                return;
            this.Editor.UI.closeAllToolbars();
        }
        this.Editor.Toolbar.close();
        const { currentBlock: t } = this.Editor.BlockManager,
            n =
                (t?.currentInput !== void 0 ? Js(t.currentInput) : void 0) ||
                this.Editor.BlockSelection.anyBlockSelected;
        if (e.shiftKey && e.keyCode === Ve.UP && n) {
            this.Editor.CrossBlockSelection.toggleBlockSelectedState(!1);
            return;
        }
        if (
            e.keyCode === Ve.UP || (e.keyCode === Ve.LEFT && !this.isRtl) ?
                this.Editor.Caret.navigatePrevious()
            :   this.Editor.Caret.navigateNext()
        ) {
            e.preventDefault();
            return;
        }
        ar(() => {
            this.Editor.BlockManager.currentBlock &&
                this.Editor.BlockManager.currentBlock.updateCurrentInput();
        }, 20)(),
            this.Editor.BlockSelection.clearSelection(e);
    }
    needToolbarClosing(e) {
        const t = e.keyCode === Ve.ENTER && this.Editor.Toolbar.toolbox.opened,
            n = e.keyCode === Ve.ENTER && this.Editor.BlockSettings.opened,
            i = e.keyCode === Ve.ENTER && this.Editor.InlineToolbar.opened,
            s = e.keyCode === Ve.TAB;
        return !(e.shiftKey || s || t || n || i);
    }
    activateToolbox() {
        this.Editor.Toolbar.opened || this.Editor.Toolbar.moveAndOpen(),
            this.Editor.Toolbar.toolbox.open();
    }
    activateBlockSettings() {
        this.Editor.Toolbar.opened || this.Editor.Toolbar.moveAndOpen(),
            this.Editor.BlockSettings.opened ||
                this.Editor.BlockSettings.open();
    }
}
class Fr {
    constructor(e) {
        (this.blocks = []), (this.workingArea = e);
    }
    get length() {
        return this.blocks.length;
    }
    get array() {
        return this.blocks;
    }
    get nodes() {
        return gu(this.workingArea.children);
    }
    static set(e, t, n) {
        return isNaN(Number(t)) ?
                (Reflect.set(e, t, n), !0)
            :   (e.insert(+t, n), !0);
    }
    static get(e, t) {
        return isNaN(Number(t)) ? Reflect.get(e, t) : e.get(+t);
    }
    push(e) {
        this.blocks.push(e), this.insertToDOM(e);
    }
    swap(e, t) {
        const n = this.blocks[t];
        oe.swap(this.blocks[e].holder, n.holder),
            (this.blocks[t] = this.blocks[e]),
            (this.blocks[e] = n);
    }
    move(e, t) {
        const n = this.blocks.splice(t, 1)[0],
            i = e - 1,
            s = Math.max(0, i),
            r = this.blocks[s];
        e > 0 ?
            this.insertToDOM(n, 'afterend', r)
        :   this.insertToDOM(n, 'beforebegin', r),
            this.blocks.splice(e, 0, n);
        const l = this.composeBlockEvent('move', { fromIndex: t, toIndex: e });
        n.call(go.MOVED, l);
    }
    insert(e, t, n = !1) {
        if (!this.length) {
            this.push(t);
            return;
        }
        e > this.length && (e = this.length),
            n &&
                (this.blocks[e].holder.remove(),
                this.blocks[e].call(go.REMOVED));
        const i = n ? 1 : 0;
        if ((this.blocks.splice(e, i, t), e > 0)) {
            const s = this.blocks[e - 1];
            this.insertToDOM(t, 'afterend', s);
        } else {
            const s = this.blocks[e + 1];
            s ? this.insertToDOM(t, 'beforebegin', s) : this.insertToDOM(t);
        }
    }
    replace(e, t) {
        if (this.blocks[e] === void 0) throw Error('Incorrect index');
        this.blocks[e].holder.replaceWith(t.holder), (this.blocks[e] = t);
    }
    insertMany(e, t) {
        const n = new DocumentFragment();
        for (const i of e) n.appendChild(i.holder);
        if (this.length > 0) {
            if (t > 0) {
                const i = Math.min(t - 1, this.length - 1);
                this.blocks[i].holder.after(n);
            } else t === 0 && this.workingArea.prepend(n);
            this.blocks.splice(t, 0, ...e);
        } else this.blocks.push(...e), this.workingArea.appendChild(n);
        e.forEach((i) => i.call(go.RENDERED));
    }
    remove(e) {
        isNaN(e) && (e = this.length - 1),
            this.blocks[e].holder.remove(),
            this.blocks[e].call(go.REMOVED),
            this.blocks.splice(e, 1);
    }
    removeAll() {
        (this.workingArea.innerHTML = ''),
            this.blocks.forEach((e) => e.call(go.REMOVED)),
            (this.blocks.length = 0);
    }
    insertAfter(e, t) {
        const n = this.blocks.indexOf(e);
        this.insert(n + 1, t);
    }
    get(e) {
        return this.blocks[e];
    }
    indexOf(e) {
        return this.blocks.indexOf(e);
    }
    insertToDOM(e, t, n) {
        t ?
            n.holder.insertAdjacentElement(t, e.holder)
        :   this.workingArea.appendChild(e.holder),
            e.call(go.RENDERED);
    }
    composeBlockEvent(e, t) {
        return new CustomEvent(e, { detail: t });
    }
}
const Ea = 'block-removed',
    Ta = 'block-added',
    vm = 'block-moved',
    Sa = 'block-changed';
class km {
    constructor() {
        this.completed = Promise.resolve();
    }
    add(e) {
        return new Promise((t, n) => {
            this.completed = this.completed.then(e).then(t).catch(n);
        });
    }
}
class _m extends lt {
    constructor() {
        super(...arguments),
            (this._currentBlockIndex = -1),
            (this._blocks = null);
    }
    get currentBlockIndex() {
        return this._currentBlockIndex;
    }
    set currentBlockIndex(e) {
        this._currentBlockIndex = e;
    }
    get firstBlock() {
        return this._blocks[0];
    }
    get lastBlock() {
        return this._blocks[this._blocks.length - 1];
    }
    get currentBlock() {
        return this._blocks[this.currentBlockIndex];
    }
    set currentBlock(e) {
        this.currentBlockIndex = this.getBlockIndex(e);
    }
    get nextBlock() {
        return this.currentBlockIndex === this._blocks.length - 1 ?
                null
            :   this._blocks[this.currentBlockIndex + 1];
    }
    get nextContentfulBlock() {
        return this.blocks
            .slice(this.currentBlockIndex + 1)
            .find((e) => !!e.inputs.length);
    }
    get previousContentfulBlock() {
        return this.blocks
            .slice(0, this.currentBlockIndex)
            .reverse()
            .find((e) => !!e.inputs.length);
    }
    get previousBlock() {
        return this.currentBlockIndex === 0 ?
                null
            :   this._blocks[this.currentBlockIndex - 1];
    }
    get blocks() {
        return this._blocks.array;
    }
    get isEditorEmpty() {
        return this.blocks.every((e) => e.isEmpty);
    }
    prepare() {
        const e = new Fr(this.Editor.UI.nodes.redactor);
        (this._blocks = new Proxy(e, { set: Fr.set, get: Fr.get })),
            this.listeners.on(document, 'copy', (t) =>
                this.Editor.BlockEvents.handleCommandC(t),
            );
    }
    toggleReadOnly(e) {
        e ? this.disableModuleBindings() : this.enableModuleBindings();
    }
    composeBlock({ tool: e, data: t = {}, id: n = void 0, tunes: i = {} }) {
        const s = this.Editor.ReadOnly.isEnabled,
            r = this.Editor.Tools.blockTools.get(e),
            l = new Qt(
                {
                    id: n,
                    data: t,
                    tool: r,
                    api: this.Editor.API,
                    readOnly: s,
                    tunesData: i,
                },
                this.eventsDispatcher,
            );
        return (
            s ||
                window.requestIdleCallback(
                    () => {
                        this.bindBlockEvents(l);
                    },
                    { timeout: 2e3 },
                ),
            l
        );
    }
    insert({
        id: e = void 0,
        tool: t = this.config.defaultBlock,
        data: n = {},
        index: i,
        needToFocus: s = !0,
        replace: r = !1,
        tunes: l = {},
    } = {}) {
        let a = i;
        a === void 0 && (a = this.currentBlockIndex + (r ? 0 : 1));
        const c = this.composeBlock({ id: e, tool: t, data: n, tunes: l });
        return (
            r &&
                this.blockDidMutated(Ea, this.getBlockByIndex(a), { index: a }),
            this._blocks.insert(a, c, r),
            this.blockDidMutated(Ta, c, { index: a }),
            s ?
                (this.currentBlockIndex = a)
            :   a <= this.currentBlockIndex && this.currentBlockIndex++,
            c
        );
    }
    insertMany(e, t = 0) {
        this._blocks.insertMany(e, t);
    }
    async update(e, t, n) {
        if (!t && !n) return e;
        const i = await e.data,
            s = this.composeBlock({
                id: e.id,
                tool: e.name,
                data: Object.assign({}, i, t ?? {}),
                tunes: n ?? e.tunes,
            }),
            r = this.getBlockIndex(e);
        return (
            this._blocks.replace(r, s),
            this.blockDidMutated(Sa, s, { index: r }),
            s
        );
    }
    replace(e, t, n) {
        const i = this.getBlockIndex(e);
        return this.insert({ tool: t, data: n, index: i, replace: !0 });
    }
    paste(e, t, n = !1) {
        const i = this.insert({ tool: e, replace: n });
        try {
            window.requestIdleCallback(() => {
                i.call(go.ON_PASTE, t);
            });
        } catch (s) {
            pt(`${e}: onPaste callback call is failed`, 'error', s);
        }
        return i;
    }
    insertDefaultBlockAtIndex(e, t = !1) {
        const n = this.composeBlock({ tool: this.config.defaultBlock });
        return (
            (this._blocks[e] = n),
            this.blockDidMutated(Ta, n, { index: e }),
            t ?
                (this.currentBlockIndex = e)
            :   e <= this.currentBlockIndex && this.currentBlockIndex++,
            n
        );
    }
    insertAtEnd() {
        return (this.currentBlockIndex = this.blocks.length - 1), this.insert();
    }
    async mergeBlocks(e, t) {
        let n;
        if (e.name === t.name && e.mergeable) {
            const i = await t.data;
            if (jn(i)) {
                console.error(
                    'Could not merge Block. Failed to extract original Block data.',
                );
                return;
            }
            const [s] = Al([i], e.tool.sanitizeConfig);
            n = s;
        } else if (e.mergeable && hr(t, 'export') && hr(e, 'import')) {
            const i = await t.exportDataAsString(),
                s = io(i, e.tool.sanitizeConfig);
            n = ka(s, e.tool.conversionConfig);
        }
        n !== void 0 &&
            (await e.mergeWith(n),
            this.removeBlock(t),
            (this.currentBlockIndex = this._blocks.indexOf(e)));
    }
    removeBlock(e, t = !0) {
        return new Promise((n) => {
            const i = this._blocks.indexOf(e);
            if (!this.validateIndex(i))
                throw new Error("Can't find a Block to remove");
            e.destroy(),
                this._blocks.remove(i),
                this.blockDidMutated(Ea, e, { index: i }),
                this.currentBlockIndex >= i && this.currentBlockIndex--,
                this.blocks.length ?
                    i === 0 && (this.currentBlockIndex = 0)
                :   (this.unsetCurrentBlock(), t && this.insert()),
                n();
        });
    }
    removeSelectedBlocks() {
        let e;
        for (let t = this.blocks.length - 1; t >= 0; t--)
            this.blocks[t].selected &&
                (this.removeBlock(this.blocks[t]), (e = t));
        return e;
    }
    removeAllBlocks() {
        for (let e = this.blocks.length - 1; e >= 0; e--)
            this._blocks.remove(e);
        this.unsetCurrentBlock(),
            this.insert(),
            this.currentBlock.firstInput.focus();
    }
    split() {
        const e = this.Editor.Caret.extractFragmentFromCaretPosition(),
            t = oe.make('div');
        t.appendChild(e);
        const n = { text: oe.isEmpty(t) ? '' : t.innerHTML };
        return this.insert({ data: n });
    }
    getBlockByIndex(e) {
        return e === -1 && (e = this._blocks.length - 1), this._blocks[e];
    }
    getBlockIndex(e) {
        return this._blocks.indexOf(e);
    }
    getBlockById(e) {
        return this._blocks.array.find((t) => t.id === e);
    }
    getBlock(e) {
        oe.isElement(e) || (e = e.parentNode);
        const t = this._blocks.nodes,
            n = e.closest(`.${Qt.CSS.wrapper}`),
            i = t.indexOf(n);
        if (i >= 0) return this._blocks[i];
    }
    setCurrentBlockByChildNode(e) {
        oe.isElement(e) || (e = e.parentNode);
        const t = e.closest(`.${Qt.CSS.wrapper}`);
        if (!t) return;
        const n = t.closest(`.${this.Editor.UI.CSS.editorWrapper}`);
        if (n != null && n.isEqualNode(this.Editor.UI.nodes.wrapper))
            return (
                (this.currentBlockIndex = this._blocks.nodes.indexOf(t)),
                this.currentBlock.updateCurrentInput(),
                this.currentBlock
            );
    }
    getBlockByChildNode(e) {
        if (!e || !(e instanceof Node)) return;
        oe.isElement(e) || (e = e.parentNode);
        const t = e.closest(`.${Qt.CSS.wrapper}`);
        return this.blocks.find((n) => n.holder === t);
    }
    swap(e, t) {
        this._blocks.swap(e, t), (this.currentBlockIndex = t);
    }
    move(e, t = this.currentBlockIndex) {
        if (isNaN(e) || isNaN(t)) {
            pt(
                "Warning during 'move' call: incorrect indices provided.",
                'warn',
            );
            return;
        }
        if (!this.validateIndex(e) || !this.validateIndex(t)) {
            pt(
                "Warning during 'move' call: indices cannot be lower than 0 or greater than the amount of blocks.",
                'warn',
            );
            return;
        }
        this._blocks.move(e, t),
            (this.currentBlockIndex = e),
            this.blockDidMutated(vm, this.currentBlock, {
                fromIndex: t,
                toIndex: e,
            });
    }
    async convert(e, t, n) {
        if (!(await e.save()))
            throw new Error(
                'Could not convert Block. Failed to extract original Block data.',
            );
        const i = this.Editor.Tools.blockTools.get(t);
        if (!i)
            throw new Error(`Could not convert Block. Tool «${t}» not found.`);
        const s = await e.exportDataAsString(),
            r = io(s, i.sanitizeConfig);
        let l = ka(r, i.conversionConfig);
        return n && (l = Object.assign(l, n)), this.replace(e, i.name, l);
    }
    unsetCurrentBlock() {
        this.currentBlockIndex = -1;
    }
    async clear(e = !1) {
        const t = new km();
        this.blocks.forEach((n) => {
            t.add(async () => {
                await this.removeBlock(n, !1);
            });
        }),
            await t.completed,
            this.unsetCurrentBlock(),
            e && this.insert(),
            this.Editor.UI.checkEmptiness();
    }
    async destroy() {
        await Promise.all(this.blocks.map((e) => e.destroy()));
    }
    bindBlockEvents(e) {
        const { BlockEvents: t } = this.Editor;
        this.readOnlyMutableListeners.on(e.holder, 'keydown', (n) => {
            t.keydown(n);
        }),
            this.readOnlyMutableListeners.on(e.holder, 'keyup', (n) => {
                t.keyup(n);
            }),
            this.readOnlyMutableListeners.on(e.holder, 'dragover', (n) => {
                t.dragOver(n);
            }),
            this.readOnlyMutableListeners.on(e.holder, 'dragleave', (n) => {
                t.dragLeave(n);
            }),
            e.on('didMutated', (n) =>
                this.blockDidMutated(Sa, n, { index: this.getBlockIndex(n) }),
            );
    }
    disableModuleBindings() {
        this.readOnlyMutableListeners.clearAll();
    }
    enableModuleBindings() {
        this.readOnlyMutableListeners.on(document, 'cut', (e) =>
            this.Editor.BlockEvents.handleCommandX(e),
        ),
            this.blocks.forEach((e) => {
                this.bindBlockEvents(e);
            });
    }
    validateIndex(e) {
        return !(e < 0 || e >= this._blocks.length);
    }
    blockDidMutated(e, t, n) {
        const i = new CustomEvent(e, { detail: { target: new fo(t), ...n } });
        return this.eventsDispatcher.emit(_u, { event: i }), t;
    }
}
class xm extends lt {
    constructor() {
        super(...arguments),
            (this.anyBlockSelectedCache = null),
            (this.needToSelectAll = !1),
            (this.nativeInputSelected = !1),
            (this.readyToBlockSelection = !1);
    }
    get sanitizerConfig() {
        return {
            p: {},
            h1: {},
            h2: {},
            h3: {},
            h4: {},
            h5: {},
            h6: {},
            ol: {},
            ul: {},
            li: {},
            br: !0,
            img: { src: !0, width: !0, height: !0 },
            a: { href: !0 },
            b: {},
            i: {},
            u: {},
        };
    }
    get allBlocksSelected() {
        const { BlockManager: e } = this.Editor;
        return e.blocks.every((t) => t.selected === !0);
    }
    set allBlocksSelected(e) {
        const { BlockManager: t } = this.Editor;
        t.blocks.forEach((n) => {
            n.selected = e;
        }),
            this.clearCache();
    }
    get anyBlockSelected() {
        const { BlockManager: e } = this.Editor;
        return (
            this.anyBlockSelectedCache === null &&
                (this.anyBlockSelectedCache = e.blocks.some(
                    (t) => t.selected === !0,
                )),
            this.anyBlockSelectedCache
        );
    }
    get selectedBlocks() {
        return this.Editor.BlockManager.blocks.filter((e) => e.selected);
    }
    prepare() {
        (this.selection = new We()),
            Fi.add({
                name: 'CMD+A',
                handler: (e) => {
                    const { BlockManager: t, ReadOnly: n } = this.Editor;
                    if (n.isEnabled) {
                        e.preventDefault(), this.selectAllBlocks();
                        return;
                    }
                    t.currentBlock && this.handleCommandA(e);
                },
                on: this.Editor.UI.nodes.redactor,
            });
    }
    toggleReadOnly() {
        We.get().removeAllRanges(), (this.allBlocksSelected = !1);
    }
    unSelectBlockByIndex(e) {
        const { BlockManager: t } = this.Editor;
        let n;
        isNaN(e) ? (n = t.currentBlock) : (n = t.getBlockByIndex(e)),
            (n.selected = !1),
            this.clearCache();
    }
    clearSelection(e, t = !1) {
        const {
            BlockManager: n,
            Caret: i,
            RectangleSelection: s,
        } = this.Editor;
        (this.needToSelectAll = !1),
            (this.nativeInputSelected = !1),
            (this.readyToBlockSelection = !1);
        const r = e && e instanceof KeyboardEvent,
            l = r && fu(e.keyCode);
        if (this.anyBlockSelected && r && l && !We.isSelectionExists) {
            const a = n.removeSelectedBlocks();
            n.insertDefaultBlockAtIndex(a, !0),
                i.setToBlock(n.currentBlock),
                ar(() => {
                    const c = e.key;
                    i.insertContentAtCaretPosition(c.length > 1 ? '' : c);
                }, 20)();
        }
        if (
            (this.Editor.CrossBlockSelection.clear(e),
            !this.anyBlockSelected || s.isRectActivated())
        ) {
            this.Editor.RectangleSelection.clearSelection();
            return;
        }
        t && this.selection.restore(), (this.allBlocksSelected = !1);
    }
    copySelectedBlocks(e) {
        e.preventDefault();
        const t = oe.make('div');
        this.selectedBlocks.forEach((s) => {
            const r = io(s.holder.innerHTML, this.sanitizerConfig),
                l = oe.make('p');
            (l.innerHTML = r), t.appendChild(l);
        });
        const n = Array.from(t.childNodes).map((s) => s.textContent).join(`

`),
            i = t.innerHTML;
        return (
            e.clipboardData.setData('text/plain', n),
            e.clipboardData.setData('text/html', i),
            Promise.all(this.selectedBlocks.map((s) => s.save())).then((s) => {
                try {
                    e.clipboardData.setData(
                        this.Editor.Paste.MIME_TYPE,
                        JSON.stringify(s),
                    );
                } catch {}
            })
        );
    }
    selectBlockByIndex(e) {
        const { BlockManager: t } = this.Editor,
            n = t.getBlockByIndex(e);
        n !== void 0 && this.selectBlock(n);
    }
    selectBlock(e) {
        this.selection.save(),
            We.get().removeAllRanges(),
            (e.selected = !0),
            this.clearCache(),
            this.Editor.InlineToolbar.close();
    }
    unselectBlock(e) {
        (e.selected = !1), this.clearCache();
    }
    clearCache() {
        this.anyBlockSelectedCache = null;
    }
    destroy() {
        Fi.remove(this.Editor.UI.nodes.redactor, 'CMD+A');
    }
    handleCommandA(e) {
        if (
            (this.Editor.RectangleSelection.clearSelection(),
            oe.isNativeInput(e.target) && !this.readyToBlockSelection)
        ) {
            this.readyToBlockSelection = !0;
            return;
        }
        const t = this.Editor.BlockManager.getBlock(e.target),
            n = t.inputs;
        if (n.length > 1 && !this.readyToBlockSelection) {
            this.readyToBlockSelection = !0;
            return;
        }
        if (n.length === 1 && !this.needToSelectAll) {
            this.needToSelectAll = !0;
            return;
        }
        this.needToSelectAll ?
            (e.preventDefault(),
            this.selectAllBlocks(),
            (this.needToSelectAll = !1),
            (this.readyToBlockSelection = !1))
        :   this.readyToBlockSelection &&
            (e.preventDefault(),
            this.selectBlock(t),
            (this.needToSelectAll = !0));
    }
    selectAllBlocks() {
        this.selection.save(),
            We.get().removeAllRanges(),
            (this.allBlocksSelected = !0),
            this.Editor.InlineToolbar.close();
    }
}
class fr extends lt {
    get positions() {
        return { START: 'start', END: 'end', DEFAULT: 'default' };
    }
    static get CSS() {
        return { shadowCaret: 'cdx-shadow-caret' };
    }
    setToBlock(e, t = this.positions.DEFAULT, n = 0) {
        var i;
        const { BlockManager: s, BlockSelection: r } = this.Editor;
        if ((r.clearSelection(), !e.focusable)) {
            (i = window.getSelection()) == null || i.removeAllRanges(),
                r.selectBlock(e),
                (s.currentBlock = e);
            return;
        }
        let l;
        switch (t) {
            case this.positions.START:
                l = e.firstInput;
                break;
            case this.positions.END:
                l = e.lastInput;
                break;
            default:
                l = e.currentInput;
        }
        if (!l) return;
        const a = oe.getDeepestNode(l, t === this.positions.END),
            c = oe.getContentLength(a);
        switch (!0) {
            case t === this.positions.START:
                n = 0;
                break;
            case t === this.positions.END:
            case n > c:
                n = c;
                break;
        }
        this.set(a, n),
            s.setCurrentBlockByChildNode(e.holder),
            (s.currentBlock.currentInput = l);
    }
    setToInput(e, t = this.positions.DEFAULT, n = 0) {
        const { currentBlock: i } = this.Editor.BlockManager,
            s = oe.getDeepestNode(e);
        switch (t) {
            case this.positions.START:
                this.set(s, 0);
                break;
            case this.positions.END:
                this.set(s, oe.getContentLength(s));
                break;
            default:
                n && this.set(s, n);
        }
        i.currentInput = e;
    }
    set(e, t = 0) {
        const { top: n, bottom: i } = We.setCursor(e, t),
            { innerHeight: s } = window;
        n < 0 ?
            window.scrollBy(0, n - 30)
        :   i > s && window.scrollBy(0, i - s + 30);
    }
    setToTheLastBlock() {
        const e = this.Editor.BlockManager.lastBlock;
        if (e)
            if (e.tool.isDefault && e.isEmpty) this.setToBlock(e);
            else {
                const t = this.Editor.BlockManager.insertAtEnd();
                this.setToBlock(t);
            }
    }
    extractFragmentFromCaretPosition() {
        const e = We.get();
        if (e.rangeCount) {
            const t = e.getRangeAt(0),
                n = this.Editor.BlockManager.currentBlock.currentInput;
            if ((t.deleteContents(), n))
                if (oe.isNativeInput(n)) {
                    const i = n,
                        s = document.createDocumentFragment(),
                        r = i.value.substring(0, i.selectionStart),
                        l = i.value.substring(i.selectionStart);
                    return (s.textContent = l), (i.value = r), s;
                } else {
                    const i = t.cloneRange();
                    return (
                        i.selectNodeContents(n),
                        i.setStart(t.endContainer, t.endOffset),
                        i.extractContents()
                    );
                }
        }
    }
    navigateNext(e = !1) {
        const { BlockManager: t } = this.Editor,
            { currentBlock: n, nextBlock: i } = t;
        if (n === void 0) return !1;
        const { nextInput: s, currentInput: r } = n,
            l = r !== void 0 ? Qs(r) : void 0;
        let a = i;
        const c = e || l || !n.focusable;
        if (s && c) return this.setToInput(s, this.positions.START), !0;
        if (a === null) {
            if (n.tool.isDefault || !c) return !1;
            a = t.insertAtEnd();
        }
        return c ? (this.setToBlock(a, this.positions.START), !0) : !1;
    }
    navigatePrevious(e = !1) {
        const { currentBlock: t, previousBlock: n } = this.Editor.BlockManager;
        if (!t) return !1;
        const { previousInput: i, currentInput: s } = t,
            r = s !== void 0 ? Js(s) : void 0,
            l = e || r || !t.focusable;
        return (
            i && l ? (this.setToInput(i, this.positions.END), !0)
            : n !== null && l ? (this.setToBlock(n, this.positions.END), !0)
            : !1
        );
    }
    createShadow(e) {
        const t = document.createElement('span');
        t.classList.add(fr.CSS.shadowCaret),
            e.insertAdjacentElement('beforeend', t);
    }
    restoreCaret(e) {
        const t = e.querySelector(`.${fr.CSS.shadowCaret}`);
        if (!t) return;
        new We().expandToTag(t);
        const n = document.createRange();
        n.selectNode(t), n.extractContents();
    }
    insertContentAtCaretPosition(e) {
        const t = document.createDocumentFragment(),
            n = document.createElement('div'),
            i = We.get(),
            s = We.range;
        (n.innerHTML = e),
            Array.from(n.childNodes).forEach((c) => t.appendChild(c)),
            t.childNodes.length === 0 && t.appendChild(new Text());
        const r = t.lastChild;
        s.deleteContents(), s.insertNode(t);
        const l = document.createRange(),
            a = r.nodeType === Node.TEXT_NODE ? r : r.firstChild;
        a !== null &&
            a.textContent !== null &&
            l.setStart(a, a.textContent.length),
            i.removeAllRanges(),
            i.addRange(l);
    }
}
class Cm extends lt {
    constructor() {
        super(...arguments),
            (this.onMouseUp = () => {
                this.listeners.off(document, 'mouseover', this.onMouseOver),
                    this.listeners.off(document, 'mouseup', this.onMouseUp);
            }),
            (this.onMouseOver = (e) => {
                const { BlockManager: t, BlockSelection: n } = this.Editor;
                if (e.relatedTarget === null && e.target === null) return;
                const i =
                        t.getBlockByChildNode(e.relatedTarget) ||
                        this.lastSelectedBlock,
                    s = t.getBlockByChildNode(e.target);
                if (!(!i || !s) && s !== i) {
                    if (i === this.firstSelectedBlock) {
                        We.get().removeAllRanges(),
                            (i.selected = !0),
                            (s.selected = !0),
                            n.clearCache();
                        return;
                    }
                    if (s === this.firstSelectedBlock) {
                        (i.selected = !1), (s.selected = !1), n.clearCache();
                        return;
                    }
                    this.Editor.InlineToolbar.close(),
                        this.toggleBlocksSelectedState(i, s),
                        (this.lastSelectedBlock = s);
                }
            });
    }
    async prepare() {
        this.listeners.on(document, 'mousedown', (e) => {
            this.enableCrossBlockSelection(e);
        });
    }
    watchSelection(e) {
        if (e.button !== jf.LEFT) return;
        const { BlockManager: t } = this.Editor;
        (this.firstSelectedBlock = t.getBlock(e.target)),
            (this.lastSelectedBlock = this.firstSelectedBlock),
            this.listeners.on(document, 'mouseover', this.onMouseOver),
            this.listeners.on(document, 'mouseup', this.onMouseUp);
    }
    get isCrossBlockSelectionStarted() {
        return (
            !!this.firstSelectedBlock &&
            !!this.lastSelectedBlock &&
            this.firstSelectedBlock !== this.lastSelectedBlock
        );
    }
    toggleBlockSelectedState(e = !0) {
        const { BlockManager: t, BlockSelection: n } = this.Editor;
        this.lastSelectedBlock ||
            (this.lastSelectedBlock = this.firstSelectedBlock = t.currentBlock),
            this.firstSelectedBlock === this.lastSelectedBlock &&
                ((this.firstSelectedBlock.selected = !0),
                n.clearCache(),
                We.get().removeAllRanges());
        const i = t.blocks.indexOf(this.lastSelectedBlock) + (e ? 1 : -1),
            s = t.blocks[i];
        s &&
            (this.lastSelectedBlock.selected !== s.selected ?
                ((s.selected = !0), n.clearCache())
            :   ((this.lastSelectedBlock.selected = !1), n.clearCache()),
            (this.lastSelectedBlock = s),
            this.Editor.InlineToolbar.close(),
            s.holder.scrollIntoView({ block: 'nearest' }));
    }
    clear(e) {
        const { BlockManager: t, BlockSelection: n, Caret: i } = this.Editor,
            s = t.blocks.indexOf(this.firstSelectedBlock),
            r = t.blocks.indexOf(this.lastSelectedBlock);
        if (
            n.anyBlockSelected &&
            s > -1 &&
            r > -1 &&
            e &&
            e instanceof KeyboardEvent
        )
            switch (e.keyCode) {
                case Ve.DOWN:
                case Ve.RIGHT:
                    i.setToBlock(t.blocks[Math.max(s, r)], i.positions.END);
                    break;
                case Ve.UP:
                case Ve.LEFT:
                    i.setToBlock(t.blocks[Math.min(s, r)], i.positions.START);
                    break;
                default:
                    i.setToBlock(t.blocks[Math.max(s, r)], i.positions.END);
            }
        this.firstSelectedBlock = this.lastSelectedBlock = null;
    }
    enableCrossBlockSelection(e) {
        const { UI: t } = this.Editor;
        We.isCollapsed || this.Editor.BlockSelection.clearSelection(e),
            t.nodes.redactor.contains(e.target) ?
                this.watchSelection(e)
            :   this.Editor.BlockSelection.clearSelection(e);
    }
    toggleBlocksSelectedState(e, t) {
        const { BlockManager: n, BlockSelection: i } = this.Editor,
            s = n.blocks.indexOf(e),
            r = n.blocks.indexOf(t),
            l = e.selected !== t.selected;
        for (let a = Math.min(s, r); a <= Math.max(s, r); a++) {
            const c = n.blocks[a];
            c !== this.firstSelectedBlock &&
                c !== (l ? e : t) &&
                ((n.blocks[a].selected = !n.blocks[a].selected),
                i.clearCache());
        }
    }
}
class Em extends lt {
    constructor() {
        super(...arguments), (this.isStartedAtEditor = !1);
    }
    toggleReadOnly(e) {
        e ? this.disableModuleBindings() : this.enableModuleBindings();
    }
    enableModuleBindings() {
        const { UI: e } = this.Editor;
        this.readOnlyMutableListeners.on(
            e.nodes.holder,
            'drop',
            async (t) => {
                await this.processDrop(t);
            },
            !0,
        ),
            this.readOnlyMutableListeners.on(
                e.nodes.holder,
                'dragstart',
                () => {
                    this.processDragStart();
                },
            ),
            this.readOnlyMutableListeners.on(
                e.nodes.holder,
                'dragover',
                (t) => {
                    this.processDragOver(t);
                },
                !0,
            );
    }
    disableModuleBindings() {
        this.readOnlyMutableListeners.clearAll();
    }
    async processDrop(e) {
        const { BlockManager: t, Paste: n, Caret: i } = this.Editor;
        e.preventDefault(),
            t.blocks.forEach((r) => {
                r.dropTarget = !1;
            }),
            We.isAtEditor &&
                !We.isCollapsed &&
                this.isStartedAtEditor &&
                document.execCommand('delete'),
            (this.isStartedAtEditor = !1);
        const s = t.setCurrentBlockByChildNode(e.target);
        if (s) this.Editor.Caret.setToBlock(s, i.positions.END);
        else {
            const r = t.setCurrentBlockByChildNode(t.lastBlock.holder);
            this.Editor.Caret.setToBlock(r, i.positions.END);
        }
        await n.processDataTransfer(e.dataTransfer, !0);
    }
    processDragStart() {
        We.isAtEditor && !We.isCollapsed && (this.isStartedAtEditor = !0),
            this.Editor.InlineToolbar.close();
    }
    processDragOver(e) {
        e.preventDefault();
    }
}
const Tm = 180,
    Sm = 400;
class Bm extends lt {
    constructor({ config: e, eventsDispatcher: t }) {
        super({ config: e, eventsDispatcher: t }),
            (this.disabled = !1),
            (this.batchingTimeout = null),
            (this.batchingOnChangeQueue = new Map()),
            (this.batchTime = Sm),
            (this.mutationObserver = new MutationObserver((n) => {
                this.redactorChanged(n);
            })),
            this.eventsDispatcher.on(_u, (n) => {
                this.particularBlockChanged(n.event);
            }),
            this.eventsDispatcher.on(xu, () => {
                this.disable();
            }),
            this.eventsDispatcher.on(Cu, () => {
                this.enable();
            });
    }
    enable() {
        this.mutationObserver.observe(this.Editor.UI.nodes.redactor, {
            childList: !0,
            subtree: !0,
            characterData: !0,
            attributes: !0,
        }),
            (this.disabled = !1);
    }
    disable() {
        this.mutationObserver.disconnect(), (this.disabled = !0);
    }
    particularBlockChanged(e) {
        this.disabled ||
            !Mt(this.config.onChange) ||
            (this.batchingOnChangeQueue.set(
                `block:${e.detail.target.id}:event:${e.type}`,
                e,
            ),
            this.batchingTimeout && clearTimeout(this.batchingTimeout),
            (this.batchingTimeout = setTimeout(() => {
                let t;
                this.batchingOnChangeQueue.size === 1 ?
                    (t = this.batchingOnChangeQueue.values().next().value)
                :   (t = Array.from(this.batchingOnChangeQueue.values())),
                    this.config.onChange &&
                        this.config.onChange(this.Editor.API.methods, t),
                    this.batchingOnChangeQueue.clear();
            }, this.batchTime)));
    }
    redactorChanged(e) {
        this.eventsDispatcher.emit(sl, { mutations: e });
    }
}
const Vu = class Yu extends lt {
    constructor() {
        super(...arguments),
            (this.MIME_TYPE = 'application/x-editor-js'),
            (this.toolsTags = {}),
            (this.tagsByTool = {}),
            (this.toolsPatterns = []),
            (this.toolsFiles = {}),
            (this.exceptionList = []),
            (this.processTool = (e) => {
                try {
                    const t = e.create({}, {}, !1);
                    if (e.pasteConfig === !1) {
                        this.exceptionList.push(e.name);
                        return;
                    }
                    if (!Mt(t.onPaste)) return;
                    this.getTagsConfig(e),
                        this.getFilesConfig(e),
                        this.getPatternsConfig(e);
                } catch (t) {
                    pt(
                        `Paste handling for «${e.name}» Tool hasn't been set up because of the error`,
                        'warn',
                        t,
                    );
                }
            }),
            (this.handlePasteEvent = async (e) => {
                const { BlockManager: t, Toolbar: n } = this.Editor,
                    i = t.setCurrentBlockByChildNode(e.target);
                !i ||
                    (this.isNativeBehaviour(e.target) &&
                        !e.clipboardData.types.includes('Files')) ||
                    (i && this.exceptionList.includes(i.name)) ||
                    (e.preventDefault(),
                    this.processDataTransfer(e.clipboardData),
                    n.close());
            });
    }
    async prepare() {
        this.processTools();
    }
    toggleReadOnly(e) {
        e ? this.unsetCallback() : this.setCallback();
    }
    async processDataTransfer(e, t = !1) {
        const { Tools: n } = this.Editor,
            i = e.types;
        if (
            (i.includes ? i.includes('Files') : i.contains('Files')) &&
            !jn(this.toolsFiles)
        ) {
            await this.processFiles(e.files);
            return;
        }
        const s = e.getData(this.MIME_TYPE),
            r = e.getData('text/plain');
        let l = e.getData('text/html');
        if (s)
            try {
                this.insertEditorJSData(JSON.parse(s));
                return;
            } catch {}
        t && r.trim() && l.trim() && (l = '<p>' + (l.trim() ? l : r) + '</p>');
        const a = Object.keys(this.toolsTags).reduce(
                (u, p) => (
                    (u[p.toLowerCase()] =
                        this.toolsTags[p].sanitizationConfig ?? {}),
                    u
                ),
                {},
            ),
            c = Object.assign({}, a, n.getAllInlineToolsSanitizeConfig(), {
                br: {},
            }),
            h = io(l, c);
        !h.trim() || h.trim() === r || !oe.isHTMLString(h) ?
            await this.processText(r)
        :   await this.processText(h, !0);
    }
    async processText(e, t = !1) {
        const { Caret: n, BlockManager: i } = this.Editor,
            s = t ? this.processHTML(e) : this.processPlain(e);
        if (!s.length) return;
        if (s.length === 1) {
            s[0].isBlock ?
                this.processSingleBlock(s.pop())
            :   this.processInlinePaste(s.pop());
            return;
        }
        const r =
            i.currentBlock &&
            i.currentBlock.tool.isDefault &&
            i.currentBlock.isEmpty;
        s.map(async (l, a) => this.insertBlock(l, a === 0 && r)),
            i.currentBlock && n.setToBlock(i.currentBlock, n.positions.END);
    }
    setCallback() {
        this.listeners.on(
            this.Editor.UI.nodes.holder,
            'paste',
            this.handlePasteEvent,
        );
    }
    unsetCallback() {
        this.listeners.off(
            this.Editor.UI.nodes.holder,
            'paste',
            this.handlePasteEvent,
        );
    }
    processTools() {
        const e = this.Editor.Tools.blockTools;
        Array.from(e.values()).forEach(this.processTool);
    }
    collectTagNames(e) {
        return (
            xo(e) ? [e]
            : tn(e) ? Object.keys(e)
            : []
        );
    }
    getTagsConfig(e) {
        if (e.pasteConfig === !1) return;
        const t = e.pasteConfig.tags || [],
            n = [];
        t.forEach((i) => {
            const s = this.collectTagNames(i);
            n.push(...s),
                s.forEach((r) => {
                    if (
                        Object.prototype.hasOwnProperty.call(this.toolsTags, r)
                    ) {
                        pt(
                            `Paste handler for «${e.name}» Tool on «${r}» tag is skipped because it is already used by «${this.toolsTags[r].tool.name}» Tool.`,
                            'warn',
                        );
                        return;
                    }
                    const l = tn(i) ? i[r] : null;
                    this.toolsTags[r.toUpperCase()] = {
                        tool: e,
                        sanitizationConfig: l,
                    };
                });
        }),
            (this.tagsByTool[e.name] = n.map((i) => i.toUpperCase()));
    }
    getFilesConfig(e) {
        if (e.pasteConfig === !1) return;
        const { files: t = {} } = e.pasteConfig;
        let { extensions: n, mimeTypes: i } = t;
        (!n && !i) ||
            (n &&
                !Array.isArray(n) &&
                (pt(
                    `«extensions» property of the onDrop config for «${e.name}» Tool should be an array`,
                ),
                (n = [])),
            i &&
                !Array.isArray(i) &&
                (pt(
                    `«mimeTypes» property of the onDrop config for «${e.name}» Tool should be an array`,
                ),
                (i = [])),
            i &&
                (i = i.filter((s) =>
                    Vf(s) ? !0 : (
                        (pt(
                            `MIME type value «${s}» for the «${e.name}» Tool is not a valid MIME type`,
                            'warn',
                        ),
                        !1)
                    ),
                )),
            (this.toolsFiles[e.name] = {
                extensions: n || [],
                mimeTypes: i || [],
            }));
    }
    getPatternsConfig(e) {
        e.pasteConfig === !1 ||
            !e.pasteConfig.patterns ||
            jn(e.pasteConfig.patterns) ||
            Object.entries(e.pasteConfig.patterns).forEach(([t, n]) => {
                n instanceof RegExp ||
                    pt(
                        `Pattern ${n} for «${e.name}» Tool is skipped because it should be a Regexp instance.`,
                        'warn',
                    ),
                    this.toolsPatterns.push({ key: t, pattern: n, tool: e });
            });
    }
    isNativeBehaviour(e) {
        return oe.isNativeInput(e);
    }
    async processFiles(e) {
        const { BlockManager: t } = this.Editor;
        let n;
        (n = await Promise.all(Array.from(e).map((s) => this.processFile(s)))),
            (n = n.filter((s) => !!s));
        const i = t.currentBlock.tool.isDefault && t.currentBlock.isEmpty;
        n.forEach((s, r) => {
            t.paste(s.type, s.event, r === 0 && i);
        });
    }
    async processFile(e) {
        const t = qf(e),
            n = Object.entries(this.toolsFiles).find(
                ([s, { mimeTypes: r, extensions: l }]) => {
                    const [a, c] = e.type.split('/'),
                        h = l.find((p) => p.toLowerCase() === t.toLowerCase()),
                        u = r.find((p) => {
                            const [b, m] = p.split('/');
                            return b === a && (m === c || m === '*');
                        });
                    return !!h || !!u;
                },
            );
        if (!n) return;
        const [i] = n;
        return { event: this.composePasteEvent('file', { file: e }), type: i };
    }
    processHTML(e) {
        const { Tools: t } = this.Editor,
            n = oe.make('DIV');
        return (
            (n.innerHTML = e),
            this.getNodes(n)
                .map((i) => {
                    let s,
                        r = t.defaultTool,
                        l = !1;
                    switch (i.nodeType) {
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            (s = oe.make('div')), s.appendChild(i);
                            break;
                        case Node.ELEMENT_NODE:
                            (s = i),
                                (l = !0),
                                this.toolsTags[s.tagName] &&
                                    (r = this.toolsTags[s.tagName].tool);
                            break;
                    }
                    const { tags: a } = r.pasteConfig || { tags: [] },
                        c = a.reduce(
                            (p, b) => (
                                this.collectTagNames(b).forEach((m) => {
                                    const k = tn(b) ? b[m] : null;
                                    p[m.toLowerCase()] = k || {};
                                }),
                                p
                            ),
                            {},
                        ),
                        h = Object.assign({}, c, r.baseSanitizeConfig);
                    if (s.tagName.toLowerCase() === 'table') {
                        const p = io(s.outerHTML, h);
                        s = oe.make('div', void 0, { innerHTML: p }).firstChild;
                    } else s.innerHTML = io(s.innerHTML, h);
                    const u = this.composePasteEvent('tag', { data: s });
                    return { content: s, isBlock: l, tool: r.name, event: u };
                })
                .filter((i) => {
                    const s = oe.isEmpty(i.content),
                        r = oe.isSingleTag(i.content);
                    return !s || r;
                })
        );
    }
    processPlain(e) {
        const { defaultBlock: t } = this.config;
        if (!e) return [];
        const n = t;
        return e
            .split(/\r?\n/)
            .filter((i) => i.trim())
            .map((i) => {
                const s = oe.make('div');
                s.textContent = i;
                const r = this.composePasteEvent('tag', { data: s });
                return { content: s, tool: n, isBlock: !1, event: r };
            });
    }
    async processSingleBlock(e) {
        const { Caret: t, BlockManager: n } = this.Editor,
            { currentBlock: i } = n;
        if (
            !i ||
            e.tool !== i.name ||
            !oe.containsOnlyInlineElements(e.content.innerHTML)
        ) {
            this.insertBlock(e, i?.tool.isDefault && i.isEmpty);
            return;
        }
        t.insertContentAtCaretPosition(e.content.innerHTML);
    }
    async processInlinePaste(e) {
        const { BlockManager: t, Caret: n } = this.Editor,
            { content: i } = e;
        if (
            t.currentBlock &&
            t.currentBlock.tool.isDefault &&
            i.textContent.length < Yu.PATTERN_PROCESSING_MAX_LENGTH
        ) {
            const s = await this.processPattern(i.textContent);
            if (s) {
                const r =
                        t.currentBlock &&
                        t.currentBlock.tool.isDefault &&
                        t.currentBlock.isEmpty,
                    l = t.paste(s.tool, s.event, r);
                n.setToBlock(l, n.positions.END);
                return;
            }
        }
        if (t.currentBlock && t.currentBlock.currentInput) {
            const s = t.currentBlock.tool.baseSanitizeConfig;
            document.execCommand('insertHTML', !1, io(i.innerHTML, s));
        } else this.insertBlock(e);
    }
    async processPattern(e) {
        const t = this.toolsPatterns.find((n) => {
            const i = n.pattern.exec(e);
            return i ? e === i.shift() : !1;
        });
        return t ?
                {
                    event: this.composePasteEvent('pattern', {
                        key: t.key,
                        data: e,
                    }),
                    tool: t.tool.name,
                }
            :   void 0;
    }
    insertBlock(e, t = !1) {
        const { BlockManager: n, Caret: i } = this.Editor,
            { currentBlock: s } = n;
        let r;
        if (t && s && s.isEmpty) {
            (r = n.paste(e.tool, e.event, !0)),
                i.setToBlock(r, i.positions.END);
            return;
        }
        (r = n.paste(e.tool, e.event)), i.setToBlock(r, i.positions.END);
    }
    insertEditorJSData(e) {
        const { BlockManager: t, Caret: n, Tools: i } = this.Editor;
        Al(e, (s) => i.blockTools.get(s).sanitizeConfig).forEach(
            ({ tool: s, data: r }, l) => {
                let a = !1;
                l === 0 &&
                    (a =
                        t.currentBlock &&
                        t.currentBlock.tool.isDefault &&
                        t.currentBlock.isEmpty);
                const c = t.insert({ tool: s, data: r, replace: a });
                n.setToBlock(c, n.positions.END);
            },
        );
    }
    processElementNode(e, t, n) {
        const i = Object.keys(this.toolsTags),
            s = e,
            { tool: r } = this.toolsTags[s.tagName] || {},
            l = this.tagsByTool[r?.name] || [],
            a = i.includes(s.tagName),
            c = oe.blockElements.includes(s.tagName.toLowerCase()),
            h = Array.from(s.children).some(
                ({ tagName: p }) => i.includes(p) && !l.includes(p),
            ),
            u = Array.from(s.children).some(({ tagName: p }) =>
                oe.blockElements.includes(p.toLowerCase()),
            );
        if (!c && !a && !h) return n.appendChild(s), [...t, n];
        if ((a && !h) || (c && !u && !h)) return [...t, n, s];
    }
    getNodes(e) {
        const t = Array.from(e.childNodes);
        let n;
        const i = (s, r) => {
            if (oe.isEmpty(r) && !oe.isSingleTag(r)) return s;
            const l = s[s.length - 1];
            let a = new DocumentFragment();
            switch ((l && oe.isFragment(l) && (a = s.pop()), r.nodeType)) {
                case Node.ELEMENT_NODE:
                    if (((n = this.processElementNode(r, s, a)), n)) return n;
                    break;
                case Node.TEXT_NODE:
                    return a.appendChild(r), [...s, a];
                default:
                    return [...s, a];
            }
            return [...s, ...Array.from(r.childNodes).reduce(i, [])];
        };
        return t.reduce(i, []);
    }
    composePasteEvent(e, t) {
        return new CustomEvent(e, { detail: t });
    }
};
Vu.PATTERN_PROCESSING_MAX_LENGTH = 450;
let Im = Vu;
class Lm extends lt {
    constructor() {
        super(...arguments),
            (this.toolsDontSupportReadOnly = []),
            (this.readOnlyEnabled = !1);
    }
    get isEnabled() {
        return this.readOnlyEnabled;
    }
    async prepare() {
        const { Tools: e } = this.Editor,
            { blockTools: t } = e,
            n = [];
        Array.from(t.entries()).forEach(([i, s]) => {
            s.isReadOnlySupported || n.push(i);
        }),
            (this.toolsDontSupportReadOnly = n),
            this.config.readOnly && n.length > 0 && this.throwCriticalError(),
            this.toggle(this.config.readOnly, !0);
    }
    async toggle(e = !this.readOnlyEnabled, t = !1) {
        e &&
            this.toolsDontSupportReadOnly.length > 0 &&
            this.throwCriticalError();
        const n = this.readOnlyEnabled;
        this.readOnlyEnabled = e;
        for (const s in this.Editor)
            this.Editor[s].toggleReadOnly && this.Editor[s].toggleReadOnly(e);
        if (n === e) return this.readOnlyEnabled;
        if (t) return this.readOnlyEnabled;
        this.Editor.ModificationsObserver.disable();
        const i = await this.Editor.Saver.save();
        return (
            await this.Editor.BlockManager.clear(),
            await this.Editor.Renderer.render(i.blocks),
            this.Editor.ModificationsObserver.enable(),
            this.readOnlyEnabled
        );
    }
    throwCriticalError() {
        throw new vu(
            `To enable read-only mode all connected tools should support it. Tools ${this.toolsDontSupportReadOnly.join(', ')} don't support read-only mode.`,
        );
    }
}
class Ss extends lt {
    constructor() {
        super(...arguments),
            (this.isRectSelectionActivated = !1),
            (this.SCROLL_SPEED = 3),
            (this.HEIGHT_OF_SCROLL_ZONE = 40),
            (this.BOTTOM_SCROLL_ZONE = 1),
            (this.TOP_SCROLL_ZONE = 2),
            (this.MAIN_MOUSE_BUTTON = 0),
            (this.mousedown = !1),
            (this.isScrolling = !1),
            (this.inScrollZone = null),
            (this.startX = 0),
            (this.startY = 0),
            (this.mouseX = 0),
            (this.mouseY = 0),
            (this.stackOfSelected = []),
            (this.listenerIds = []);
    }
    static get CSS() {
        return {
            overlay: 'codex-editor-overlay',
            overlayContainer: 'codex-editor-overlay__container',
            rect: 'codex-editor-overlay__rectangle',
            topScrollZone: 'codex-editor-overlay__scroll-zone--top',
            bottomScrollZone: 'codex-editor-overlay__scroll-zone--bottom',
        };
    }
    prepare() {
        this.enableModuleBindings();
    }
    startSelection(e, t) {
        const n = document.elementFromPoint(
            e - window.pageXOffset,
            t - window.pageYOffset,
        );
        n.closest(`.${this.Editor.Toolbar.CSS.toolbar}`) ||
            ((this.Editor.BlockSelection.allBlocksSelected = !1),
            this.clearSelection(),
            (this.stackOfSelected = []));
        const i = [
                `.${Qt.CSS.content}`,
                `.${this.Editor.Toolbar.CSS.toolbar}`,
                `.${this.Editor.InlineToolbar.CSS.inlineToolbar}`,
            ],
            s = n.closest('.' + this.Editor.UI.CSS.editorWrapper),
            r = i.some((l) => !!n.closest(l));
        !s ||
            r ||
            ((this.mousedown = !0), (this.startX = e), (this.startY = t));
    }
    endSelection() {
        (this.mousedown = !1),
            (this.startX = 0),
            (this.startY = 0),
            (this.overlayRectangle.style.display = 'none');
    }
    isRectActivated() {
        return this.isRectSelectionActivated;
    }
    clearSelection() {
        this.isRectSelectionActivated = !1;
    }
    enableModuleBindings() {
        const { container: e } = this.genHTML();
        this.listeners.on(
            e,
            'mousedown',
            (t) => {
                this.processMouseDown(t);
            },
            !1,
        ),
            this.listeners.on(
                document.body,
                'mousemove',
                tl((t) => {
                    this.processMouseMove(t);
                }, 10),
                { passive: !0 },
            ),
            this.listeners.on(document.body, 'mouseleave', () => {
                this.processMouseLeave();
            }),
            this.listeners.on(
                window,
                'scroll',
                tl((t) => {
                    this.processScroll(t);
                }, 10),
                { passive: !0 },
            ),
            this.listeners.on(
                document.body,
                'mouseup',
                () => {
                    this.processMouseUp();
                },
                !1,
            );
    }
    processMouseDown(e) {
        e.button === this.MAIN_MOUSE_BUTTON &&
            (e.target.closest(oe.allInputsSelector) !== null ||
                this.startSelection(e.pageX, e.pageY));
    }
    processMouseMove(e) {
        this.changingRectangle(e), this.scrollByZones(e.clientY);
    }
    processMouseLeave() {
        this.clearSelection(), this.endSelection();
    }
    processScroll(e) {
        this.changingRectangle(e);
    }
    processMouseUp() {
        this.clearSelection(), this.endSelection();
    }
    scrollByZones(e) {
        if (
            ((this.inScrollZone = null),
            e <= this.HEIGHT_OF_SCROLL_ZONE &&
                (this.inScrollZone = this.TOP_SCROLL_ZONE),
            document.documentElement.clientHeight - e <=
                this.HEIGHT_OF_SCROLL_ZONE &&
                (this.inScrollZone = this.BOTTOM_SCROLL_ZONE),
            !this.inScrollZone)
        ) {
            this.isScrolling = !1;
            return;
        }
        this.isScrolling ||
            (this.scrollVertical(
                this.inScrollZone === this.TOP_SCROLL_ZONE ?
                    -this.SCROLL_SPEED
                :   this.SCROLL_SPEED,
            ),
            (this.isScrolling = !0));
    }
    genHTML() {
        const { UI: e } = this.Editor,
            t = e.nodes.holder.querySelector('.' + e.CSS.editorWrapper),
            n = oe.make('div', Ss.CSS.overlay, {}),
            i = oe.make('div', Ss.CSS.overlayContainer, {}),
            s = oe.make('div', Ss.CSS.rect, {});
        return (
            i.appendChild(s),
            n.appendChild(i),
            t.appendChild(n),
            (this.overlayRectangle = s),
            { container: t, overlay: n }
        );
    }
    scrollVertical(e) {
        if (!(this.inScrollZone && this.mousedown)) return;
        const t = window.pageYOffset;
        window.scrollBy(0, e),
            (this.mouseY += window.pageYOffset - t),
            setTimeout(() => {
                this.scrollVertical(e);
            }, 0);
    }
    changingRectangle(e) {
        if (!this.mousedown) return;
        e.pageY !== void 0 &&
            ((this.mouseX = e.pageX), (this.mouseY = e.pageY));
        const {
                rightPos: t,
                leftPos: n,
                index: i,
            } = this.genInfoForMouseSelection(),
            s = this.startX > t && this.mouseX > t,
            r = this.startX < n && this.mouseX < n;
        (this.rectCrossesBlocks = !(s || r)),
            this.isRectSelectionActivated ||
                ((this.rectCrossesBlocks = !1),
                (this.isRectSelectionActivated = !0),
                this.shrinkRectangleToPoint(),
                (this.overlayRectangle.style.display = 'block')),
            this.updateRectangleSize(),
            this.Editor.Toolbar.close(),
            i !== void 0 &&
                (this.trySelectNextBlock(i),
                this.inverseSelection(),
                We.get().removeAllRanges());
    }
    shrinkRectangleToPoint() {
        (this.overlayRectangle.style.left = `${this.startX - window.pageXOffset}px`),
            (this.overlayRectangle.style.top = `${this.startY - window.pageYOffset}px`),
            (this.overlayRectangle.style.bottom = `calc(100% - ${this.startY - window.pageYOffset}px`),
            (this.overlayRectangle.style.right = `calc(100% - ${this.startX - window.pageXOffset}px`);
    }
    inverseSelection() {
        const e = this.Editor.BlockManager.getBlockByIndex(
            this.stackOfSelected[0],
        ).selected;
        if (this.rectCrossesBlocks && !e)
            for (const t of this.stackOfSelected)
                this.Editor.BlockSelection.selectBlockByIndex(t);
        if (!this.rectCrossesBlocks && e)
            for (const t of this.stackOfSelected)
                this.Editor.BlockSelection.unSelectBlockByIndex(t);
    }
    updateRectangleSize() {
        this.mouseY >= this.startY ?
            ((this.overlayRectangle.style.top = `${this.startY - window.pageYOffset}px`),
            (this.overlayRectangle.style.bottom = `calc(100% - ${this.mouseY - window.pageYOffset}px`))
        :   ((this.overlayRectangle.style.bottom = `calc(100% - ${this.startY - window.pageYOffset}px`),
            (this.overlayRectangle.style.top = `${this.mouseY - window.pageYOffset}px`)),
            this.mouseX >= this.startX ?
                ((this.overlayRectangle.style.left = `${this.startX - window.pageXOffset}px`),
                (this.overlayRectangle.style.right = `calc(100% - ${this.mouseX - window.pageXOffset}px`))
            :   ((this.overlayRectangle.style.right = `calc(100% - ${this.startX - window.pageXOffset}px`),
                (this.overlayRectangle.style.left = `${this.mouseX - window.pageXOffset}px`));
    }
    genInfoForMouseSelection() {
        const e = document.body.offsetWidth / 2,
            t = this.mouseY - window.pageYOffset,
            n = document.elementFromPoint(e, t),
            i = this.Editor.BlockManager.getBlockByChildNode(n);
        let s;
        i !== void 0 &&
            (s = this.Editor.BlockManager.blocks.findIndex(
                (h) => h.holder === i.holder,
            ));
        const r = this.Editor.BlockManager.lastBlock.holder.querySelector(
                '.' + Qt.CSS.content,
            ),
            l = Number.parseInt(window.getComputedStyle(r).width, 10) / 2,
            a = e - l,
            c = e + l;
        return { index: s, leftPos: a, rightPos: c };
    }
    addBlockInSelection(e) {
        this.rectCrossesBlocks &&
            this.Editor.BlockSelection.selectBlockByIndex(e),
            this.stackOfSelected.push(e);
    }
    trySelectNextBlock(e) {
        const t = this.stackOfSelected[this.stackOfSelected.length - 1] === e,
            n = this.stackOfSelected.length,
            i = 1,
            s = -1,
            r = 0;
        if (t) return;
        const l = this.stackOfSelected[n - 1] - this.stackOfSelected[n - 2] > 0;
        let a = r;
        n > 1 && (a = l ? i : s);
        const c = e > this.stackOfSelected[n - 1] && a === i,
            h = e < this.stackOfSelected[n - 1] && a === s,
            u = !(c || h || a === r);
        if (
            !u &&
            (e > this.stackOfSelected[n - 1] ||
                this.stackOfSelected[n - 1] === void 0)
        ) {
            let m = this.stackOfSelected[n - 1] + 1 || e;
            for (m; m <= e; m++) this.addBlockInSelection(m);
            return;
        }
        if (!u && e < this.stackOfSelected[n - 1]) {
            for (let m = this.stackOfSelected[n - 1] - 1; m >= e; m--)
                this.addBlockInSelection(m);
            return;
        }
        if (!u) return;
        let p = n - 1,
            b;
        for (
            e > this.stackOfSelected[n - 1] ?
                (b = () => e > this.stackOfSelected[p])
            :   (b = () => e < this.stackOfSelected[p]);
            b();

        )
            this.rectCrossesBlocks &&
                this.Editor.BlockSelection.unSelectBlockByIndex(
                    this.stackOfSelected[p],
                ),
                this.stackOfSelected.pop(),
                p--;
    }
}
class Am extends lt {
    async render(e) {
        return new Promise((t) => {
            const { Tools: n, BlockManager: i } = this.Editor;
            if (e.length === 0) i.insert();
            else {
                const s = e.map(({ type: r, data: l, tunes: a, id: c }) => {
                    n.available.has(r) === !1 &&
                        (Dn(
                            `Tool «${r}» is not found. Check 'tools' property at the Editor.js config.`,
                            'warn',
                        ),
                        (l = this.composeStubDataForTool(r, l, c)),
                        (r = n.stubTool));
                    let h;
                    try {
                        h = i.composeBlock({
                            id: c,
                            tool: r,
                            data: l,
                            tunes: a,
                        });
                    } catch (u) {
                        pt(
                            `Block «${r}» skipped because of plugins error`,
                            'error',
                            { data: l, error: u },
                        ),
                            (l = this.composeStubDataForTool(r, l, c)),
                            (r = n.stubTool),
                            (h = i.composeBlock({
                                id: c,
                                tool: r,
                                data: l,
                                tunes: a,
                            }));
                    }
                    return h;
                });
                i.insertMany(s);
            }
            window.requestIdleCallback(
                () => {
                    t();
                },
                { timeout: 2e3 },
            );
        });
    }
    composeStubDataForTool(e, t, n) {
        const { Tools: i } = this.Editor;
        let s = e;
        if (i.unavailable.has(e)) {
            const r = i.unavailable.get(e).toolbox;
            r !== void 0 && r[0].title !== void 0 && (s = r[0].title);
        }
        return { savedData: { id: n, type: e, data: t }, title: s };
    }
}
class Om extends lt {
    async save() {
        const { BlockManager: e, Tools: t } = this.Editor,
            n = e.blocks,
            i = [];
        try {
            n.forEach((l) => {
                i.push(this.getSavedData(l));
            });
            const s = await Promise.all(i),
                r = await Al(s, (l) => t.blockTools.get(l).sanitizeConfig);
            return this.makeOutput(r);
        } catch (s) {
            Dn('Saving failed due to the Error %o', 'error', s);
        }
    }
    async getSavedData(e) {
        const t = await e.save(),
            n = t && (await e.validate(t.data));
        return { ...t, isValid: n };
    }
    makeOutput(e) {
        const t = [];
        return (
            e.forEach(({ id: n, tool: i, data: s, tunes: r, isValid: l }) => {
                if (!l) {
                    pt(`Block «${i}» skipped because saved data is invalid`);
                    return;
                }
                if (i === this.Editor.Tools.stubTool) {
                    t.push(s);
                    return;
                }
                const a = {
                    id: n,
                    type: i,
                    data: s,
                    ...(!jn(r) && { tunes: r }),
                };
                t.push(a);
            }),
            { time: +new Date(), blocks: t, version: '2.30.5' }
        );
    }
}
(function () {
    try {
        if (typeof document < 'u') {
            var o = document.createElement('style');
            o.appendChild(
                document.createTextNode(
                    '.ce-paragraph{line-height:1.6em;outline:none}.ce-block:only-of-type .ce-paragraph[data-placeholder-active]:empty:before,.ce-block:only-of-type .ce-paragraph[data-placeholder-active][data-empty=true]:before{content:attr(data-placeholder-active)}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}',
                ),
            ),
                document.head.appendChild(o);
        }
    } catch (e) {
        console.error('vite-plugin-css-injected-by-js', e);
    }
})();
const Mm =
    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>';
function Pm(o) {
    const e = document.createElement('div');
    e.innerHTML = o.trim();
    const t = document.createDocumentFragment();
    return t.append(...Array.from(e.childNodes)), t;
}
/**
 * Base Paragraph Block for the Editor.js.
 * Represents a regular text block
 *
 * @author CodeX (team@codex.so)
 * @copyright CodeX 2018
 * @license The MIT License (MIT)
 */ class Hl {
    static get DEFAULT_PLACEHOLDER() {
        return '';
    }
    constructor({ data: e, config: t, api: n, readOnly: i }) {
        (this.api = n),
            (this.readOnly = i),
            (this._CSS = {
                block: this.api.styles.block,
                wrapper: 'ce-paragraph',
            }),
            this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)),
            (this._placeholder =
                t.placeholder ? t.placeholder : Hl.DEFAULT_PLACEHOLDER),
            (this._data = e ?? {}),
            (this._element = null),
            (this._preserveBlank = t.preserveBlank ?? !1);
    }
    onKeyUp(e) {
        if ((e.code !== 'Backspace' && e.code !== 'Delete') || !this._element)
            return;
        const { textContent: t } = this._element;
        t === '' && (this._element.innerHTML = '');
    }
    drawView() {
        const e = document.createElement('DIV');
        return (
            e.classList.add(this._CSS.wrapper, this._CSS.block),
            (e.contentEditable = 'false'),
            (e.dataset.placeholderActive = this.api.i18n.t(this._placeholder)),
            this._data.text && (e.innerHTML = this._data.text),
            this.readOnly ||
                ((e.contentEditable = 'true'),
                e.addEventListener('keyup', this.onKeyUp)),
            e
        );
    }
    render() {
        return (this._element = this.drawView()), this._element;
    }
    merge(e) {
        if (!this._element) return;
        this._data.text += e.text;
        const t = Pm(e.text);
        this._element.appendChild(t), this._element.normalize();
    }
    validate(e) {
        return !(e.text.trim() === '' && !this._preserveBlank);
    }
    save(e) {
        return { text: e.innerHTML };
    }
    onPaste(e) {
        const t = { text: e.detail.data.innerHTML };
        (this._data = t),
            window.requestAnimationFrame(() => {
                this._element &&
                    (this._element.innerHTML = this._data.text || '');
            });
    }
    static get conversionConfig() {
        return { export: 'text', import: 'text' };
    }
    static get sanitize() {
        return { text: { br: !0 } };
    }
    static get isReadOnlySupported() {
        return !0;
    }
    static get pasteConfig() {
        return { tags: ['P'] };
    }
    static get toolbox() {
        return { icon: Mm, title: 'Text' };
    }
}
class zl {
    constructor() {
        this.commandName = 'bold';
    }
    static get sanitize() {
        return { b: {} };
    }
    render() {
        return {
            icon: Hg,
            name: 'bold',
            onActivate: () => {
                document.execCommand(this.commandName);
            },
            isActive: () => document.queryCommandState(this.commandName),
        };
    }
    get shortcut() {
        return 'CMD+B';
    }
}
zl.isInline = !0;
zl.title = 'Bold';
class Ul {
    constructor() {
        (this.commandName = 'italic'),
            (this.CSS = {
                button: 'ce-inline-tool',
                buttonActive: 'ce-inline-tool--active',
                buttonModifier: 'ce-inline-tool--italic',
            }),
            (this.nodes = { button: null });
    }
    static get sanitize() {
        return { i: {} };
    }
    render() {
        return (
            (this.nodes.button = document.createElement('button')),
            (this.nodes.button.type = 'button'),
            this.nodes.button.classList.add(
                this.CSS.button,
                this.CSS.buttonModifier,
            ),
            (this.nodes.button.innerHTML = qg),
            this.nodes.button
        );
    }
    surround() {
        document.execCommand(this.commandName);
    }
    checkState() {
        const e = document.queryCommandState(this.commandName);
        return this.nodes.button.classList.toggle(this.CSS.buttonActive, e), e;
    }
    get shortcut() {
        return 'CMD+I';
    }
}
Ul.isInline = !0;
Ul.title = 'Italic';
class jl {
    constructor({ api: e }) {
        (this.commandLink = 'createLink'),
            (this.commandUnlink = 'unlink'),
            (this.ENTER_KEY = 13),
            (this.CSS = {
                button: 'ce-inline-tool',
                buttonActive: 'ce-inline-tool--active',
                buttonModifier: 'ce-inline-tool--link',
                buttonUnlink: 'ce-inline-tool--unlink',
                input: 'ce-inline-tool-input',
                inputShowed: 'ce-inline-tool-input--showed',
            }),
            (this.nodes = { button: null, input: null }),
            (this.inputOpened = !1),
            (this.toolbar = e.toolbar),
            (this.inlineToolbar = e.inlineToolbar),
            (this.notifier = e.notifier),
            (this.i18n = e.i18n),
            (this.selection = new We());
    }
    static get sanitize() {
        return { a: { href: !0, target: '_blank', rel: 'nofollow' } };
    }
    render() {
        return (
            (this.nodes.button = document.createElement('button')),
            (this.nodes.button.type = 'button'),
            this.nodes.button.classList.add(
                this.CSS.button,
                this.CSS.buttonModifier,
            ),
            (this.nodes.button.innerHTML = _a),
            this.nodes.button
        );
    }
    renderActions() {
        return (
            (this.nodes.input = document.createElement('input')),
            (this.nodes.input.placeholder = this.i18n.t('Add a link')),
            (this.nodes.input.enterKeyHint = 'done'),
            this.nodes.input.classList.add(this.CSS.input),
            this.nodes.input.addEventListener('keydown', (e) => {
                e.keyCode === this.ENTER_KEY && this.enterPressed(e);
            }),
            this.nodes.input
        );
    }
    surround(e) {
        if (e) {
            this.inputOpened ?
                (this.selection.restore(),
                this.selection.removeFakeBackground())
            :   (this.selection.setFakeBackground(), this.selection.save());
            const t = this.selection.findParentTag('A');
            if (t) {
                this.selection.expandToTag(t),
                    this.unlink(),
                    this.closeActions(),
                    this.checkState(),
                    this.toolbar.close();
                return;
            }
        }
        this.toggleActions();
    }
    checkState() {
        const e = this.selection.findParentTag('A');
        if (e) {
            (this.nodes.button.innerHTML = Xg),
                this.nodes.button.classList.add(this.CSS.buttonUnlink),
                this.nodes.button.classList.add(this.CSS.buttonActive),
                this.openActions();
            const t = e.getAttribute('href');
            (this.nodes.input.value = t !== 'null' ? t : ''),
                this.selection.save();
        } else
            (this.nodes.button.innerHTML = _a),
                this.nodes.button.classList.remove(this.CSS.buttonUnlink),
                this.nodes.button.classList.remove(this.CSS.buttonActive);
        return !!e;
    }
    clear() {
        this.closeActions();
    }
    get shortcut() {
        return 'CMD+K';
    }
    toggleActions() {
        this.inputOpened ? this.closeActions(!1) : this.openActions(!0);
    }
    openActions(e = !1) {
        this.nodes.input.classList.add(this.CSS.inputShowed),
            e && this.nodes.input.focus(),
            (this.inputOpened = !0);
    }
    closeActions(e = !0) {
        if (this.selection.isFakeBackgroundEnabled) {
            const t = new We();
            t.save(),
                this.selection.restore(),
                this.selection.removeFakeBackground(),
                t.restore();
        }
        this.nodes.input.classList.remove(this.CSS.inputShowed),
            (this.nodes.input.value = ''),
            e && this.selection.clearSaved(),
            (this.inputOpened = !1);
    }
    enterPressed(e) {
        let t = this.nodes.input.value || '';
        if (!t.trim()) {
            this.selection.restore(),
                this.unlink(),
                e.preventDefault(),
                this.closeActions();
            return;
        }
        if (!this.validateURL(t)) {
            this.notifier.show({
                message: 'Pasted link is not valid.',
                style: 'error',
            }),
                pt('Incorrect Link pasted', 'warn', t);
            return;
        }
        (t = this.prepareLink(t)),
            this.selection.restore(),
            this.selection.removeFakeBackground(),
            this.insertLink(t),
            e.preventDefault(),
            e.stopPropagation(),
            e.stopImmediatePropagation(),
            this.selection.collapseToEnd(),
            this.inlineToolbar.close();
    }
    validateURL(e) {
        return !/\s/.test(e);
    }
    prepareLink(e) {
        return (e = e.trim()), (e = this.addProtocol(e)), e;
    }
    addProtocol(e) {
        if (/^(\w+):(\/\/)?/.test(e)) return e;
        const t = /^\/[^/\s]/.test(e),
            n = e.substring(0, 1) === '#',
            i = /^\/\/[^/\s]/.test(e);
        return !t && !n && !i && (e = 'http://' + e), e;
    }
    insertLink(e) {
        const t = this.selection.findParentTag('A');
        t && this.selection.expandToTag(t),
            document.execCommand(this.commandLink, !1, e);
    }
    unlink() {
        document.execCommand(this.commandUnlink);
    }
}
jl.isInline = !0;
jl.title = 'Link';
class Ku {
    constructor({ api: e }) {
        (this.i18nAPI = e.i18n),
            (this.blocksAPI = e.blocks),
            (this.selectionAPI = e.selection),
            (this.toolsAPI = e.tools),
            (this.caretAPI = e.caret);
    }
    async render() {
        const e = We.get(),
            t = this.blocksAPI.getBlockByElement(e.anchorNode);
        if (t === void 0) return [];
        const n = this.toolsAPI.getBlockTools(),
            i = await Su(t, n);
        if (i.length === 0) return [];
        const s = i.reduce((c, h) => {
                var u;
                return (
                    (u = h.toolbox) == null ||
                        u.forEach((p) => {
                            c.push({
                                icon: p.icon,
                                title: dn.t(Ln.toolNames, p.title),
                                name: h.name,
                                closeOnActivate: !0,
                                onActivate: async () => {
                                    const b = await this.blocksAPI.convert(
                                        t.id,
                                        h.name,
                                        p.data,
                                    );
                                    this.caretAPI.setToBlock(b, 'end');
                                },
                            });
                        }),
                    c
                );
            }, []),
            r = await t.getActiveToolboxEntry(),
            l = r !== void 0 ? r.icon : Mu,
            a = !Wi();
        return {
            icon: l,
            name: 'convert-to',
            hint: { title: this.i18nAPI.t('Convert to') },
            children: {
                searchable: a,
                items: s,
                onOpen: () => {
                    a &&
                        (this.selectionAPI.setFakeBackground(),
                        this.selectionAPI.save());
                },
                onClose: () => {
                    a &&
                        (this.selectionAPI.restore(),
                        this.selectionAPI.removeFakeBackground());
                },
            },
        };
    }
}
Ku.isInline = !0;
class Xu {
    constructor({ data: e, api: t }) {
        (this.CSS = {
            wrapper: 'ce-stub',
            info: 'ce-stub__info',
            title: 'ce-stub__title',
            subtitle: 'ce-stub__subtitle',
        }),
            (this.api = t),
            (this.title = e.title || this.api.i18n.t('Error')),
            (this.subtitle = this.api.i18n.t(
                'The block can not be displayed correctly.',
            )),
            (this.savedData = e.savedData),
            (this.wrapper = this.make());
    }
    render() {
        return this.wrapper;
    }
    save() {
        return this.savedData;
    }
    make() {
        const e = oe.make('div', this.CSS.wrapper),
            t = Zg,
            n = oe.make('div', this.CSS.info),
            i = oe.make('div', this.CSS.title, { textContent: this.title }),
            s = oe.make('div', this.CSS.subtitle, {
                textContent: this.subtitle,
            });
        return (
            (e.innerHTML = t),
            n.appendChild(i),
            n.appendChild(s),
            e.appendChild(n),
            e
        );
    }
}
Xu.isReadOnlySupported = !0;
class Nm extends Fl {
    constructor() {
        super(...arguments), (this.type = ai.Inline);
    }
    get title() {
        return this.constructable[Dl.Title];
    }
    create() {
        return new this.constructable({ api: this.api, config: this.settings });
    }
}
let Rm = class extends Fl {
    constructor() {
        super(...arguments), (this.type = ai.Tune);
    }
    create(e, t) {
        return new this.constructable({
            api: this.api,
            config: this.settings,
            block: t,
            data: e,
        });
    }
};
class on extends Map {
    get blockTools() {
        const e = Array.from(this.entries()).filter(([, t]) => t.isBlock());
        return new on(e);
    }
    get inlineTools() {
        const e = Array.from(this.entries()).filter(([, t]) => t.isInline());
        return new on(e);
    }
    get blockTunes() {
        const e = Array.from(this.entries()).filter(([, t]) => t.isTune());
        return new on(e);
    }
    get internalTools() {
        const e = Array.from(this.entries()).filter(([, t]) => t.isInternal);
        return new on(e);
    }
    get externalTools() {
        const e = Array.from(this.entries()).filter(([, t]) => !t.isInternal);
        return new on(e);
    }
}
var Dm = Object.defineProperty,
    Fm = Object.getOwnPropertyDescriptor,
    Zu = (o, e, t, n) => {
        for (var i = Fm(e, t), s = o.length - 1, r; s >= 0; s--)
            (r = o[s]) && (i = r(e, t, i) || i);
        return i && Dm(e, t, i), i;
    };
class $l extends Fl {
    constructor() {
        super(...arguments),
            (this.type = ai.Block),
            (this.inlineTools = new on()),
            (this.tunes = new on());
    }
    create(e, t, n) {
        return new this.constructable({
            data: e,
            block: t,
            readOnly: n,
            api: this.api,
            config: this.settings,
        });
    }
    get isReadOnlySupported() {
        return this.constructable[xi.IsReadOnlySupported] === !0;
    }
    get isLineBreaksEnabled() {
        return this.constructable[xi.IsEnabledLineBreaks];
    }
    get toolbox() {
        const e = this.constructable[xi.Toolbox],
            t = this.config[Zs.Toolbox];
        if (!jn(e) && t !== !1)
            return (
                t ?
                    Array.isArray(e) ?
                        Array.isArray(t) ?
                            t.map((n, i) => {
                                const s = e[i];
                                return s ? { ...s, ...n } : n;
                            })
                        :   [t]
                    : Array.isArray(t) ? t
                    : [{ ...e, ...t }]
                : Array.isArray(e) ? e
                : [e]
            );
    }
    get conversionConfig() {
        return this.constructable[xi.ConversionConfig];
    }
    get enabledInlineTools() {
        return this.config[Zs.EnabledInlineTools] || !1;
    }
    get enabledBlockTunes() {
        return this.config[Zs.EnabledBlockTunes];
    }
    get pasteConfig() {
        return this.constructable[xi.PasteConfig] ?? {};
    }
    get sanitizeConfig() {
        const e = super.sanitizeConfig,
            t = this.baseSanitizeConfig;
        if (jn(e)) return t;
        const n = {};
        for (const i in e)
            if (Object.prototype.hasOwnProperty.call(e, i)) {
                const s = e[i];
                tn(s) ? (n[i] = Object.assign({}, t, s)) : (n[i] = s);
            }
        return n;
    }
    get baseSanitizeConfig() {
        const e = {};
        return (
            Array.from(this.inlineTools.values()).forEach((t) =>
                Object.assign(e, t.sanitizeConfig),
            ),
            Array.from(this.tunes.values()).forEach((t) =>
                Object.assign(e, t.sanitizeConfig),
            ),
            e
        );
    }
}
Zu([$i], $l.prototype, 'sanitizeConfig');
Zu([$i], $l.prototype, 'baseSanitizeConfig');
class Hm {
    constructor(e, t, n) {
        (this.api = n), (this.config = e), (this.editorConfig = t);
    }
    get(e) {
        const { class: t, isInternal: n = !1, ...i } = this.config[e],
            s = this.getConstructor(t),
            r = t[rl.IsTune];
        return new s({
            name: e,
            constructable: t,
            config: i,
            api: this.api.getMethodsForTool(e, r),
            isDefault: e === this.editorConfig.defaultBlock,
            defaultPlaceholder: this.editorConfig.placeholder,
            isInternal: n,
        });
    }
    getConstructor(e) {
        switch (!0) {
            case e[Dl.IsInline]:
                return Nm;
            case e[rl.IsTune]:
                return Rm;
            default:
                return $l;
        }
    }
}
class Ju {
    constructor({ api: e }) {
        (this.CSS = { animation: 'wobble' }), (this.api = e);
    }
    render() {
        return {
            icon: zg,
            title: this.api.i18n.t('Move down'),
            onActivate: () => this.handleClick(),
            name: 'move-down',
        };
    }
    handleClick() {
        const e = this.api.blocks.getCurrentBlockIndex(),
            t = this.api.blocks.getBlockByIndex(e + 1);
        if (!t)
            throw new Error(
                'Unable to move Block down since it is already the last',
            );
        const n = t.holder,
            i = n.getBoundingClientRect();
        let s = Math.abs(window.innerHeight - n.offsetHeight);
        i.top < window.innerHeight && (s = window.scrollY + n.offsetHeight),
            window.scrollTo(0, s),
            this.api.blocks.move(e + 1),
            this.api.toolbar.toggleBlockSettings(!0);
    }
}
Ju.isTune = !0;
class Qu {
    constructor({ api: e }) {
        this.api = e;
    }
    render() {
        return {
            icon: Wg,
            title: this.api.i18n.t('Delete'),
            name: 'delete',
            confirmation: {
                title: this.api.i18n.t('Click to delete'),
                onActivate: () => this.handleClick(),
            },
        };
    }
    handleClick() {
        this.api.blocks.delete();
    }
}
Qu.isTune = !0;
class ep {
    constructor({ api: e }) {
        (this.CSS = { animation: 'wobble' }), (this.api = e);
    }
    render() {
        return {
            icon: $g,
            title: this.api.i18n.t('Move up'),
            onActivate: () => this.handleClick(),
            name: 'move-up',
        };
    }
    handleClick() {
        const e = this.api.blocks.getCurrentBlockIndex(),
            t = this.api.blocks.getBlockByIndex(e),
            n = this.api.blocks.getBlockByIndex(e - 1);
        if (e === 0 || !t || !n)
            throw new Error(
                'Unable to move Block up since it is already the first',
            );
        const i = t.holder,
            s = n.holder,
            r = i.getBoundingClientRect(),
            l = s.getBoundingClientRect();
        let a;
        l.top > 0 ?
            (a = Math.abs(r.top) - Math.abs(l.top))
        :   (a = Math.abs(r.top) + l.height),
            window.scrollBy(0, -1 * a),
            this.api.blocks.move(e - 1),
            this.api.toolbar.toggleBlockSettings(!0);
    }
}
ep.isTune = !0;
var zm = Object.defineProperty,
    Um = Object.getOwnPropertyDescriptor,
    jm = (o, e, t, n) => {
        for (var i = Um(e, t), s = o.length - 1, r; s >= 0; s--)
            (r = o[s]) && (i = r(e, t, i) || i);
        return i && zm(e, t, i), i;
    };
class tp extends lt {
    constructor() {
        super(...arguments),
            (this.stubTool = 'stub'),
            (this.toolsAvailable = new on()),
            (this.toolsUnavailable = new on());
    }
    get available() {
        return this.toolsAvailable;
    }
    get unavailable() {
        return this.toolsUnavailable;
    }
    get inlineTools() {
        return this.available.inlineTools;
    }
    get blockTools() {
        return this.available.blockTools;
    }
    get blockTunes() {
        return this.available.blockTunes;
    }
    get defaultTool() {
        return this.blockTools.get(this.config.defaultBlock);
    }
    get internal() {
        return this.available.internalTools;
    }
    async prepare() {
        if (
            (this.validateTools(),
            (this.config.tools = nl({}, this.internalTools, this.config.tools)),
            !Object.prototype.hasOwnProperty.call(this.config, 'tools') ||
                Object.keys(this.config.tools).length === 0)
        )
            throw Error("Can't start without tools");
        const e = this.prepareConfig();
        this.factory = new Hm(e, this.config, this.Editor.API);
        const t = this.getListOfPrepareFunctions(e);
        if (t.length === 0) return Promise.resolve();
        await Gf(
            t,
            (n) => {
                this.toolPrepareMethodSuccess(n);
            },
            (n) => {
                this.toolPrepareMethodFallback(n);
            },
        ),
            this.prepareBlockTools();
    }
    getAllInlineToolsSanitizeConfig() {
        const e = {};
        return (
            Array.from(this.inlineTools.values()).forEach((t) => {
                Object.assign(e, t.sanitizeConfig);
            }),
            e
        );
    }
    destroy() {
        Object.values(this.available).forEach(async (e) => {
            Mt(e.reset) && (await e.reset());
        });
    }
    get internalTools() {
        return {
            convertTo: { class: Ku, isInternal: !0 },
            link: { class: jl, isInternal: !0 },
            bold: { class: zl, isInternal: !0 },
            italic: { class: Ul, isInternal: !0 },
            paragraph: { class: Hl, inlineToolbar: !0, isInternal: !0 },
            stub: { class: Xu, isInternal: !0 },
            moveUp: { class: ep, isInternal: !0 },
            delete: { class: Qu, isInternal: !0 },
            moveDown: { class: Ju, isInternal: !0 },
        };
    }
    toolPrepareMethodSuccess(e) {
        const t = this.factory.get(e.toolName);
        if (t.isInline()) {
            const n = ['render'].filter((i) => !t.create()[i]);
            if (n.length) {
                pt(
                    `Incorrect Inline Tool: ${t.name}. Some of required methods is not implemented %o`,
                    'warn',
                    n,
                ),
                    this.toolsUnavailable.set(t.name, t);
                return;
            }
        }
        this.toolsAvailable.set(t.name, t);
    }
    toolPrepareMethodFallback(e) {
        this.toolsUnavailable.set(e.toolName, this.factory.get(e.toolName));
    }
    getListOfPrepareFunctions(e) {
        const t = [];
        return (
            Object.entries(e).forEach(([n, i]) => {
                t.push({
                    function: Mt(i.class.prepare) ? i.class.prepare : () => {},
                    data: { toolName: n, config: i.config },
                });
            }),
            t
        );
    }
    prepareBlockTools() {
        Array.from(this.blockTools.values()).forEach((e) => {
            this.assignInlineToolsToBlockTool(e),
                this.assignBlockTunesToBlockTool(e);
        });
    }
    assignInlineToolsToBlockTool(e) {
        if (this.config.inlineToolbar !== !1) {
            if (e.enabledInlineTools === !0) {
                e.inlineTools = new on(
                    Array.isArray(this.config.inlineToolbar) ?
                        this.config.inlineToolbar.map((t) => [
                            t,
                            this.inlineTools.get(t),
                        ])
                    :   Array.from(this.inlineTools.entries()),
                );
                return;
            }
            Array.isArray(e.enabledInlineTools) &&
                (e.inlineTools = new on(
                    ['convertTo', ...e.enabledInlineTools].map((t) => [
                        t,
                        this.inlineTools.get(t),
                    ]),
                ));
        }
    }
    assignBlockTunesToBlockTool(e) {
        if (e.enabledBlockTunes !== !1) {
            if (Array.isArray(e.enabledBlockTunes)) {
                const t = new on(
                    e.enabledBlockTunes.map((n) => [n, this.blockTunes.get(n)]),
                );
                e.tunes = new on([...t, ...this.blockTunes.internalTools]);
                return;
            }
            if (Array.isArray(this.config.tunes)) {
                const t = new on(
                    this.config.tunes.map((n) => [n, this.blockTunes.get(n)]),
                );
                e.tunes = new on([...t, ...this.blockTunes.internalTools]);
                return;
            }
            e.tunes = this.blockTunes.internalTools;
        }
    }
    validateTools() {
        for (const e in this.config.tools)
            if (Object.prototype.hasOwnProperty.call(this.config.tools, e)) {
                if (e in this.internalTools) return;
                const t = this.config.tools[e];
                if (!Mt(t) && !Mt(t.class))
                    throw Error(
                        `Tool «${e}» must be a constructor function or an object with function in the «class» property`,
                    );
            }
    }
    prepareConfig() {
        const e = {};
        for (const t in this.config.tools)
            tn(this.config.tools[t]) ?
                (e[t] = this.config.tools[t])
            :   (e[t] = { class: this.config.tools[t] });
        return e;
    }
}
jm([$i], tp.prototype, 'getAllInlineToolsSanitizeConfig');
const $m = `:root{--selectionColor: #e1f2ff;--inlineSelectionColor: #d4ecff;--bg-light: #eff2f5;--grayText: #707684;--color-dark: #1D202B;--color-active-icon: #388AE5;--color-gray-border: rgba(201, 201, 204, .48);--content-width: 650px;--narrow-mode-right-padding: 50px;--toolbox-buttons-size: 26px;--toolbox-buttons-size--mobile: 36px;--icon-size: 20px;--icon-size--mobile: 28px;--block-padding-vertical: .4em;--color-line-gray: #EFF0F1 }.codex-editor{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:1}.codex-editor .hide{display:none}.codex-editor__redactor [contenteditable]:empty:after{content:"\\feff"}@media (min-width: 651px){.codex-editor--narrow .codex-editor__redactor{margin-right:50px}}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .codex-editor__redactor{margin-left:50px;margin-right:0}}@media (min-width: 651px){.codex-editor--narrow .ce-toolbar__actions{right:-5px}}.codex-editor-copyable{position:absolute;height:1px;width:1px;top:-400%;opacity:.001}.codex-editor-overlay{position:fixed;top:0;left:0;right:0;bottom:0;z-index:999;pointer-events:none;overflow:hidden}.codex-editor-overlay__container{position:relative;pointer-events:auto;z-index:0}.codex-editor-overlay__rectangle{position:absolute;pointer-events:none;background-color:#2eaadc33;border:1px solid transparent}.codex-editor svg{max-height:100%}.codex-editor path{stroke:currentColor}.codex-editor ::-moz-selection{background-color:#d4ecff}.codex-editor ::selection{background-color:#d4ecff}.codex-editor--toolbox-opened [contentEditable=true][data-placeholder]:focus:before{opacity:0!important}.ce-scroll-locked{overflow:hidden}.ce-scroll-locked--hard{overflow:hidden;top:calc(-1 * var(--window-scroll-offset));position:fixed;width:100%}.ce-toolbar{position:absolute;left:0;right:0;top:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;will-change:opacity,top;display:none}.ce-toolbar--opened{display:block}.ce-toolbar__content{max-width:650px;margin:0 auto;position:relative}.ce-toolbar__plus{color:#1d202b;cursor:pointer;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-negative:0;flex-shrink:0}@media (max-width: 650px){.ce-toolbar__plus{width:36px;height:36px}}@media (hover: hover){.ce-toolbar__plus:hover{background-color:#eff2f5}}.ce-toolbar__plus--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-toolbar__plus-shortcut{opacity:.6;word-spacing:-2px;margin-top:5px}@media (max-width: 650px){.ce-toolbar__plus{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;position:static}.ce-toolbar__plus--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__plus--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__actions{position:absolute;right:100%;opacity:0;display:-webkit-box;display:-ms-flexbox;display:flex;padding-right:5px}.ce-toolbar__actions--opened{opacity:1}@media (max-width: 650px){.ce-toolbar__actions{right:auto}}.ce-toolbar__settings-btn{color:#1d202b;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;margin-left:3px;cursor:pointer;user-select:none}@media (max-width: 650px){.ce-toolbar__settings-btn{width:36px;height:36px}}@media (hover: hover){.ce-toolbar__settings-btn:hover{background-color:#eff2f5}}.ce-toolbar__settings-btn--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}@media (min-width: 651px){.ce-toolbar__settings-btn{width:24px}}.ce-toolbar__settings-btn--hidden{display:none}@media (max-width: 650px){.ce-toolbar__settings-btn{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;position:static}.ce-toolbar__settings-btn--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__settings-btn--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__plus svg,.ce-toolbar__settings-btn svg{width:24px;height:24px}@media (min-width: 651px){.codex-editor--narrow .ce-toolbar__plus{left:5px}}@media (min-width: 651px){.codex-editor--narrow .ce-toolbox .ce-popover{right:0;left:auto;left:initial}}.ce-inline-toolbar{--y-offset: 8px;--color-background-icon-active: rgba(56, 138, 229, .1);--color-text-icon-active: #388AE5;--color-text-primary: black;position:absolute;visibility:hidden;-webkit-transition:opacity .25s ease;transition:opacity .25s ease;will-change:opacity,left,top;top:0;left:0;z-index:3;opacity:1;visibility:visible}.ce-inline-toolbar [hidden]{display:none!important}.ce-inline-toolbar__toggler-and-button-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:0 6px}.ce-inline-toolbar__buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown{display:-webkit-box;display:-ms-flexbox;display:flex;padding:6px;margin:0 6px 0 -6px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;border-right:1px solid rgba(201,201,204,.48);-webkit-box-sizing:border-box;box-sizing:border-box}@media (hover: hover){.ce-inline-toolbar__dropdown:hover{background:#eff2f5}}.ce-inline-toolbar__dropdown--hidden{display:none}.ce-inline-toolbar__dropdown-content,.ce-inline-toolbar__dropdown-arrow{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown-content svg,.ce-inline-toolbar__dropdown-arrow svg{width:20px;height:20px}.ce-inline-toolbar__shortcut{opacity:.6;word-spacing:-3px;margin-top:3px}.ce-inline-tool{color:var(--color-text-primary);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:0;border-radius:4px;line-height:normal;height:100%;padding:0;width:28px;background-color:transparent;cursor:pointer}@media (max-width: 650px){.ce-inline-tool{width:36px;height:36px}}@media (hover: hover){.ce-inline-tool:hover{background-color:#f8f8f8}}.ce-inline-tool svg{display:block;width:20px;height:20px}@media (max-width: 650px){.ce-inline-tool svg{width:28px;height:28px}}.ce-inline-tool--link .icon--unlink,.ce-inline-tool--unlink .icon--link{display:none}.ce-inline-tool--unlink .icon--unlink{display:inline-block;margin-bottom:-1px}.ce-inline-tool-input{background:#F8F8F8;border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:4px 8px;font-size:14px;line-height:22px;outline:none;margin:0;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;display:none;font-weight:500;-webkit-appearance:none;font-family:inherit}@media (max-width: 650px){.ce-inline-tool-input{font-size:15px;font-weight:500}}.ce-inline-tool-input::-webkit-input-placeholder{color:#707684}.ce-inline-tool-input::-moz-placeholder{color:#707684}.ce-inline-tool-input:-ms-input-placeholder{color:#707684}.ce-inline-tool-input::-ms-input-placeholder{color:#707684}.ce-inline-tool-input::placeholder{color:#707684}.ce-inline-tool-input--showed{display:block}.ce-inline-tool--active{background:var(--color-background-icon-active);color:var(--color-text-icon-active)}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.ce-block{-webkit-animation:fade-in .3s ease;animation:fade-in .3s ease;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-fill-mode:initial;animation-fill-mode:initial}.ce-block:first-of-type{margin-top:0}.ce-block--selected .ce-block__content{background:#e1f2ff}.ce-block--selected .ce-block__content [contenteditable]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ce-block--selected .ce-block__content img,.ce-block--selected .ce-block__content .ce-stub{opacity:.55}.ce-block--stretched .ce-block__content{max-width:none}.ce-block__content{position:relative;max-width:650px;margin:0 auto;-webkit-transition:background-color .15s ease;transition:background-color .15s ease}.ce-block--drop-target .ce-block__content:before{content:"";position:absolute;top:100%;left:-20px;margin-top:-1px;height:8px;width:8px;border:solid #388AE5;border-width:1px 1px 0 0;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.ce-block--drop-target .ce-block__content:after{content:"";position:absolute;top:100%;height:1px;width:100%;color:#388ae5;background:repeating-linear-gradient(90deg,#388AE5,#388AE5 1px,#fff 1px,#fff 6px)}.ce-block a{cursor:pointer;-webkit-text-decoration:underline;text-decoration:underline}.ce-block b{font-weight:700}.ce-block i{font-style:italic}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@-webkit-keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@-webkit-keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}.cdx-block{padding:.4em 0}.cdx-block::-webkit-input-placeholder{line-height:normal!important}.cdx-input{border:1px solid rgba(201,201,204,.48);-webkit-box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);box-shadow:inset 0 1px 2px #232c480f;border-radius:3px;padding:10px 12px;outline:none;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.cdx-input[data-placeholder]:before{position:static!important}.cdx-input[data-placeholder]:before{display:inline-block;width:0;white-space:nowrap;pointer-events:none}.cdx-settings-button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0;min-width:26px;min-height:26px}.cdx-settings-button--focused{background:rgba(34,186,255,.08)!important}.cdx-settings-button--focused{-webkit-box-shadow:inset 0 0 0px 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px #07a1e314}.cdx-settings-button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.cdx-settings-button--active{color:#388ae5}.cdx-settings-button svg{width:auto;height:auto}@media (max-width: 650px){.cdx-settings-button svg{width:28px;height:28px}}@media (max-width: 650px){.cdx-settings-button{width:36px;height:36px;border-radius:8px}}@media (hover: hover){.cdx-settings-button:hover{background-color:#eff2f5}}.cdx-loader{position:relative;border:1px solid rgba(201,201,204,.48)}.cdx-loader:before{content:"";position:absolute;left:50%;top:50%;width:18px;height:18px;margin:-11px 0 0 -11px;border:2px solid rgba(201,201,204,.48);border-left-color:#388ae5;border-radius:50%;-webkit-animation:cdxRotation 1.2s infinite linear;animation:cdxRotation 1.2s infinite linear}@-webkit-keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cdx-button{padding:13px;border-radius:3px;border:1px solid rgba(201,201,204,.48);font-size:14.9px;background:#fff;-webkit-box-shadow:0 2px 2px 0 rgba(18,30,57,.04);box-shadow:0 2px 2px #121e390a;color:#707684;text-align:center;cursor:pointer}@media (hover: hover){.cdx-button:hover{background:#FBFCFE;-webkit-box-shadow:0 1px 3px 0 rgba(18,30,57,.08);box-shadow:0 1px 3px #121e3914}}.cdx-button svg{height:20px;margin-right:.2em;margin-top:-2px}.ce-stub{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:12px 18px;margin:10px 0;border-radius:10px;background:#eff2f5;border:1px solid #EFF0F1;color:#707684;font-size:14px}.ce-stub svg{width:20px;height:20px}.ce-stub__info{margin-left:14px}.ce-stub__title{font-weight:500;text-transform:capitalize}.codex-editor.codex-editor--rtl{direction:rtl}.codex-editor.codex-editor--rtl .cdx-list{padding-left:0;padding-right:40px}.codex-editor.codex-editor--rtl .ce-toolbar__plus{right:-26px;left:auto}.codex-editor.codex-editor--rtl .ce-toolbar__actions{right:auto;left:-26px}@media (max-width: 650px){.codex-editor.codex-editor--rtl .ce-toolbar__actions{margin-left:0;margin-right:auto;padding-right:0;padding-left:10px}}.codex-editor.codex-editor--rtl .ce-settings{left:5px;right:auto}.codex-editor.codex-editor--rtl .ce-settings:before{right:auto;left:25px}.codex-editor.codex-editor--rtl .ce-settings__button:not(:nth-child(3n+3)){margin-left:3px;margin-right:0}.codex-editor.codex-editor--rtl .ce-conversion-tool__icon{margin-right:0;margin-left:10px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown{border-right:0px solid transparent;border-left:1px solid rgba(201,201,204,.48);margin:0 -6px 0 6px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown .icon--toggler-down{margin-left:0;margin-right:4px}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__plus{left:0;right:5px}}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__actions{left:-5px}}.cdx-search-field{--icon-margin-right: 10px;background:#F8F8F8;border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:2px;display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto}.cdx-search-field__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:var(--icon-margin-right)}.cdx-search-field__icon svg{width:20px;height:20px;color:#707684}.cdx-search-field__input{font-size:14px;outline:none;font-weight:500;font-family:inherit;border:0;background:transparent;margin:0;padding:0;line-height:22px;min-width:calc(100% - 26px - var(--icon-margin-right))}.cdx-search-field__input::-webkit-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-moz-placeholder{color:#707684;font-weight:500}.cdx-search-field__input:-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::placeholder{color:#707684;font-weight:500}.ce-popover{--border-radius: 6px;--width: 200px;--max-height: 270px;--padding: 6px;--offset-from-target: 8px;--color-border: #EFF0F1;--color-shadow: rgba(13, 20, 33, .1);--color-background: white;--color-text-primary: black;--color-text-secondary: #707684;--color-border-icon: rgba(201, 201, 204, .48);--color-border-icon-disabled: #EFF0F1;--color-text-icon-active: #388AE5;--color-background-icon-active: rgba(56, 138, 229, .1);--color-background-item-focus: rgba(34, 186, 255, .08);--color-shadow-item-focus: rgba(7, 161, 227, .08);--color-background-item-hover: #F8F8F8;--color-background-item-confirm: #E24A4A;--color-background-item-confirm-hover: #CE4343;--popover-top: calc(100% + var(--offset-from-target));--popover-left: 0;--nested-popover-overlap: 4px;--icon-size: 20px;--item-padding: 3px;--item-height: calc(var(--icon-size) + 2 * var(--item-padding))}.ce-popover__container{min-width:var(--width);width:var(--width);max-height:var(--max-height);border-radius:var(--border-radius);overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:0px 3px 15px -3px var(--color-shadow);box-shadow:0 3px 15px -3px var(--color-shadow);position:absolute;left:var(--popover-left);top:var(--popover-top);background:var(--color-background);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;z-index:4;opacity:0;max-height:0;pointer-events:none;padding:0;border:none}.ce-popover--opened>.ce-popover__container{opacity:1;padding:var(--padding);max-height:var(--max-height);pointer-events:auto;-webkit-animation:panelShowing .1s ease;animation:panelShowing .1s ease;border:1px solid var(--color-border)}@media (max-width: 650px){.ce-popover--opened>.ce-popover__container{-webkit-animation:panelShowingMobile .25s ease;animation:panelShowingMobile .25s ease}}.ce-popover--open-top .ce-popover__container{--popover-top: calc(-1 * (var(--offset-from-target) + var(--popover-height)))}.ce-popover--open-left .ce-popover__container{--popover-left: calc(-1 * var(--width) + 100%)}.ce-popover__items{overflow-y:auto;-ms-scroll-chaining:none;overscroll-behavior:contain}@media (max-width: 650px){.ce-popover__overlay{position:fixed;top:0;bottom:0;left:0;right:0;background:#1D202B;z-index:3;opacity:.5;-webkit-transition:opacity .12s ease-in;transition:opacity .12s ease-in;will-change:opacity;visibility:visible}}.ce-popover__overlay--hidden{display:none}@media (max-width: 650px){.ce-popover .ce-popover__container{--offset: 5px;position:fixed;max-width:none;min-width:calc(100% - var(--offset) * 2);left:var(--offset);right:var(--offset);bottom:calc(var(--offset) + env(safe-area-inset-bottom));top:auto;border-radius:10px}}.ce-popover__search{margin-bottom:5px}.ce-popover__nothing-found-message{color:#707684;display:none;cursor:default;padding:3px;font-size:14px;line-height:20px;font-weight:500;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ce-popover__nothing-found-message--displayed{display:block}.ce-popover--nested .ce-popover__container{--popover-left: calc(var(--nesting-level) * (var(--width) - var(--nested-popover-overlap)));top:calc(var(--trigger-item-top) - var(--nested-popover-overlap));position:absolute}.ce-popover--open-top.ce-popover--nested .ce-popover__container{top:calc(var(--trigger-item-top) - var(--popover-height) + var(--item-height) + var(--offset-from-target) + var(--nested-popover-overlap))}.ce-popover--open-left .ce-popover--nested .ce-popover__container{--popover-left: calc(-1 * (var(--nesting-level) + 1) * var(--width) + 100%)}.ce-popover-item-separator{padding:4px 3px}.ce-popover-item-separator--hidden{display:none}.ce-popover-item-separator__line{height:1px;background:var(--color-border);width:100%}.ce-popover-item-html--hidden{display:none}.ce-popover-item{--border-radius: 6px;border-radius:var(--border-radius);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:var(--item-padding);color:var(--color-text-primary);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:none;background:transparent}@media (max-width: 650px){.ce-popover-item{padding:4px}}.ce-popover-item:not(:last-of-type){margin-bottom:1px}.ce-popover-item__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.ce-popover-item__icon svg{width:20px;height:20px}@media (max-width: 650px){.ce-popover-item__icon{width:36px;height:36px;border-radius:8px}.ce-popover-item__icon svg{width:28px;height:28px}}.ce-popover-item__icon--tool{margin-right:4px}.ce-popover-item__title{font-size:14px;line-height:20px;font-weight:500;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-right:auto}@media (max-width: 650px){.ce-popover-item__title{font-size:16px}}.ce-popover-item__secondary-title{color:var(--color-text-secondary);font-size:12px;white-space:nowrap;letter-spacing:-.1em;padding-right:5px;opacity:.6}@media (max-width: 650px){.ce-popover-item__secondary-title{display:none}}.ce-popover-item--active{background:var(--color-background-icon-active);color:var(--color-text-icon-active)}.ce-popover-item--disabled{color:var(--color-text-secondary);cursor:default;pointer-events:none}.ce-popover-item--focused:not(.ce-popover-item--no-focus){background:var(--color-background-item-focus)!important}.ce-popover-item--hidden{display:none}@media (hover: hover){.ce-popover-item:hover{cursor:pointer}.ce-popover-item:hover:not(.ce-popover-item--no-hover){background-color:var(--color-background-item-hover)}}.ce-popover-item--confirmation{background:var(--color-background-item-confirm)}.ce-popover-item--confirmation .ce-popover-item__title,.ce-popover-item--confirmation .ce-popover-item__icon{color:#fff}@media (hover: hover){.ce-popover-item--confirmation:not(.ce-popover-item--no-hover):hover{background:var(--color-background-item-confirm-hover)}}.ce-popover-item--confirmation:not(.ce-popover-item--no-focus).ce-popover-item--focused{background:var(--color-background-item-confirm-hover)!important}@-webkit-keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.wobble{-webkit-animation-name:wobble;animation-name:wobble;-webkit-animation-duration:.4s;animation-duration:.4s}@-webkit-keyframes wobble{0%{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-9%,0,0);transform:translate3d(-9%,0,0)}30%{-webkit-transform:translate3d(9%,0,0);transform:translate3d(9%,0,0)}45%{-webkit-transform:translate3d(-4%,0,0);transform:translate3d(-4%,0,0)}60%{-webkit-transform:translate3d(4%,0,0);transform:translate3d(4%,0,0)}75%{-webkit-transform:translate3d(-1%,0,0);transform:translate3d(-1%,0,0)}to{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}}@keyframes wobble{0%{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-9%,0,0);transform:translate3d(-9%,0,0)}30%{-webkit-transform:translate3d(9%,0,0);transform:translate3d(9%,0,0)}45%{-webkit-transform:translate3d(-4%,0,0);transform:translate3d(-4%,0,0)}60%{-webkit-transform:translate3d(4%,0,0);transform:translate3d(4%,0,0)}75%{-webkit-transform:translate3d(-1%,0,0);transform:translate3d(-1%,0,0)}to{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}}.ce-popover-header{margin-bottom:8px;margin-top:4px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-popover-header__text{font-size:18px;font-weight:600}.ce-popover-header__back-button{border:0;background:transparent;width:36px;height:36px;color:var(--color-text-primary)}.ce-popover-header__back-button svg{display:block;width:28px;height:28px}.ce-popover--inline{--height: 38px;--height-mobile: 46px;--container-padding: 4px;position:relative}.ce-popover--inline .ce-popover__custom-content{margin-bottom:0}.ce-popover--inline .ce-popover__items{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-popover--inline .ce-popover__container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:var(--container-padding);height:var(--height);top:0;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content;-webkit-animation:none;animation:none}@media (max-width: 650px){.ce-popover--inline .ce-popover__container{height:var(--height-mobile);position:absolute}}.ce-popover--inline .ce-popover-item-separator{padding:0 4px}.ce-popover--inline .ce-popover-item-separator__line{height:100%;width:1px}.ce-popover--inline .ce-popover-item{border-radius:4px;padding:4px}.ce-popover--inline .ce-popover-item__icon--tool{-webkit-box-shadow:none;box-shadow:none;background:transparent;margin-right:0}.ce-popover--inline .ce-popover-item__icon{width:auto;width:initial;height:auto;height:initial}.ce-popover--inline .ce-popover-item__icon svg{width:20px;height:20px}@media (max-width: 650px){.ce-popover--inline .ce-popover-item__icon svg{width:28px;height:28px}}.ce-popover--inline .ce-popover-item:not(:last-of-type){margin-bottom:0;margin-bottom:initial}.ce-popover--inline .ce-popover-item-html{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-popover--inline .ce-popover-item__icon--chevron-right{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.ce-popover--inline .ce-popover--nested-level-1 .ce-popover__container{--offset: 3px;left:0;top:calc(var(--height) + var(--offset))}@media (max-width: 650px){.ce-popover--inline .ce-popover--nested-level-1 .ce-popover__container{top:calc(var(--height-mobile) + var(--offset))}}.ce-popover--inline .ce-popover--nested .ce-popover__container{min-width:var(--width);width:var(--width);height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;padding:6px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.ce-popover--inline .ce-popover--nested .ce-popover__items{display:block;width:100%}.ce-popover--inline .ce-popover--nested .ce-popover-item{border-radius:6px;padding:3px}@media (max-width: 650px){.ce-popover--inline .ce-popover--nested .ce-popover-item{padding:4px}}.ce-popover--inline .ce-popover--nested .ce-popover-item__icon--tool{margin-right:4px}.ce-popover--inline .ce-popover--nested .ce-popover-item__icon{width:26px;height:26px}.ce-popover--inline .ce-popover--nested .ce-popover-item-separator{padding:4px 3px}.ce-popover--inline .ce-popover--nested .ce-popover-item-separator__line{width:100%;height:1px}.codex-editor [data-placeholder]:empty:before,.codex-editor [data-placeholder][data-empty=true]:before{pointer-events:none;color:#707684;cursor:text;content:attr(data-placeholder)}.codex-editor [data-placeholder-active]:empty:before,.codex-editor [data-placeholder-active][data-empty=true]:before{pointer-events:none;color:#707684;cursor:text}.codex-editor [data-placeholder-active]:empty:focus:before,.codex-editor [data-placeholder-active][data-empty=true]:focus:before{content:attr(data-placeholder-active)}
`;
class Wm extends lt {
    constructor() {
        super(...arguments),
            (this.isMobile = !1),
            (this.contentRectCache = void 0),
            (this.resizeDebouncer = ya(() => {
                this.windowResize();
            }, 200));
    }
    get CSS() {
        return {
            editorWrapper: 'codex-editor',
            editorWrapperNarrow: 'codex-editor--narrow',
            editorZone: 'codex-editor__redactor',
            editorZoneHidden: 'codex-editor__redactor--hidden',
            editorEmpty: 'codex-editor--empty',
            editorRtlFix: 'codex-editor--rtl',
        };
    }
    get contentRect() {
        if (this.contentRectCache) return this.contentRectCache;
        const e = this.nodes.wrapper.querySelector(`.${Qt.CSS.content}`);
        return e ?
                ((this.contentRectCache = e.getBoundingClientRect()),
                this.contentRectCache)
            :   { width: 650, left: 0, right: 0 };
    }
    async prepare() {
        this.setIsMobile(), this.make(), this.loadStyles();
    }
    toggleReadOnly(e) {
        e ?
            this.disableModuleBindings()
        :   window.requestIdleCallback(
                () => {
                    this.enableModuleBindings();
                },
                { timeout: 2e3 },
            );
    }
    checkEmptiness() {
        const { BlockManager: e } = this.Editor;
        this.nodes.wrapper.classList.toggle(
            this.CSS.editorEmpty,
            e.isEditorEmpty,
        );
    }
    get someToolbarOpened() {
        const { Toolbar: e, BlockSettings: t, InlineToolbar: n } = this.Editor;
        return !!(t.opened || n.opened || e.toolbox.opened);
    }
    get someFlipperButtonFocused() {
        return this.Editor.Toolbar.toolbox.hasFocus() ?
                !0
            :   Object.entries(this.Editor)
                    .filter(([e, t]) => t.flipper instanceof hi)
                    .some(([e, t]) => t.flipper.hasFocus());
    }
    destroy() {
        this.nodes.holder.innerHTML = '';
    }
    closeAllToolbars() {
        const { Toolbar: e, BlockSettings: t, InlineToolbar: n } = this.Editor;
        t.close(), n.close(), e.toolbox.close();
    }
    setIsMobile() {
        const e = window.innerWidth < mu;
        e !== this.isMobile &&
            this.eventsDispatcher.emit(Ls, { isEnabled: this.isMobile }),
            (this.isMobile = e);
    }
    make() {
        (this.nodes.holder = oe.getHolder(this.config.holder)),
            (this.nodes.wrapper = oe.make('div', [
                this.CSS.editorWrapper,
                ...(this.isRtl ? [this.CSS.editorRtlFix] : []),
            ])),
            (this.nodes.redactor = oe.make('div', this.CSS.editorZone)),
            this.nodes.holder.offsetWidth < this.contentRect.width &&
                this.nodes.wrapper.classList.add(this.CSS.editorWrapperNarrow),
            (this.nodes.redactor.style.paddingBottom =
                this.config.minHeight + 'px'),
            this.nodes.wrapper.appendChild(this.nodes.redactor),
            this.nodes.holder.appendChild(this.nodes.wrapper);
    }
    loadStyles() {
        const e = 'editor-js-styles';
        if (oe.get(e)) return;
        const t = oe.make('style', null, { id: e, textContent: $m.toString() });
        this.config.style &&
            !jn(this.config.style) &&
            this.config.style.nonce &&
            t.setAttribute('nonce', this.config.style.nonce),
            oe.prepend(document.head, t);
    }
    enableModuleBindings() {
        this.readOnlyMutableListeners.on(
            this.nodes.redactor,
            'click',
            (t) => {
                this.redactorClicked(t);
            },
            !1,
        ),
            this.readOnlyMutableListeners.on(
                this.nodes.redactor,
                'mousedown',
                (t) => {
                    this.documentTouched(t);
                },
                { capture: !0, passive: !0 },
            ),
            this.readOnlyMutableListeners.on(
                this.nodes.redactor,
                'touchstart',
                (t) => {
                    this.documentTouched(t);
                },
                { capture: !0, passive: !0 },
            ),
            this.readOnlyMutableListeners.on(
                document,
                'keydown',
                (t) => {
                    this.documentKeydown(t);
                },
                !0,
            ),
            this.readOnlyMutableListeners.on(
                document,
                'mousedown',
                (t) => {
                    this.documentClicked(t);
                },
                !0,
            );
        const e = ya(() => {
            this.selectionChanged();
        }, Tm);
        this.readOnlyMutableListeners.on(document, 'selectionchange', e, !0),
            this.readOnlyMutableListeners.on(
                window,
                'resize',
                () => {
                    this.resizeDebouncer();
                },
                { passive: !0 },
            ),
            this.watchBlockHoveredEvents(),
            this.enableInputsEmptyMark();
    }
    watchBlockHoveredEvents() {
        let e;
        this.readOnlyMutableListeners.on(
            this.nodes.redactor,
            'mousemove',
            tl((t) => {
                const n = t.target.closest('.ce-block');
                this.Editor.BlockSelection.anyBlockSelected ||
                    (n &&
                        e !== n &&
                        ((e = n),
                        this.eventsDispatcher.emit($u, {
                            block: this.Editor.BlockManager.getBlockByChildNode(
                                n,
                            ),
                        })));
            }, 20),
            { passive: !0 },
        );
    }
    disableModuleBindings() {
        this.readOnlyMutableListeners.clearAll();
    }
    windowResize() {
        (this.contentRectCache = null), this.setIsMobile();
    }
    documentKeydown(e) {
        switch (e.keyCode) {
            case Ve.ENTER:
                this.enterPressed(e);
                break;
            case Ve.BACKSPACE:
            case Ve.DELETE:
                this.backspacePressed(e);
                break;
            case Ve.ESC:
                this.escapePressed(e);
                break;
            default:
                this.defaultBehaviour(e);
                break;
        }
    }
    defaultBehaviour(e) {
        const { currentBlock: t } = this.Editor.BlockManager,
            n = e.target.closest(`.${this.CSS.editorWrapper}`),
            i = e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;
        if (t !== void 0 && n === null) {
            this.Editor.BlockEvents.keydown(e);
            return;
        }
        n ||
            (t && i) ||
            (this.Editor.BlockManager.unsetCurrentBlock(),
            this.Editor.Toolbar.close());
    }
    backspacePressed(e) {
        const { BlockManager: t, BlockSelection: n, Caret: i } = this.Editor;
        if (n.anyBlockSelected && !We.isSelectionExists) {
            const s = t.removeSelectedBlocks(),
                r = t.insertDefaultBlockAtIndex(s, !0);
            i.setToBlock(r, i.positions.START),
                n.clearSelection(e),
                e.preventDefault(),
                e.stopPropagation(),
                e.stopImmediatePropagation();
        }
    }
    escapePressed(e) {
        this.Editor.BlockSelection.clearSelection(e),
            this.Editor.Toolbar.toolbox.opened ?
                (this.Editor.Toolbar.toolbox.close(),
                this.Editor.Caret.setToBlock(
                    this.Editor.BlockManager.currentBlock,
                    this.Editor.Caret.positions.END,
                ))
            : this.Editor.BlockSettings.opened ?
                this.Editor.BlockSettings.close()
            : this.Editor.InlineToolbar.opened ?
                this.Editor.InlineToolbar.close()
            :   this.Editor.Toolbar.close();
    }
    enterPressed(e) {
        const { BlockManager: t, BlockSelection: n } = this.Editor;
        if (this.someToolbarOpened) return;
        const i = t.currentBlockIndex >= 0;
        if (n.anyBlockSelected && !We.isSelectionExists) {
            n.clearSelection(e),
                e.preventDefault(),
                e.stopImmediatePropagation(),
                e.stopPropagation();
            return;
        }
        if (!this.someToolbarOpened && i && e.target.tagName === 'BODY') {
            const s = this.Editor.BlockManager.insert();
            e.preventDefault(),
                this.Editor.Caret.setToBlock(s),
                this.Editor.Toolbar.moveAndOpen(s);
        }
        this.Editor.BlockSelection.clearSelection(e);
    }
    documentClicked(e) {
        var t, n;
        if (!e.isTrusted) return;
        const i = e.target;
        this.nodes.holder.contains(i) ||
            We.isAtEditor ||
            (this.Editor.BlockManager.unsetCurrentBlock(),
            this.Editor.Toolbar.close());
        const s =
                (t = this.Editor.BlockSettings.nodes.wrapper) == null ?
                    void 0
                :   t.contains(i),
            r =
                (n = this.Editor.Toolbar.nodes.settingsToggler) == null ?
                    void 0
                :   n.contains(i),
            l = s || r;
        if (this.Editor.BlockSettings.opened && !l) {
            this.Editor.BlockSettings.close();
            const a = this.Editor.BlockManager.getBlockByChildNode(i);
            this.Editor.Toolbar.moveAndOpen(a);
        }
        this.Editor.BlockSelection.clearSelection(e);
    }
    documentTouched(e) {
        let t = e.target;
        if (t === this.nodes.redactor) {
            const n =
                    e instanceof MouseEvent ? e.clientX : e.touches[0].clientX,
                i = e instanceof MouseEvent ? e.clientY : e.touches[0].clientY;
            t = document.elementFromPoint(n, i);
        }
        try {
            this.Editor.BlockManager.setCurrentBlockByChildNode(t);
        } catch {
            this.Editor.RectangleSelection.isRectActivated() ||
                this.Editor.Caret.setToTheLastBlock();
        }
        this.Editor.Toolbar.moveAndOpen();
    }
    redactorClicked(e) {
        if (!We.isCollapsed) return;
        const t = e.target,
            n = e.metaKey || e.ctrlKey;
        if (oe.isAnchor(t) && n) {
            e.stopImmediatePropagation(), e.stopPropagation();
            const i = t.getAttribute('href'),
                s = Kf(i);
            Zf(s);
            return;
        }
        this.processBottomZoneClick(e);
    }
    processBottomZoneClick(e) {
        const t = this.Editor.BlockManager.getBlockByIndex(-1),
            n = oe.offset(t.holder).bottom,
            i = e.pageY,
            { BlockSelection: s } = this.Editor;
        if (
            e.target instanceof Element &&
            e.target.isEqualNode(this.nodes.redactor) &&
            !s.anyBlockSelected &&
            n < i
        ) {
            e.stopImmediatePropagation(), e.stopPropagation();
            const { BlockManager: r, Caret: l, Toolbar: a } = this.Editor;
            (!r.lastBlock.tool.isDefault || !r.lastBlock.isEmpty) &&
                r.insertAtEnd(),
                l.setToTheLastBlock(),
                a.moveAndOpen(r.lastBlock);
        }
    }
    selectionChanged() {
        const { CrossBlockSelection: e, BlockSelection: t } = this.Editor,
            n = We.anchorElement;
        if (
            (e.isCrossBlockSelectionStarted &&
                t.anyBlockSelected &&
                We.get().removeAllRanges(),
            !n)
        ) {
            We.range || this.Editor.InlineToolbar.close();
            return;
        }
        (n.closest(`.${Qt.CSS.content}`) === null &&
            (this.Editor.InlineToolbar.containsNode(n) ||
                this.Editor.InlineToolbar.close(),
            n.dataset.inlineToolbar !== 'true')) ||
            (this.Editor.BlockManager.currentBlock ||
                this.Editor.BlockManager.setCurrentBlockByChildNode(n),
            this.Editor.InlineToolbar.tryToShow(!0));
    }
    enableInputsEmptyMark() {
        function e(t) {
            const n = t.target;
            bu(n);
        }
        this.readOnlyMutableListeners.on(this.nodes.wrapper, 'input', e),
            this.readOnlyMutableListeners.on(this.nodes.wrapper, 'focusin', e),
            this.readOnlyMutableListeners.on(this.nodes.wrapper, 'focusout', e);
    }
}
const Gm = {
    BlocksAPI: ag,
    CaretAPI: hg,
    EventsAPI: dg,
    I18nAPI: Ll,
    API: ug,
    InlineToolbarAPI: pg,
    ListenersAPI: fg,
    NotifierAPI: wg,
    ReadOnlyAPI: yg,
    SanitizerAPI: Tg,
    SaverAPI: Sg,
    SelectionAPI: Bg,
    ToolsAPI: Ig,
    StylesAPI: Lg,
    ToolbarAPI: Ag,
    TooltipAPI: Rg,
    UiAPI: Dg,
    BlockSettings: cm,
    Toolbar: bm,
    InlineToolbar: wm,
    BlockEvents: ym,
    BlockManager: _m,
    BlockSelection: xm,
    Caret: fr,
    CrossBlockSelection: Cm,
    DragNDrop: Em,
    ModificationsObserver: Bm,
    Paste: Im,
    ReadOnly: Lm,
    RectangleSelection: Ss,
    Renderer: Am,
    Saver: Om,
    Tools: tp,
    UI: Wm,
};
class qm {
    constructor(e) {
        (this.moduleInstances = {}), (this.eventsDispatcher = new Rs());
        let t, n;
        (this.isReady = new Promise((i, s) => {
            (t = i), (n = s);
        })),
            Promise.resolve()
                .then(async () => {
                    (this.configuration = e),
                        this.validate(),
                        this.init(),
                        await this.start(),
                        await this.render();
                    const {
                        BlockManager: i,
                        Caret: s,
                        UI: r,
                        ModificationsObserver: l,
                    } = this.moduleInstances;
                    r.checkEmptiness(),
                        l.enable(),
                        this.configuration.autofocus &&
                            s.setToBlock(i.blocks[0], s.positions.START),
                        t();
                })
                .catch((i) => {
                    pt(`Editor.js is not ready because of ${i}`, 'error'), n(i);
                });
    }
    set configuration(e) {
        var t, n;
        tn(e) ? (this.config = { ...e }) : (this.config = { holder: e }),
            ol(!!this.config.holderId, 'config.holderId', 'config.holder'),
            this.config.holderId &&
                !this.config.holder &&
                ((this.config.holder = this.config.holderId),
                (this.config.holderId = null)),
            this.config.holder == null && (this.config.holder = 'editorjs'),
            this.config.logLevel || (this.config.logLevel = pu.VERBOSE),
            $f(this.config.logLevel),
            ol(
                !!this.config.initialBlock,
                'config.initialBlock',
                'config.defaultBlock',
            ),
            (this.config.defaultBlock =
                this.config.defaultBlock ||
                this.config.initialBlock ||
                'paragraph'),
            (this.config.minHeight =
                this.config.minHeight !== void 0 ? this.config.minHeight : 300);
        const i = { type: this.config.defaultBlock, data: {} };
        (this.config.placeholder = this.config.placeholder || !1),
            (this.config.sanitizer = this.config.sanitizer || {
                p: !0,
                b: !0,
                a: !0,
            }),
            (this.config.hideToolbar =
                this.config.hideToolbar ? this.config.hideToolbar : !1),
            (this.config.tools = this.config.tools || {}),
            (this.config.i18n = this.config.i18n || {}),
            (this.config.data = this.config.data || { blocks: [] }),
            (this.config.onReady = this.config.onReady || (() => {})),
            (this.config.onChange = this.config.onChange || (() => {})),
            (this.config.inlineToolbar =
                this.config.inlineToolbar !== void 0 ?
                    this.config.inlineToolbar
                :   !0),
            (jn(this.config.data) ||
                !this.config.data.blocks ||
                this.config.data.blocks.length === 0) &&
                (this.config.data = { blocks: [i] }),
            (this.config.readOnly = this.config.readOnly || !1),
            (t = this.config.i18n) != null &&
                t.messages &&
                dn.setDictionary(this.config.i18n.messages),
            (this.config.i18n.direction =
                ((n = this.config.i18n) == null ? void 0 : n.direction) ||
                'ltr');
    }
    get configuration() {
        return this.config;
    }
    validate() {
        const { holderId: e, holder: t } = this.config;
        if (e && t)
            throw Error(
                "«holderId» and «holder» param can't assign at the same time.",
            );
        if (xo(t) && !oe.get(t))
            throw Error(
                `element with ID «${t}» is missing. Pass correct holder's ID.`,
            );
        if (t && tn(t) && !oe.isElement(t))
            throw Error('«holder» value must be an Element node');
    }
    init() {
        this.constructModules(), this.configureModules();
    }
    async start() {
        await [
            'Tools',
            'UI',
            'BlockManager',
            'Paste',
            'BlockSelection',
            'RectangleSelection',
            'CrossBlockSelection',
            'ReadOnly',
        ].reduce(
            (e, t) =>
                e.then(async () => {
                    try {
                        await this.moduleInstances[t].prepare();
                    } catch (n) {
                        if (n instanceof vu) throw new Error(n.message);
                        pt(`Module ${t} was skipped because of %o`, 'warn', n);
                    }
                }),
            Promise.resolve(),
        );
    }
    render() {
        return this.moduleInstances.Renderer.render(this.config.data.blocks);
    }
    constructModules() {
        Object.entries(Gm).forEach(([e, t]) => {
            try {
                this.moduleInstances[e] = new t({
                    config: this.configuration,
                    eventsDispatcher: this.eventsDispatcher,
                });
            } catch (n) {
                pt(
                    '[constructModules]',
                    `Module ${e} skipped because`,
                    'error',
                    n,
                );
            }
        });
    }
    configureModules() {
        for (const e in this.moduleInstances)
            Object.prototype.hasOwnProperty.call(this.moduleInstances, e) &&
                (this.moduleInstances[e].state = this.getModulesDiff(e));
    }
    getModulesDiff(e) {
        const t = {};
        for (const n in this.moduleInstances)
            n !== e && (t[n] = this.moduleInstances[n]);
        return t;
    }
}
/**
 * Editor.js
 *
 * @license Apache-2.0
 * @see Editor.js <https://editorjs.io>
 * @author CodeX Team <https://codex.so>
 */ class gr {
    static get version() {
        return '2.30.5';
    }
    constructor(e) {
        let t = () => {};
        tn(e) && Mt(e.onReady) && (t = e.onReady);
        const n = new qm(e);
        this.isReady = n.isReady.then(() => {
            this.exportAPI(n), t();
        });
    }
    exportAPI(e) {
        const t = ['configuration'],
            n = () => {
                Object.values(e.moduleInstances).forEach((i) => {
                    Mt(i.destroy) && i.destroy(), i.listeners.removeAll();
                }),
                    Ng(),
                    (e = null);
                for (const i in this)
                    Object.prototype.hasOwnProperty.call(this, i) &&
                        delete this[i];
                Object.setPrototypeOf(this, null);
            };
        t.forEach((i) => {
            this[i] = e[i];
        }),
            (this.destroy = n),
            Object.setPrototypeOf(this, e.moduleInstances.API.methods),
            delete this.exportAPI,
            Object.entries({
                blocks: { clear: 'clear', render: 'render' },
                caret: { focus: 'focus' },
                events: { on: 'on', off: 'off', emit: 'emit' },
                saver: { save: 'save' },
            }).forEach(([i, s]) => {
                Object.entries(s).forEach(([r, l]) => {
                    this[l] = e.moduleInstances.API.methods[i][r];
                });
            });
    }
}
const np = {
        Version: '2.1.15',
        FileVersion: '0',
        Name: 'Unnamed Language',
        CaseSensitive: !1,
        IgnoreDiacritics: !0,
        ShowEtymology: !1,
        ShowInflection: !1,
        Inflections: [],
        UseLects: !1,
        HeaderTags: '',
        Alphabet: 'a b c d e f g h i j k l m n o p q r s t u v w x y z',
        Lexicon: {},
        Etymologies: {},
        Relatives: {},
        Pronunciations: {
            General: `Use this field to write pronunciation rules to automatically transcribe your orthography in IPA. For example,
th > θ
This rule will automatically transcribe any ⟨th⟩ in your orthography as [θ].
Rules can be much more complex than this. You can read the section on pronunciation rules in the Help tab for more information.

The most common mistake has to do with the fact that rules are applied in order from top to bottom. For example, if you have the following rules,
e > ɛ
ae > æ
then the second rule will never be applied, because the first rule will always change ⟨e⟩ to [ɛ] before the second rule can be applied.
The solution in almost all cases like this is to change the order of the rules so that the ones with the longest patterns are applied first.
ae > æ
e > ɛ
Now both rules will be applied correctly. You can test this by removing the first set of rules from this demo.`,
        },
        Orthographies: [
            {
                name: 'Romanization',
                font: 'Gentium',
                root: 'rom',
                lect: 'General',
                rules: 'Your romanized orthography is the base form of input.',
                display: !0,
            },
        ],
        ShowOrthography: !1,
        ShowPronunciation: !0,
        Phonotactics: {
            General: {
                Onsets: '',
                Medials: '',
                Codas: '',
                Vowels: '',
                Illegals: '',
            },
        },
        UseAdvancedPhonotactics: !1,
        AdvancedPhonotactics: {
            Categories: {},
            Syllables: [],
            Constructs: [{ enabled: !0, structures: '' }],
            Illegals: [],
        },
        Lects: ['General'],
        Phrasebook: {},
        Docs: { blocks: [] },
        Diagnostics: [],
        FileTheme: 'default',
        OrderByDate: !1,
        SaveLocation: '',
        UploadToDatabase: !1,
    },
    Wl = sn(np),
    q = sn(structuredClone(np)),
    mr = sn(0),
    si = sn(''),
    yn = sn(
        (() => {
            const o = {};
            for (const e of _t(q).Lects) o[e] = '';
            return o;
        })(),
    ),
    xs = sn(''),
    ei = sn(
        (() => {
            const o = {};
            for (const e of _t(q).Lects) o[e] = '';
            return o;
        })(),
    ),
    ms = sn(''),
    ri = sn(''),
    Tr = sn(new gr()),
    Ci = sn('styles/dark.css'),
    Ti = sn(!0),
    Os = sn(0),
    er = sn(!1),
    yo = sn(''),
    Si = sn(''),
    { ipcRenderer: Bi } = require('electron'),
    bs = require('fs'),
    Ba = require('path');
async function Vm(o) {
    const e = await Bi.invoke('getUserDataPath');
    o(e);
}
function to(o, e) {
    _t(q).Diagnostics.push({
        Time: Date(),
        Version: _t(q).Version,
        OS: process.platform,
        Action: o,
        Error: e.stack,
    }),
        Fn.error(e.stack);
}
function Pi(o) {
    _t(q).Diagnostics.push({
        Time: Date(),
        Version: _t(q).Version,
        OS: process.platform,
        Action: o,
    });
}
function Ws(o, e) {
    Vm((t) => {
        const n = t + Ba.sep + 'Diagnostics' + Ba.sep;
        bs.existsSync(n) || bs.mkdirSync(n);
        const i = new Date().toString(),
            s = n + 'logs',
            r =
                'Report: ' +
                e +
                `
Time: ` +
                i +
                `
Version: ` +
                Bi.invoke('getVersion') +
                `
File: (v` +
                _t(q).Version +
                ') ' +
                _t(q).Name +
                `
` +
                o +
                `
`;
        bs.existsSync(s) ?
            bs.appendFile(s, r, (l) => {
                l && Fn.error(String(l), !1);
            })
        :   bs.writeFile(s, r, (l) => {
                l && Fn.error(String(l), !1);
            });
    });
}
const Fn = {
        log: (o, e = !0) => {
            e && Ws(o, 'info');
            const t =
                '\x1B[22m\x1B[4mLexc Debug\x1B[24m:\x1B[22m \x1B[32m' +
                o +
                '\x1B[39m';
            console.log(t), Bi.invoke('debug', t);
        },
        logObj: (o, e = '', t = !0) => {
            t &&
                Ws(
                    'Object: ' +
                        e +
                        `
` +
                        JSON.stringify(o, null, 2),
                    'info',
                );
            const n = JSON.stringify(o, null, 2).replace(
                    /(.*):/g,
                    '\x1B[32m$1\x1B[39m:',
                ),
                i =
                    '\x1B[22m\x1B[4mLexc Debug\x1B[24m\x1B[22m \x1B[32m' +
                    e +
                    `:\x1B[39m
` +
                    n;
            Bi.invoke('debug', i), console.log(i);
        },
        warn: (o, e = !0) => {
            e && Ws(o, 'warning');
            const t =
                '\x1B[22m\x1B[4mLexc Debug\x1B[24m\x1B[22m \x1B[33m' +
                o +
                '\x1B[39m';
            Bi.invoke('debug', t), console.log(t);
        },
        error: (o, e = !0) => {
            e && Ws(o, 'error');
            const t =
                '\x1B[22m\x1B[4mLexc Debug\x1B[24m\x1B[22m \x1B[31m' +
                o +
                '\x1B[39m';
            Bi.invoke('debug', t), console.log(t);
        },
        logAndReturn: (o, e = '', t = !1) => (Fn.logObj(o, e, t), o),
    },
    li = () => _t(q);
function Ms(o) {
    let e = li().HeaderTags.toLowerCase().trim().split(/\s+/);
    e[0] || (e = []);
    let t = li().Alphabet;
    const n = li().IgnoreDiacritics,
        i = li().CaseSensitive,
        s = structuredClone(o),
        r = [];
    for (const u of e) {
        r.push([]);
        for (const p in s)
            (() => {
                const b = [];
                return (
                    s[p].Senses.forEach((m) => {
                        b.push(...m.tags);
                    }),
                    b
                );
            })().includes(u) && r[r.length - 1].push(p);
        for (const p of r[r.length - 1]) delete s[p];
    }
    const l = [];
    for (const u in s) l.push(u);
    r.push(l), (t = i ? t.trim() : t.trim().toLowerCase());
    const a = t.split(/\s+/),
        c = Array.from(new Set(a)).sort((u, p) => p.length - u.length),
        h = [];
    for (const u of r) {
        const p = {},
            b = [];
        for (const k of u) {
            let y = i ? k : k.toLowerCase();
            y = n ? y.normalize('NFD').replace(/\p{Diacritic}/gu, '') : y;
            for (const E of c)
                y = y.replace(
                    new RegExp(
                        `${E.replace(/[-[\]{}()*+?.,\\/^$|#\s]/g, '\\$&')}`,
                        'g',
                    ),
                    `${a.indexOf(E)}.`,
                );
            const w = y.split('.');
            for (let E = 0; E < w.length; E++) w[E] = +w[E] || 0;
            (p[k] = w), b.push(w);
        }
        b.sort((k, y) => {
            for (let w = 0; w < k.length; w++) {
                const E = k[w],
                    _ = y[w];
                if (E !== _) return E - _;
            }
            return 0;
        });
        const m = [];
        for (const k in p) m.push([k, b.indexOf(p[k])]);
        m.sort((k, y) => k[1] - y[1]);
        for (let k = 0; k < m.length; k++) h.push(m[k][0]);
    }
    return h;
}
function Ym(o) {
    const e = li()
        .Alphabet.trim()
        .split(/\s+/)
        .sort((t, n) => n.length - t.length);
    return (
        (o = li().CaseSensitive ? o : o.toLowerCase()),
        (o =
            li().IgnoreDiacritics ?
                o.normalize('NFD').replace(/\p{Diacritic}/gu, '')
            :   o),
        e.forEach((t) => {
            o = o.replaceAll(t, '');
        }),
        !o.replaceAll(/\s+/g, '')
    );
}
const Km = require('vex-js');
function Xm(o, e, t) {
    const i = _t(q).CaseSensitive ? 'g' : 'gi';
    let [s, r, l] = o.split('/');
    e = ' ' + e + ' ';
    let a = e;
    const c = /\{(.+?)\}/g,
        h = /\^|#/g,
        u = /\{!(.+(?:\s+.+)*)\}/g,
        p = /\s*,\s*/g,
        b = /\s+/g,
        m = /[∅⦰]/g,
        k = [
            '∆',
            '∇',
            '⊂',
            '⊃',
            '⊆',
            '⊇',
            '⊄',
            '⊅',
            '⊈',
            '⊉',
            '⊊',
            '⊋',
            '⊍',
            '⊎',
            '⊏',
            '⊐',
            '⊑',
            '⊒',
            '⊓',
            '⊔',
            '⊕',
            '⊖',
            '⊗',
            '⊘',
            '⊙',
            '⊚',
            '⊛',
            '⊜',
            '⊝',
            '⊞',
            '⊟',
            '⊠',
            '⊡',
            '⊢',
            '⊣',
            '⊤',
            '⊥',
            '⊦',
            '⊧',
            '⊨',
            '⊩',
            '⊪',
            '⊫',
            '⊬',
            '⊭',
            '⊮',
            '⊯',
            '⊰',
            '⊱',
            '⊲',
            '⊳',
            '⊴',
            '⊵',
            '⊶',
            '⊷',
            '⊸',
            '⊹',
            '⊺',
            '⊻',
            '⊼',
            '⊽',
            '⊾',
            '⊿',
            '⋀',
            '⋁',
            '⋂',
            '⋃',
            '⋄',
            '⋇',
            '⋈',
            '⋉',
            '⋊',
            '⋋',
            '⋌',
            '⋍',
            '⋎',
            '⋏',
            '⋐',
            '⋑',
            '⋒',
            '⋓',
            '⋔',
            '⋕',
            '⋖',
            '⋗',
            '⋘',
            '⋙',
            '⋚',
            '⋛',
            '⋜',
            '⋝',
            '⋞',
            '⋟',
            '⋠',
            '⋡',
            '⋢',
            '⋣',
            '⋤',
            '⋥',
            '⋦',
            '⋧',
            '⋨',
            '⋩',
            '⋪',
            '⋫',
            '⋬',
            '⋭',
            '⋮',
            '⋯',
            '⋰',
            '⋱',
            '⋲',
            '⋳',
            '⋴',
            '⋵',
            '⋶',
            '⋷',
            '⋸',
            '⋹',
            '⋺',
            '⋻',
            '⋼',
            '⋽',
            '⋾',
            '⌁',
            '⌂',
            '⌃',
            '⌄',
            '⌅',
            '⌆',
            '⌇',
            '⌈',
            '⌉',
            '⌊',
            '⌋',
            '⌑',
            '⌒',
            '⌓',
            '⌔',
            '⌕',
            '⌖',
            '⌗',
            '⌘',
            '⌙',
        ];
    let y = 0;
    s.match(c)?.forEach((H) => {
        (t[k[y]] = H.replace(c, '$1').split(p)), (s = s.replace(H, k[y])), y++;
    }),
        r.match(c)?.forEach((H) => {
            (t[k[y]] = H.replace(c, '$1').split(p)),
                (r = r.replace(H, k[y])),
                y++;
        }),
        l.match(c)?.forEach((H) => {
            (t[k[y]] = H.replace(c, '$1').split(p)),
                (l = l.replace(H, k[y])),
                y++;
        }),
        (s = s
            .replaceAll(h, '\\s')
            .replaceAll(u, '(?:(?!$1).)')
            .replaceAll(b, '')),
        (r = r.replaceAll(b, '')),
        (l = l
            .replaceAll(h, '\\s')
            .replaceAll(u, '(?:(?!$1).)')
            .replaceAll(b, ''));
    let w = '(' + l.replace('_', `)${s}(`) + ')';
    Object.entries(t).forEach(([H, T]) => {
        w = w.replaceAll(H, `(?:${T.join('|')})`);
    });
    const E = s.split('').filter((H) => H in t),
        _ = r.split('').filter((H) => H in t),
        B = l.split('').filter((H) => H in t);
    function O(H) {
        let T = l.replaceAll('\\b', ''),
            S = [];
        B.length > 0 &&
            (B.forEach((W) => {
                const G = H.match(new RegExp(`(?:${t[W].join('|')})`, i));
                S.push([W, G]);
            }),
            (S = [...new Set(S)].sort((W, G) => G.length - W.length))),
            S.forEach(([W, G]) => {
                G?.forEach((L) => {
                    T = T.replace(W, L);
                });
            }),
            (T = T.replaceAll('\\s', ' '));
        const A = T.match(/\(\?:(.*?)\)\?/g) || [];
        for (const W of A) {
            const G = W.replace(/\(\?:(.*?)\)\?/, '$1'),
                L = T.replace(W, G);
            let D = '(' + L.replace('_', `)${s}(`) + ')';
            Object.entries(t).forEach(([X, te]) => {
                D = D.replaceAll(X, `(?:${te.join('|')})`);
            }),
                e.match(new RegExp(D, i)) ? (T = L) : (T = T.replace(W, ''));
        }
        for (const W of T.match(/(.|\s)\?/g) ?? []) {
            const G = W.replace(/(.|\s)\?/g, '$1'),
                L = T.replace(W, G);
            let D = '(' + L.replace('_', `)${s}(`) + ')';
            Object.entries(t).forEach(([X, te]) => {
                D = D.replaceAll(X, `(?:${te.join('|')})`);
            }),
                e.match(new RegExp(D, i)) ? (T = L) : (T = T.replace(W, ''));
        }
        const $ = T.replaceAll('?', '').indexOf('_'),
            K =
                E[0] ?
                    l === '_' ?
                        H.length
                    :   (() => {
                            let W = 0;
                            return (
                                Object.entries(t)
                                    .filter(([G]) => E.includes(G))
                                    .forEach(([, G]) => {
                                        const L = G.find((D) => H.includes(D));
                                        W += L ? L.length : 0;
                                    }),
                                W
                            );
                        })()
                :   s.length;
        return (H = H.slice($, $ + K)), H;
    }
    const P = e.match(new RegExp(w, i));
    if (
        (P && r.includes('_') ?
            P.forEach((H) => {
                const T = O(H);
                a = a.replace(T, r.replaceAll('_', T));
            })
        :   (a = a.replaceAll(new RegExp(w, i), `$1${r}$2`)),
        _[0] && E[0])
    ) {
        let H = [];
        P &&
            ((H = P.map((T) => {
                const S = O(T),
                    A = [
                        S,
                        _[
                            E.indexOf(
                                Object.keys(t).find(($) =>
                                    t[$].some((K) => K === S && E.includes($)),
                                ) ?? '',
                            )
                        ],
                    ];
                return [
                    A[0],
                    A[1],
                    t[A[1]][t[E[_.indexOf(A[1])]].indexOf(A[0])] ?
                        t[A[1]][t[E[_.indexOf(A[1])]].indexOf(A[0])]
                    :   A[0],
                ];
            })),
            P.forEach((T, S) => {
                a = a.replace(
                    T.replace(H[S][0], H[S][1]),
                    T.replace(H[S][0], H[S][2]),
                );
            }));
    }
    return a.replaceAll(m, '').replaceAll('␠', ' ').trim();
}
let Hr = !1;
function Hi(o, e, t) {
    let n = e;
    return (
        o.forEach((i) => {
            try {
                n = Xm(i, n, t);
            } catch (s) {
                const r = s;
                to(`Attempted to apply rule '${i}' to '${e}'`, r),
                    Hr ||
                        ((Hr = !0),
                        Km.dialog.alert({
                            message: `An error occurred while trying to apply rule '${i}' to '${e}'. The rule may be invalid. If you think this is a bug, please contact the developer.`,
                            callback: () => {
                                Hr = !1;
                            },
                        }));
            }
        }),
        n
    );
}
function di(o) {
    return {
        rules: o
            .split(/\n|;/)
            .map((t) => t.trim())
            .filter((t) => t.match(/^.*(?:\/|>).*/))
            .map((t) =>
                t.match(/\/.*_.*$/) ? t
                : t.match(/\/\s*$/) ? t + '_'
                : t + '/_',
            )
            .map((t) =>
                t
                    .split(/(?:\/|>)/)
                    .map((n) => n.trim())
                    .join('/'),
            )
            .filter(
                (t) =>
                    t.match(/^.+?\/.*?\/.*?_.*?$/) ||
                    t.match(/^.*?\/.+?\/.*?_.*?$/),
            ),
        categories: Object.fromEntries(
            o
                .split(
                    `
`,
                )
                .map((t) => t.trim())
                .filter((t) => t.match(/^.*::.*$/))
                .map((t) => t.split('::'))
                .map(([t, n]) => [t.trim(), n.split(',').map((i) => i.trim())]),
        ),
    };
}
const hn = () => _t(q);
function en(o, e, t = !1) {
    let n;
    t ? (n = t.Pronunciations[e]) : (n = hn().Pronunciations[e]);
    const i = di(n);
    return Hi(i.rules, o, i.categories);
}
function Gl(o) {
    _t(yn)[o] = en(_t(si), o);
    const e = hn().Lexicon;
    for (const n in e)
        e[n].pronunciations.hasOwnProperty(o) &&
            e[n].pronunciations[o].irregular === !1 &&
            (e[n].pronunciations[o].ipa = en(n, o));
    (hn().Lexicon = e), (_t(ei)[o] = en(_t(xs), o));
    const t = hn().Phrasebook;
    for (const n in t)
        for (const i in t[n])
            if (t[n][i].pronunciations.hasOwnProperty(o)) {
                t[n][i].pronunciations[o].irregular === !1 &&
                    (t[n][i].pronunciations[o].ipa = en(i, o));
                for (const s in t[n][i].variants)
                    t[n][i].variants[s].pronunciations[o].ipa = en(s, o);
            }
    hn().Phrasebook = t;
}
function Zm(o) {
    const e = () => Math.floor(Math.random() * 2) === 0,
        t = (l) => l[Math.floor(Math.random() * l.length)],
        n = {
            Onsets: hn().Phonotactics.General.Onsets.split(/\s+/g),
            Medials: hn().Phonotactics.General.Medials.split(/\s+/g),
            Codas: hn().Phonotactics.General.Codas.split(/\s+/g),
            Vowels: hn().Phonotactics.General.Vowels.split(/\s+/g),
            Illegals: hn().Phonotactics.General.Illegals.split(/\s+/g),
        };
    let i = '^' + o;
    const s = (l) => (
        (l += '^'),
        !n.Illegals.some((a) => l.includes(a)) || !n.Illegals[0] ?
            l.replace(/\^/g, '')
        :   ''
    );
    let r = !1;
    for (const l of n.Vowels)
        if (i.includes(l) && i.lastIndexOf(l) === i.length - l.length)
            if (e()) {
                (i += t(n.Medials) + t(n.Vowels)), (r = !0);
                break;
            } else return (i += t(n.Codas)), s(i);
    return !r && ((i += t(n.Vowels)), e()) ?
            (e() && (i += t(n.Codas)), s(i))
        :   (e() ?
                (i += t(n.Codas))
            :   ((i += t(n.Medials) + t(n.Vowels)), e() && (i += t(n.Codas))),
            s(i));
}
function Jm() {
    const o = () => {
        const e = {
                Onsets: hn().Phonotactics.General.Onsets.split(/\s+/g),
                Medials: hn().Phonotactics.General.Medials.split(/\s+/g),
                Codas: hn().Phonotactics.General.Codas.split(/\s+/g),
                Vowels: hn().Phonotactics.General.Vowels.split(/\s+/g),
                Illegals: hn().Phonotactics.General.Illegals.split(/\s+/g),
            },
            t = () => Math.floor(Math.random() * 2) === 0,
            n = (s) => s[Math.floor(Math.random() * s.length)];
        let i = '^';
        t() || (i += n(e.Onsets)), (i += n(e.Vowels));
        for (let s = 0; s < 2; s++)
            (t() || i.length === 2) &&
                ((i += n(e.Medials)), (i += n(e.Vowels)));
        return (
            t() && (i += n(e.Codas)),
            (i += '^'),
            !e.Illegals.some((s) => i.includes(s)) || !e.Illegals[0] ?
                i.replace(/\^/g, '')
            :   ''
        );
    };
    for (let e = 0; e < 50; e++) {
        const t = o();
        if (t) return t;
    }
    return '';
}
const Qm = (o) =>
        o
            .replace(/-_$/g, '')
            .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
            .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')
            .toLowerCase(),
    eb = (o, e) => {
        const n = o.getBoundingClientRect().width + 2,
            i = window.getComputedStyle(o),
            s = parseInt(i.getPropertyValue('padding-left'), 10),
            r = parseInt(i.getPropertyValue('padding-right'), 10),
            l = s + r,
            a = n - l;
        return Math.round(Math.min(e, a || e));
    },
    tb = (o, e = null, t) => {
        const n = o.getBoundingClientRect(),
            i = window.innerWidth || document.documentElement.clientWidth,
            s = window.innerHeight || document.documentElement.clientHeight;
        let r = n.bottom > 0 && n.top < s && n.right > 0 && n.left < i;
        if (e) {
            const l = e.getBoundingClientRect();
            return (
                t === 'top' || t === 'bottom' ?
                    (r = l.bottom + l.height < s && l.top < s)
                :   (r = l.right + l.width < i && l.left < i),
                r
            );
        }
        return r;
    },
    Ia = (o, e, t, n) => {
        if (!o || !e) return n;
        const i = e.getBoundingClientRect(),
            s = o.getBoundingClientRect(),
            r = window.getComputedStyle(o).position;
        window.getComputedStyle(o);
        let l = 0,
            a = 0,
            c = 0,
            h = 0,
            u = 0,
            p = o;
        for (; p && p !== document.body; ) {
            const k = window.getComputedStyle(p),
                y = k.position,
                w = p.getBoundingClientRect();
            y === 'fixed' ?
                ((c += w.top + window.scrollY), (u += w.left + window.scrollX))
            : y === 'sticky' ? ((h += w.top), (u += w.left + window.scrollX))
            : (y === 'absolute' || y === 'relative') &&
                (y === 'absolute' &&
                    ((l -= parseFloat(k.top) || 0),
                    (a -= parseFloat(k.left) || 0)),
                y === 'relative' &&
                    ((l -= p.offsetTop),
                    (a -= p.offsetLeft),
                    t === 'bottom' && (l += s.height),
                    t === 'right' && (a -= s.width),
                    r === 'absolute' && t === 'right' && (a += s.width)));
            const E = k.transform;
            if (E && E !== 'none') {
                const _ = new DOMMatrix(E);
                y === 'relative' || y === 'absolute' ?
                    ((l -= _.m42), (a -= _.m41))
                :   ((l -= p.offsetTop + _.m42), (a -= p.offsetLeft + _.m41));
            }
            p = p.parentElement;
        }
        let b = s.top + l + h - c,
            m = s.left + a - u;
        switch (t) {
            case 'top':
                (n.top = b), (n.left = m + s.width / 2);
                break;
            case 'bottom':
                (n.top = b - i.height), (n.left = m + s.width / 2);
                break;
            case 'left':
                (n.left = m), (n.top = b + s.height / 2);
                break;
            case 'right':
                (n.left = m + s.width - i.width), (n.top = b + s.height / 2);
                break;
        }
        return (n.top += window.scrollY), (n.left += window.scrollX), n;
    },
    nb = { left: 'right', right: 'left', top: 'bottom', bottom: 'top' };
function La(o) {
    let e,
        t,
        n = !o[11] && Aa(o);
    return {
        c() {
            (e = f('div')),
                n && n.c(),
                g(
                    e,
                    'class',
                    (t =
                        'tooltip animation-' +
                        o[8] +
                        ' ' +
                        o[0] +
                        ' ' +
                        o[4] +
                        ' svelte-16lxf1i'),
                ),
                Z(e, 'bottom', 'auto'),
                Z(e, 'right', 'auto'),
                Z(e, 'left', o[10].left + 'px'),
                Z(e, 'min-width', o[7] + 'px'),
                Z(e, 'max-width', o[3] + 'px'),
                Z(e, 'text-align', o[2]),
                Z(e, 'top', o[10].top + 'px'),
                St(e, 'show', o[9]),
                St(e, 'arrowless', !o[5]);
        },
        m(i, s) {
            C(i, e, s), n && n.m(e, null), o[20](e);
        },
        p(i, s) {
            i[11] ? n && (n.d(1), (n = null))
            : n ? n.p(i, s)
            : ((n = Aa(i)), n.c(), n.m(e, null)),
                s & 273 &&
                    t !==
                        (t =
                            'tooltip animation-' +
                            i[8] +
                            ' ' +
                            i[0] +
                            ' ' +
                            i[4] +
                            ' svelte-16lxf1i') &&
                    g(e, 'class', t),
                s & 1024 && Z(e, 'left', i[10].left + 'px'),
                s & 128 && Z(e, 'min-width', i[7] + 'px'),
                s & 8 && Z(e, 'max-width', i[3] + 'px'),
                s & 4 && Z(e, 'text-align', i[2]),
                s & 1024 && Z(e, 'top', i[10].top + 'px'),
                s & 785 && St(e, 'show', i[9]),
                s & 305 && St(e, 'arrowless', !i[5]);
        },
        d(i) {
            i && x(e), n && n.d(), o[20](null);
        },
    };
}
function Aa(o) {
    let e, t;
    return {
        c() {
            (e = new uu(!1)), (t = yt()), (e.a = t);
        },
        m(n, i) {
            e.m(o[1], n, i), C(n, t, i);
        },
        p(n, i) {
            i & 2 && e.p(n[1]);
        },
        d(n) {
            n && (x(t), e.d());
        },
    };
}
function ob(o) {
    let e,
        t,
        n,
        i = o[1] && La(o);
    return {
        c() {
            i && i.c(), (e = yt());
        },
        m(s, r) {
            i && i.m(s, r),
                C(s, e, r),
                t || ((n = R(window, 'resize', o[12])), (t = !0));
        },
        p(s, [r]) {
            s[1] ?
                i ? i.p(s, r)
                :   ((i = La(s)), i.c(), i.m(e.parentNode, e))
            :   i && (i.d(1), (i = null));
        },
        i: Le,
        o: Le,
        d(s) {
            s && x(e), i && i.d(s), (t = !1), n();
        },
    };
}
function ib(o, e, t) {
    let n,
        { targetElement: i = null } = e,
        { action: s = 'hover' } = e,
        { content: r = '' } = e,
        { align: l = 'left' } = e,
        { position: a = 'top' } = e,
        { maxWidth: c = 200 } = e,
        { style: h = null } = e,
        { theme: u = '' } = e,
        { animation: p = '' } = e,
        { delay: b = 200 } = e,
        { arrow: m = !0 } = e,
        { autoPosition: k = !1 } = e,
        { show: y = !1 } = e,
        w = null,
        E = 0,
        _ = null,
        B = null,
        O = !1,
        P = { bottom: 0, top: 0, right: 0, left: 0 };
    const H = p ? b : 0;
    If(() => {
        if (
            w !== null &&
            (n &&
                !_ &&
                (_ = new r.component({
                    target: w,
                    props: { action: s, ...r.props },
                })),
            t(7, (E = eb(w, c))),
            h && typeof h == 'object')
        )
            for (let A in h) {
                const $ = Qm(A),
                    K = h[A];
                w.style.setProperty(`--tooltip-${$}`, K);
            }
        k && !tb(w, i, a) && t(0, (a = nb[a])),
            t(10, (P = Ia(i, w, a, P))),
            p && t(8, (B = p)),
            setTimeout(() => t(9, (O = !0)), H);
    }),
        Lf(() => {
            _ && (_.$destroy(), (_ = null), t(9, (O = !1)), t(13, (y = !1)));
        });
    const T = () => {
        O && t(10, (P = Ia(i, w, a, P)));
    };
    function S(A) {
        Un[A ? 'unshift' : 'push'](() => {
            (w = A), t(6, w);
        });
    }
    return (
        (o.$$set = (A) => {
            'targetElement' in A && t(14, (i = A.targetElement)),
                'action' in A && t(15, (s = A.action)),
                'content' in A && t(1, (r = A.content)),
                'align' in A && t(2, (l = A.align)),
                'position' in A && t(0, (a = A.position)),
                'maxWidth' in A && t(3, (c = A.maxWidth)),
                'style' in A && t(16, (h = A.style)),
                'theme' in A && t(4, (u = A.theme)),
                'animation' in A && t(17, (p = A.animation)),
                'delay' in A && t(18, (b = A.delay)),
                'arrow' in A && t(5, (m = A.arrow)),
                'autoPosition' in A && t(19, (k = A.autoPosition)),
                'show' in A && t(13, (y = A.show));
        }),
        (o.$$.update = () => {
            o.$$.dirty & 2 && t(11, (n = typeof r == 'object')),
                o.$$.dirty & 8256 &&
                    (w && y ?
                        setTimeout(() => t(9, (O = !0)), 0)
                    :   t(9, (O = !1)));
        }),
        [a, r, l, c, u, m, w, E, B, O, P, n, T, y, i, s, h, p, b, k, S]
    );
}
class sb extends Rt {
    constructor(e) {
        super(),
            Nt(this, e, ib, ob, Ct, {
                targetElement: 14,
                action: 15,
                content: 1,
                align: 2,
                position: 0,
                maxWidth: 3,
                style: 16,
                theme: 4,
                animation: 17,
                delay: 18,
                arrow: 5,
                autoPosition: 19,
                show: 13,
            });
    }
}
const dt = (o, e) => {
    let t = null,
        n = o.getAttribute('title'),
        i = e?.action || o.getAttribute('action') || 'hover';
    const s =
            e?.hideOnClickOutside || o.getAttribute('hideOnClickOutside') || !1,
        r = ({ target: b }) => {
            s && b && !b.classList.contains('tooltip') && h();
        },
        l = { ...e, targetElement: o };
    l.hideOnClickOutside && delete l.hideOnClickOutside,
        n && (o.removeAttribute('title'), (l.content = n));
    const a = () => {
            t ? (i === 'click' && s) || h() : c();
        },
        c = () => {
            t || (t = new sb({ target: o, props: l }));
        },
        h = () => {
            t && (t.$destroy(), (t = null));
        },
        u = () => {
            o !== null &&
                (p(),
                i === 'click' &&
                    (o.addEventListener('click', a),
                    s &&
                        document.addEventListener('click', r, {
                            passive: !0,
                            capture: !0,
                        })),
                i === 'hover' &&
                    (o.addEventListener('mouseenter', c),
                    o.addEventListener('mouseleave', h)));
        },
        p = () => {
            s && document.removeEventListener('click', r),
                o !== null &&
                    (o.removeEventListener('click', a),
                    o.removeEventListener('mouseenter', c),
                    o.removeEventListener('mouseleave', h));
        };
    return (
        u(),
        l.show && setTimeout(c, 0),
        {
            destroy() {
                p(), n && o.setAttribute('title', n);
            },
        }
    );
};
function Oa(o, e, t) {
    const n = o.slice();
    return (n[2] = e[t]), n;
}
function Ma(o) {
    let e, t;
    function n(r, l) {
        return (
            l & 3 && (e = null),
            e == null &&
                (e = !!(
                    Object.keys(r[0]).length > 1 ||
                    r[1].UseLects ||
                    !r[0].General
                )),
            e ? lb : rb
        );
    }
    let i = n(o, -1),
        s = i(o);
    return {
        c() {
            s.c(), (t = yt());
        },
        m(r, l) {
            s.m(r, l), C(r, t, l);
        },
        p(r, l) {
            i === (i = n(r, l)) && s ?
                s.p(r, l)
            :   (s.d(1), (s = i(r)), s && (s.c(), s.m(t.parentNode, t)));
        },
        d(r) {
            r && x(t), s.d(r);
        },
    };
}
function rb(o) {
    let e,
        t = o[0].General.ipa + '',
        n,
        i,
        s = o[0].General.irregular && Pa();
    return {
        c() {
            (e = f('p')),
                (n = Y(t)),
                (i = v()),
                s && s.c(),
                g(e, 'class', 'pronunciation');
        },
        m(r, l) {
            C(r, e, l), d(e, n), d(e, i), s && s.m(e, null);
        },
        p(r, l) {
            l & 1 && t !== (t = r[0].General.ipa + '') && Ee(n, t),
                r[0].General.irregular ?
                    s || ((s = Pa()), s.c(), s.m(e, null))
                :   s && (s.d(1), (s = null));
        },
        d(r) {
            r && x(e), s && s.d();
        },
    };
}
function lb(o) {
    let e,
        t = he(Object.keys(o[0])),
        n = [];
    for (let i = 0; i < t.length; i += 1) n[i] = Ra(Oa(o, t, i));
    return {
        c() {
            for (let i = 0; i < n.length; i += 1) n[i].c();
            e = yt();
        },
        m(i, s) {
            for (let r = 0; r < n.length; r += 1) n[r] && n[r].m(i, s);
            C(i, e, s);
        },
        p(i, s) {
            if (s & 1) {
                t = he(Object.keys(i[0]));
                let r;
                for (r = 0; r < t.length; r += 1) {
                    const l = Oa(i, t, r);
                    n[r] ?
                        n[r].p(l, s)
                    :   ((n[r] = Ra(l)), n[r].c(), n[r].m(e.parentNode, e));
                }
                for (; r < n.length; r += 1) n[r].d(1);
                n.length = t.length;
            }
        },
        d(i) {
            i && x(e), He(n, i);
        },
    };
}
function Pa(o) {
    let e, t, n;
    return {
        c() {
            (e = f('span')),
                (e.textContent = 'lightbulb'),
                g(
                    e,
                    'title',
                    'irregular pronunciation: rules are not being applied',
                ),
                g(e, 'class', 'material-icons'),
                Z(e, 'font-size', '0.75em'),
                Z(e, 'margin-right', '-1em');
        },
        m(i, s) {
            C(i, e, s),
                t ||
                    ((n = ht(dt.call(null, e, { position: 'bottom' }))),
                    (t = !0));
        },
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function Na(o) {
    let e, t, n;
    return {
        c() {
            (e = f('span')),
                (e.textContent = 'lightbulb'),
                g(
                    e,
                    'title',
                    'irregular pronunciation: rules are not being applied',
                ),
                g(e, 'class', 'material-icons'),
                Z(e, 'font-size', '0.75em'),
                Z(e, 'margin-right', '-1em');
        },
        m(i, s) {
            C(i, e, s),
                t ||
                    ((n = ht(dt.call(null, e, { position: 'bottom' }))),
                    (t = !0));
        },
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function Ra(o) {
    let e,
        t,
        n,
        i = o[2] + '',
        s,
        r,
        l,
        a,
        c = o[0][o[2]].ipa + '',
        h,
        u,
        p,
        b = o[0][o[2]].irregular && Na();
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('i')),
                (s = Y(i)),
                (r = v()),
                (l = f('div')),
                (a = f('span')),
                (h = Y(c)),
                (u = v()),
                b && b.c(),
                (p = v()),
                g(t, 'class', 'grid-left svelte-1exog5m'),
                g(a, 'class', 'pronunciation'),
                g(l, 'class', 'grid-right svelte-1exog5m'),
                g(e, 'class', 'grid lect svelte-1exog5m');
        },
        m(m, k) {
            C(m, e, k),
                d(e, t),
                d(t, n),
                d(n, s),
                d(e, r),
                d(e, l),
                d(l, a),
                d(a, h),
                d(a, u),
                b && b.m(a, null),
                d(e, p);
        },
        p(m, k) {
            k & 1 && i !== (i = m[2] + '') && Ee(s, i),
                k & 1 && c !== (c = m[0][m[2]].ipa + '') && Ee(h, c),
                m[0][m[2]].irregular ?
                    b || ((b = Na()), b.c(), b.m(a, null))
                :   b && (b.d(1), (b = null));
        },
        d(m) {
            m && x(e), b && b.d();
        },
    };
}
function ab(o) {
    let e,
        t = o[1].ShowPronunciation && Ma(o);
    return {
        c() {
            t && t.c(), (e = yt());
        },
        m(n, i) {
            t && t.m(n, i), C(n, e, i);
        },
        p(n, [i]) {
            n[1].ShowPronunciation ?
                t ? t.p(n, i)
                :   ((t = Ma(n)), t.c(), t.m(e.parentNode, e))
            :   t && (t.d(1), (t = null));
        },
        i: Le,
        o: Le,
        d(n) {
            n && x(e), t && t.d(n);
        },
    };
}
function cb(o, e, t) {
    let n;
    $e(o, q, (s) => t(1, (n = s)));
    let { pronunciations: i } = e;
    return (
        (o.$$set = (s) => {
            'pronunciations' in s && t(0, (i = s.pronunciations));
        }),
        [i, n]
    );
}
class ql extends Rt {
    constructor(e) {
        super(), Nt(this, e, cb, ab, Ct, { pronunciations: 0 });
    }
}
function op(o) {
    return o < 0.5 ? 4 * o * o * o : 0.5 * Math.pow(2 * o - 2, 3) + 1;
}
function so(
    o,
    {
        delay: e = 0,
        duration: t = 400,
        easing: n = op,
        amount: i = 5,
        opacity: s = 0,
    } = {},
) {
    const r = getComputedStyle(o),
        l = +r.opacity,
        a = r.filter === 'none' ? '' : r.filter,
        c = l * (1 - s),
        [h, u] = yf(i);
    return {
        delay: e,
        duration: t,
        easing: n,
        css: (p, b) =>
            `opacity: ${l - c * b}; filter: ${a} blur(${b * h}${u});`,
    };
}
function br(o, { delay: e = 0, speed: t, duration: n, easing: i = op } = {}) {
    let s = o.getTotalLength();
    const r = getComputedStyle(o);
    return (
        r.strokeLinecap !== 'butt' && (s += parseInt(r.strokeWidth)),
        n === void 0 ?
            t === void 0 ?
                (n = 800)
            :   (n = s / t)
        :   typeof n == 'function' && (n = n(s)),
        {
            delay: e,
            duration: n,
            easing: i,
            css: (l, a) => `
			stroke-dasharray: ${s};
			stroke-dashoffset: ${a * s};
		`,
        }
    );
}
function Da(o, e, t) {
    const n = o.slice();
    return (n[7] = e[t]), n;
}
function Fa(o, e, t) {
    const n = o.slice();
    return (n[10] = e[t]), n;
}
function Ha(o, e, t) {
    const n = o.slice();
    return (n[13] = e[t]), n;
}
function za(o) {
    let e,
        t,
        n = o[1] ? '⏶' : '⏷',
        i,
        s,
        r,
        l,
        a,
        c = o[1] && !o[2] && Ua(o);
    return {
        c() {
            (e = f('button')),
                (t = Y('Inflections ')),
                (i = Y(n)),
                (s = v()),
                c && c.c(),
                (r = yt()),
                g(e, 'class', 'inflection hover-highlight');
        },
        m(h, u) {
            C(h, e, u),
                d(e, t),
                d(e, i),
                C(h, s, u),
                c && c.m(h, u),
                C(h, r, u),
                l || ((a = R(e, 'click', o[6])), (l = !0));
        },
        p(h, u) {
            u & 2 && n !== (n = h[1] ? '⏶' : '⏷') && Ee(i, n),
                h[1] && !h[2] ?
                    c ? (c.p(h, u), u & 6 && Ce(c, 1))
                    :   ((c = Ua(h)), c.c(), Ce(c, 1), c.m(r.parentNode, r))
                :   c &&
                    (Wt(),
                    Oe(c, 1, 1, () => {
                        c = null;
                    }),
                    Gt());
        },
        d(h) {
            h && (x(e), x(s), x(r)), c && c.d(h), (l = !1), a();
        },
    };
}
function Ua(o) {
    let e,
        t,
        n,
        i = he(o[0].flat()),
        s = [];
    for (let r = 0; r < i.length; r += 1) s[r] = Va(Da(o, i, r));
    return {
        c() {
            e = f('div');
            for (let r = 0; r < s.length; r += 1) s[r].c();
            g(e, 'class', 'inflection');
        },
        m(r, l) {
            C(r, e, l);
            for (let a = 0; a < s.length; a += 1) s[a] && s[a].m(e, null);
            n = !0;
        },
        p(r, l) {
            if (l & 1) {
                i = he(r[0].flat());
                let a;
                for (a = 0; a < i.length; a += 1) {
                    const c = Da(r, i, a);
                    s[a] ?
                        s[a].p(c, l)
                    :   ((s[a] = Va(c)), s[a].c(), s[a].m(e, null));
                }
                for (; a < s.length; a += 1) s[a].d(1);
                s.length = i.length;
            }
        },
        i(r) {
            n ||
                (r &&
                    Pt(() => {
                        n &&
                            (t ||
                                (t = vn(
                                    e,
                                    so,
                                    { amount: 10, duration: 333 },
                                    !0,
                                )),
                            t.run(1));
                    }),
                (n = !0));
        },
        o(r) {
            r &&
                (t || (t = vn(e, so, { amount: 10, duration: 333 }, !1)),
                t.run(0)),
                (n = !1);
        },
        d(r) {
            r && x(e), He(s, r), r && t && t.end();
        },
    };
}
function ja(o) {
    let e = `h${o[7].data.level}`,
        t,
        n = `h${o[7].data.level}` && zr(o);
    return {
        c() {
            n && n.c(), (t = yt());
        },
        m(i, s) {
            n && n.m(i, s), C(i, t, s);
        },
        p(i, s) {
            `h${i[7].data.level}` ?
                e ?
                    Ct(e, `h${i[7].data.level}`) ?
                        (n.d(1),
                        (n = zr(i)),
                        (e = `h${i[7].data.level}`),
                        n.c(),
                        n.m(t.parentNode, t))
                    :   n.p(i, s)
                :   ((n = zr(i)),
                    (e = `h${i[7].data.level}`),
                    n.c(),
                    n.m(t.parentNode, t))
            :   e && (n.d(1), (n = null), (e = `h${i[7].data.level}`));
        },
        d(i) {
            i && x(t), n && n.d(i);
        },
    };
}
function zr(o) {
    let e,
        t = o[7].data.text + '';
    return {
        c() {
            e = f(`h${o[7].data.level}`);
        },
        m(n, i) {
            C(n, e, i), (e.innerHTML = t);
        },
        p(n, i) {
            i & 1 && t !== (t = n[7].data.text + '') && (e.innerHTML = t);
        },
        d(n) {
            n && x(e);
        },
    };
}
function $a(o) {
    let e,
        t,
        n = he(o[7].data.content),
        i = [];
    for (let s = 0; s < n.length; s += 1) i[s] = Ga(Fa(o, n, s));
    return {
        c() {
            (e = f('table')), (t = f('tbody'));
            for (let s = 0; s < i.length; s += 1) i[s].c();
            Z(e, 'margin', 'auto');
        },
        m(s, r) {
            C(s, e, r), d(e, t);
            for (let l = 0; l < i.length; l += 1) i[l] && i[l].m(t, null);
        },
        p(s, r) {
            if (r & 1) {
                n = he(s[7].data.content);
                let l;
                for (l = 0; l < n.length; l += 1) {
                    const a = Fa(s, n, l);
                    i[l] ?
                        i[l].p(a, r)
                    :   ((i[l] = Ga(a)), i[l].c(), i[l].m(t, null));
                }
                for (; l < i.length; l += 1) i[l].d(1);
                i.length = n.length;
            }
        },
        d(s) {
            s && x(e), He(i, s);
        },
    };
}
function Wa(o) {
    let e,
        t = o[13] + '';
    return {
        c() {
            e = f('td');
        },
        m(n, i) {
            C(n, e, i), (e.innerHTML = t);
        },
        p(n, i) {
            i & 1 && t !== (t = n[13] + '') && (e.innerHTML = t);
        },
        d(n) {
            n && x(e);
        },
    };
}
function Ga(o) {
    let e,
        t,
        n = he(o[10]),
        i = [];
    for (let s = 0; s < n.length; s += 1) i[s] = Wa(Ha(o, n, s));
    return {
        c() {
            e = f('tr');
            for (let s = 0; s < i.length; s += 1) i[s].c();
            t = v();
        },
        m(s, r) {
            C(s, e, r);
            for (let l = 0; l < i.length; l += 1) i[l] && i[l].m(e, null);
            d(e, t);
        },
        p(s, r) {
            if (r & 1) {
                n = he(s[10]);
                let l;
                for (l = 0; l < n.length; l += 1) {
                    const a = Ha(s, n, l);
                    i[l] ?
                        i[l].p(a, r)
                    :   ((i[l] = Wa(a)), i[l].c(), i[l].m(e, t));
                }
                for (; l < i.length; l += 1) i[l].d(1);
                i.length = n.length;
            }
        },
        d(s) {
            s && x(e), He(i, s);
        },
    };
}
function qa(o) {
    let e,
        t = o[7].data.text + '';
    return {
        c() {
            e = f('p');
        },
        m(n, i) {
            C(n, e, i), (e.innerHTML = t);
        },
        p(n, i) {
            i & 1 && t !== (t = n[7].data.text + '') && (e.innerHTML = t);
        },
        d(n) {
            n && x(e);
        },
    };
}
function Va(o) {
    let e,
        t,
        n,
        i = o[7].type === 'header' && ja(o),
        s = o[7].type === 'table' && $a(o),
        r = o[7].type === 'paragraph' && qa(o);
    return {
        c() {
            i && i.c(),
                (e = v()),
                s && s.c(),
                (t = v()),
                r && r.c(),
                (n = yt());
        },
        m(l, a) {
            i && i.m(l, a),
                C(l, e, a),
                s && s.m(l, a),
                C(l, t, a),
                r && r.m(l, a),
                C(l, n, a);
        },
        p(l, a) {
            l[7].type === 'header' ?
                i ? i.p(l, a)
                :   ((i = ja(l)), i.c(), i.m(e.parentNode, e))
            :   i && (i.d(1), (i = null)),
                l[7].type === 'table' ?
                    s ? s.p(l, a)
                    :   ((s = $a(l)), s.c(), s.m(t.parentNode, t))
                :   s && (s.d(1), (s = null)),
                l[7].type === 'paragraph' ?
                    r ? r.p(l, a)
                    :   ((r = qa(l)), r.c(), r.m(n.parentNode, n))
                :   r && (r.d(1), (r = null));
        },
        d(l) {
            l && (x(e), x(t), x(n)), i && i.d(l), s && s.d(l), r && r.d(l);
        },
    };
}
function hb(o) {
    let e,
        t = o[0][0] && za(o);
    return {
        c() {
            t && t.c(), (e = yt());
        },
        m(n, i) {
            t && t.m(n, i), C(n, e, i);
        },
        p(n, [i]) {
            n[0][0] ?
                t ? t.p(n, i)
                :   ((t = za(n)), t.c(), t.m(e.parentNode, e))
            :   t && (t.d(1), (t = null));
        },
        i: Le,
        o: Le,
        d(n) {
            n && x(e), t && t.d(n);
        },
    };
}
function db(o) {
    const e = document.createElement('div');
    return (e.innerHTML = o), e.textContent;
}
function ub(o, e, t) {
    let n, i;
    $e(o, q, (h) => t(5, (n = h))), $e(o, er, (h) => t(2, (i = h)));
    let { word: s } = e,
        { tags: r } = e,
        l = !1,
        a;
    const c = () => t(1, (l = !l));
    return (
        (o.$$set = (h) => {
            'word' in h && t(3, (s = h.word)),
                'tags' in h && t(4, (r = h.tags));
        }),
        (o.$$.update = () => {
            if (o.$$.dirty & 57) {
                n.Inflections, n.Lexicon;
                let h = '';
                t(
                    0,
                    (a = structuredClone(n.Inflections)
                        .filter((u) => {
                            let p;
                            try {
                                p = new RegExp(u.filter);
                            } catch {
                                Fn.error(
                                    `Invalid regular expression: /${u.filter}/`,
                                ),
                                    (p = /.+/);
                            }
                            return (
                                (u.tags[0] ?
                                    u.tags.some((b) => r.includes(b))
                                :   !0) && s.match(p)
                            );
                        })
                        .map(
                            (u) => (
                                (h +=
                                    u.categories +
                                    `
`),
                                u.tables.blocks
                            ),
                        )),
                ),
                    a.forEach((u, p) => {
                        u.forEach((b, m) => {
                            b.type === 'table' &&
                                b.data.content.forEach((k, y) => {
                                    k.forEach((w, E) => {
                                        const _ = di(db(w)).rules,
                                            B = di(h).categories;
                                        _[0] &&
                                            t(
                                                0,
                                                (a[p][m].data.content[y][E] =
                                                    Hi(_, s, B)),
                                                a,
                                            );
                                    });
                                });
                        });
                    });
            }
        }),
        [a, l, i, s, r, n, c]
    );
}
class pb extends Rt {
    constructor(e) {
        super(), Nt(this, e, ub, hb, Ct, { word: 3, tags: 4 });
    }
}
function Vl() {
    return {
        async: !1,
        breaks: !1,
        extensions: null,
        gfm: !0,
        hooks: null,
        pedantic: !1,
        renderer: null,
        silent: !1,
        tokenizer: null,
        walkTokens: null,
    };
}
let fi = Vl();
function ip(o) {
    fi = o;
}
const sp = /[&<>"']/,
    fb = new RegExp(sp.source, 'g'),
    rp = /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,
    gb = new RegExp(rp.source, 'g'),
    mb = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#39;',
    },
    Ya = (o) => mb[o];
function Tn(o, e) {
    if (e) {
        if (sp.test(o)) return o.replace(fb, Ya);
    } else if (rp.test(o)) return o.replace(gb, Ya);
    return o;
}
const bb = /(^|[^\[])\^/g;
function wt(o, e) {
    let t = typeof o == 'string' ? o : o.source;
    e = e || '';
    const n = {
        replace: (i, s) => {
            let r = typeof s == 'string' ? s : s.source;
            return (r = r.replace(bb, '$1')), (t = t.replace(i, r)), n;
        },
        getRegex: () => new RegExp(t, e),
    };
    return n;
}
function Ka(o) {
    try {
        o = encodeURI(o).replace(/%25/g, '%');
    } catch {
        return null;
    }
    return o;
}
const Bs = { exec: () => null };
function Xa(o, e) {
    const t = o.replace(/\|/g, (s, r, l) => {
            let a = !1,
                c = r;
            for (; --c >= 0 && l[c] === '\\'; ) a = !a;
            return a ? '|' : ' |';
        }),
        n = t.split(/ \|/);
    let i = 0;
    if (
        (n[0].trim() || n.shift(),
        n.length > 0 && !n[n.length - 1].trim() && n.pop(),
        e)
    )
        if (n.length > e) n.splice(e);
        else for (; n.length < e; ) n.push('');
    for (; i < n.length; i++) n[i] = n[i].trim().replace(/\\\|/g, '|');
    return n;
}
function ws(o, e, t) {
    const n = o.length;
    if (n === 0) return '';
    let i = 0;
    for (; i < n; ) {
        const s = o.charAt(n - i - 1);
        if (s === e && !t) i++;
        else if (s !== e && t) i++;
        else break;
    }
    return o.slice(0, n - i);
}
function wb(o, e) {
    if (o.indexOf(e[1]) === -1) return -1;
    let t = 0;
    for (let n = 0; n < o.length; n++)
        if (o[n] === '\\') n++;
        else if (o[n] === e[0]) t++;
        else if (o[n] === e[1] && (t--, t < 0)) return n;
    return -1;
}
function Za(o, e, t, n) {
    const i = e.href,
        s = e.title ? Tn(e.title) : null,
        r = o[1].replace(/\\([\[\]])/g, '$1');
    if (o[0].charAt(0) !== '!') {
        n.state.inLink = !0;
        const l = {
            type: 'link',
            raw: t,
            href: i,
            title: s,
            text: r,
            tokens: n.inlineTokens(r),
        };
        return (n.state.inLink = !1), l;
    }
    return { type: 'image', raw: t, href: i, title: s, text: Tn(r) };
}
function yb(o, e) {
    const t = o.match(/^(\s+)(?:```)/);
    if (t === null) return e;
    const n = t[1];
    return e
        .split(
            `
`,
        )
        .map((i) => {
            const s = i.match(/^\s+/);
            if (s === null) return i;
            const [r] = s;
            return r.length >= n.length ? i.slice(n.length) : i;
        }).join(`
`);
}
class wr {
    options;
    rules;
    lexer;
    constructor(e) {
        this.options = e || fi;
    }
    space(e) {
        const t = this.rules.block.newline.exec(e);
        if (t && t[0].length > 0) return { type: 'space', raw: t[0] };
    }
    code(e) {
        const t = this.rules.block.code.exec(e);
        if (t) {
            const n = t[0].replace(/^ {1,4}/gm, '');
            return {
                type: 'code',
                raw: t[0],
                codeBlockStyle: 'indented',
                text:
                    this.options.pedantic ?
                        n
                    :   ws(
                            n,
                            `
`,
                        ),
            };
        }
    }
    fences(e) {
        const t = this.rules.block.fences.exec(e);
        if (t) {
            const n = t[0],
                i = yb(n, t[3] || '');
            return {
                type: 'code',
                raw: n,
                lang:
                    t[2] ?
                        t[2]
                            .trim()
                            .replace(this.rules.inline.anyPunctuation, '$1')
                    :   t[2],
                text: i,
            };
        }
    }
    heading(e) {
        const t = this.rules.block.heading.exec(e);
        if (t) {
            let n = t[2].trim();
            if (/#$/.test(n)) {
                const i = ws(n, '#');
                (this.options.pedantic || !i || / $/.test(i)) && (n = i.trim());
            }
            return {
                type: 'heading',
                raw: t[0],
                depth: t[1].length,
                text: n,
                tokens: this.lexer.inline(n),
            };
        }
    }
    hr(e) {
        const t = this.rules.block.hr.exec(e);
        if (t)
            return {
                type: 'hr',
                raw: ws(
                    t[0],
                    `
`,
                ),
            };
    }
    blockquote(e) {
        const t = this.rules.block.blockquote.exec(e);
        if (t) {
            let n = ws(
                    t[0],
                    `
`,
                ).split(`
`),
                i = '',
                s = '';
            const r = [];
            for (; n.length > 0; ) {
                let l = !1;
                const a = [];
                let c;
                for (c = 0; c < n.length; c++)
                    if (/^ {0,3}>/.test(n[c])) a.push(n[c]), (l = !0);
                    else if (!l) a.push(n[c]);
                    else break;
                n = n.slice(c);
                const h = a.join(`
`),
                    u = h
                        .replace(
                            /\n {0,3}((?:=+|-+) *)(?=\n|$)/g,
                            `
    $1`,
                        )
                        .replace(/^ {0,3}>[ \t]?/gm, '');
                (i =
                    i ?
                        `${i}
${h}`
                    :   h),
                    (s =
                        s ?
                            `${s}
${u}`
                        :   u);
                const p = this.lexer.state.top;
                if (
                    ((this.lexer.state.top = !0),
                    this.lexer.blockTokens(u, r, !0),
                    (this.lexer.state.top = p),
                    n.length === 0)
                )
                    break;
                const b = r[r.length - 1];
                if (b?.type === 'code') break;
                if (b?.type === 'blockquote') {
                    const m = b,
                        k =
                            m.raw +
                            `
` +
                            n.join(`
`),
                        y = this.blockquote(k);
                    (r[r.length - 1] = y),
                        (i = i.substring(0, i.length - m.raw.length) + y.raw),
                        (s = s.substring(0, s.length - m.text.length) + y.text);
                    break;
                } else if (b?.type === 'list') {
                    const m = b,
                        k =
                            m.raw +
                            `
` +
                            n.join(`
`),
                        y = this.list(k);
                    (r[r.length - 1] = y),
                        (i = i.substring(0, i.length - b.raw.length) + y.raw),
                        (s = s.substring(0, s.length - m.raw.length) + y.raw),
                        (n = k.substring(r[r.length - 1].raw.length).split(`
`));
                    continue;
                }
            }
            return { type: 'blockquote', raw: i, tokens: r, text: s };
        }
    }
    list(e) {
        let t = this.rules.block.list.exec(e);
        if (t) {
            let n = t[1].trim();
            const i = n.length > 1,
                s = {
                    type: 'list',
                    raw: '',
                    ordered: i,
                    start: i ? +n.slice(0, -1) : '',
                    loose: !1,
                    items: [],
                };
            (n = i ? `\\d{1,9}\\${n.slice(-1)}` : `\\${n}`),
                this.options.pedantic && (n = i ? n : '[*+-]');
            const r = new RegExp(`^( {0,3}${n})((?:[	 ][^\\n]*)?(?:\\n|$))`);
            let l = !1;
            for (; e; ) {
                let a = !1,
                    c = '',
                    h = '';
                if (!(t = r.exec(e)) || this.rules.block.hr.test(e)) break;
                (c = t[0]), (e = e.substring(c.length));
                let u = t[2]
                        .split(
                            `
`,
                            1,
                        )[0]
                        .replace(/^\t+/, (w) => ' '.repeat(3 * w.length)),
                    p = e.split(
                        `
`,
                        1,
                    )[0],
                    b = !u.trim(),
                    m = 0;
                if (
                    (this.options.pedantic ? ((m = 2), (h = u.trimStart()))
                    : b ? (m = t[1].length + 1)
                    : ((m = t[2].search(/[^ ]/)),
                        (m = m > 4 ? 1 : m),
                        (h = u.slice(m)),
                        (m += t[1].length)),
                    b &&
                        /^ *$/.test(p) &&
                        ((c +=
                            p +
                            `
`),
                        (e = e.substring(p.length + 1)),
                        (a = !0)),
                    !a)
                ) {
                    const w = new RegExp(
                            `^ {0,${Math.min(3, m - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`,
                        ),
                        E = new RegExp(
                            `^ {0,${Math.min(3, m - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`,
                        ),
                        _ = new RegExp(
                            `^ {0,${Math.min(3, m - 1)}}(?:\`\`\`|~~~)`,
                        ),
                        B = new RegExp(`^ {0,${Math.min(3, m - 1)}}#`);
                    for (; e; ) {
                        const O = e.split(
                            `
`,
                            1,
                        )[0];
                        if (
                            ((p = O),
                            this.options.pedantic &&
                                (p = p.replace(
                                    /^ {1,4}(?=( {4})*[^ ])/g,
                                    '  ',
                                )),
                            _.test(p) || B.test(p) || w.test(p) || E.test(e))
                        )
                            break;
                        if (p.search(/[^ ]/) >= m || !p.trim())
                            h +=
                                `
` + p.slice(m);
                        else {
                            if (
                                b ||
                                u.search(/[^ ]/) >= 4 ||
                                _.test(u) ||
                                B.test(u) ||
                                E.test(u)
                            )
                                break;
                            h +=
                                `
` + p;
                        }
                        !b && !p.trim() && (b = !0),
                            (c +=
                                O +
                                `
`),
                            (e = e.substring(O.length + 1)),
                            (u = p.slice(m));
                    }
                }
                s.loose ||
                    (l ? (s.loose = !0) : /\n *\n *$/.test(c) && (l = !0));
                let k = null,
                    y;
                this.options.gfm &&
                    ((k = /^\[[ xX]\] /.exec(h)),
                    k &&
                        ((y = k[0] !== '[ ] '),
                        (h = h.replace(/^\[[ xX]\] +/, '')))),
                    s.items.push({
                        type: 'list_item',
                        raw: c,
                        task: !!k,
                        checked: y,
                        loose: !1,
                        text: h,
                        tokens: [],
                    }),
                    (s.raw += c);
            }
            (s.items[s.items.length - 1].raw =
                s.items[s.items.length - 1].raw.trimEnd()),
                (s.items[s.items.length - 1].text =
                    s.items[s.items.length - 1].text.trimEnd()),
                (s.raw = s.raw.trimEnd());
            for (let a = 0; a < s.items.length; a++)
                if (
                    ((this.lexer.state.top = !1),
                    (s.items[a].tokens = this.lexer.blockTokens(
                        s.items[a].text,
                        [],
                    )),
                    !s.loose)
                ) {
                    const c = s.items[a].tokens.filter(
                            (u) => u.type === 'space',
                        ),
                        h = c.length > 0 && c.some((u) => /\n.*\n/.test(u.raw));
                    s.loose = h;
                }
            if (s.loose)
                for (let a = 0; a < s.items.length; a++) s.items[a].loose = !0;
            return s;
        }
    }
    html(e) {
        const t = this.rules.block.html.exec(e);
        if (t)
            return {
                type: 'html',
                block: !0,
                raw: t[0],
                pre: t[1] === 'pre' || t[1] === 'script' || t[1] === 'style',
                text: t[0],
            };
    }
    def(e) {
        const t = this.rules.block.def.exec(e);
        if (t) {
            const n = t[1].toLowerCase().replace(/\s+/g, ' '),
                i =
                    t[2] ?
                        t[2]
                            .replace(/^<(.*)>$/, '$1')
                            .replace(this.rules.inline.anyPunctuation, '$1')
                    :   '',
                s =
                    t[3] ?
                        t[3]
                            .substring(1, t[3].length - 1)
                            .replace(this.rules.inline.anyPunctuation, '$1')
                    :   t[3];
            return { type: 'def', tag: n, raw: t[0], href: i, title: s };
        }
    }
    table(e) {
        const t = this.rules.block.table.exec(e);
        if (!t || !/[:|]/.test(t[2])) return;
        const n = Xa(t[1]),
            i = t[2].replace(/^\||\| *$/g, '').split('|'),
            s =
                t[3] && t[3].trim() ?
                    t[3].replace(/\n[ \t]*$/, '').split(`
`)
                :   [],
            r = { type: 'table', raw: t[0], header: [], align: [], rows: [] };
        if (n.length === i.length) {
            for (const l of i)
                /^ *-+: *$/.test(l) ? r.align.push('right')
                : /^ *:-+: *$/.test(l) ? r.align.push('center')
                : /^ *:-+ *$/.test(l) ? r.align.push('left')
                : r.align.push(null);
            for (let l = 0; l < n.length; l++)
                r.header.push({
                    text: n[l],
                    tokens: this.lexer.inline(n[l]),
                    header: !0,
                    align: r.align[l],
                });
            for (const l of s)
                r.rows.push(
                    Xa(l, r.header.length).map((a, c) => ({
                        text: a,
                        tokens: this.lexer.inline(a),
                        header: !1,
                        align: r.align[c],
                    })),
                );
            return r;
        }
    }
    lheading(e) {
        const t = this.rules.block.lheading.exec(e);
        if (t)
            return {
                type: 'heading',
                raw: t[0],
                depth: t[2].charAt(0) === '=' ? 1 : 2,
                text: t[1],
                tokens: this.lexer.inline(t[1]),
            };
    }
    paragraph(e) {
        const t = this.rules.block.paragraph.exec(e);
        if (t) {
            const n =
                (
                    t[1].charAt(t[1].length - 1) ===
                    `
`
                ) ?
                    t[1].slice(0, -1)
                :   t[1];
            return {
                type: 'paragraph',
                raw: t[0],
                text: n,
                tokens: this.lexer.inline(n),
            };
        }
    }
    text(e) {
        const t = this.rules.block.text.exec(e);
        if (t)
            return {
                type: 'text',
                raw: t[0],
                text: t[0],
                tokens: this.lexer.inline(t[0]),
            };
    }
    escape(e) {
        const t = this.rules.inline.escape.exec(e);
        if (t) return { type: 'escape', raw: t[0], text: Tn(t[1]) };
    }
    tag(e) {
        const t = this.rules.inline.tag.exec(e);
        if (t)
            return (
                !this.lexer.state.inLink && /^<a /i.test(t[0]) ?
                    (this.lexer.state.inLink = !0)
                :   this.lexer.state.inLink &&
                    /^<\/a>/i.test(t[0]) &&
                    (this.lexer.state.inLink = !1),
                (
                    !this.lexer.state.inRawBlock &&
                    /^<(pre|code|kbd|script)(\s|>)/i.test(t[0])
                ) ?
                    (this.lexer.state.inRawBlock = !0)
                :   this.lexer.state.inRawBlock &&
                    /^<\/(pre|code|kbd|script)(\s|>)/i.test(t[0]) &&
                    (this.lexer.state.inRawBlock = !1),
                {
                    type: 'html',
                    raw: t[0],
                    inLink: this.lexer.state.inLink,
                    inRawBlock: this.lexer.state.inRawBlock,
                    block: !1,
                    text: t[0],
                }
            );
    }
    link(e) {
        const t = this.rules.inline.link.exec(e);
        if (t) {
            const n = t[2].trim();
            if (!this.options.pedantic && /^</.test(n)) {
                if (!/>$/.test(n)) return;
                const r = ws(n.slice(0, -1), '\\');
                if ((n.length - r.length) % 2 === 0) return;
            } else {
                const r = wb(t[2], '()');
                if (r > -1) {
                    const a =
                        (t[0].indexOf('!') === 0 ? 5 : 4) + t[1].length + r;
                    (t[2] = t[2].substring(0, r)),
                        (t[0] = t[0].substring(0, a).trim()),
                        (t[3] = '');
                }
            }
            let i = t[2],
                s = '';
            if (this.options.pedantic) {
                const r = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(i);
                r && ((i = r[1]), (s = r[3]));
            } else s = t[3] ? t[3].slice(1, -1) : '';
            return (
                (i = i.trim()),
                /^</.test(i) &&
                    (this.options.pedantic && !/>$/.test(n) ?
                        (i = i.slice(1))
                    :   (i = i.slice(1, -1))),
                Za(
                    t,
                    {
                        href:
                            i &&
                            i.replace(this.rules.inline.anyPunctuation, '$1'),
                        title:
                            s &&
                            s.replace(this.rules.inline.anyPunctuation, '$1'),
                    },
                    t[0],
                    this.lexer,
                )
            );
        }
    }
    reflink(e, t) {
        let n;
        if (
            (n = this.rules.inline.reflink.exec(e)) ||
            (n = this.rules.inline.nolink.exec(e))
        ) {
            const i = (n[2] || n[1]).replace(/\s+/g, ' '),
                s = t[i.toLowerCase()];
            if (!s) {
                const r = n[0].charAt(0);
                return { type: 'text', raw: r, text: r };
            }
            return Za(n, s, n[0], this.lexer);
        }
    }
    emStrong(e, t, n = '') {
        let i = this.rules.inline.emStrongLDelim.exec(e);
        if (!i || (i[3] && n.match(/[\p{L}\p{N}]/u))) return;
        if (
            !(i[1] || i[2] || '') ||
            !n ||
            this.rules.inline.punctuation.exec(n)
        ) {
            const r = [...i[0]].length - 1;
            let l,
                a,
                c = r,
                h = 0;
            const u =
                i[0][0] === '*' ?
                    this.rules.inline.emStrongRDelimAst
                :   this.rules.inline.emStrongRDelimUnd;
            for (
                u.lastIndex = 0, t = t.slice(-1 * e.length + r);
                (i = u.exec(t)) != null;

            ) {
                if (((l = i[1] || i[2] || i[3] || i[4] || i[5] || i[6]), !l))
                    continue;
                if (((a = [...l].length), i[3] || i[4])) {
                    c += a;
                    continue;
                } else if ((i[5] || i[6]) && r % 3 && !((r + a) % 3)) {
                    h += a;
                    continue;
                }
                if (((c -= a), c > 0)) continue;
                a = Math.min(a, a + c + h);
                const p = [...i[0]][0].length,
                    b = e.slice(0, r + i.index + p + a);
                if (Math.min(r, a) % 2) {
                    const k = b.slice(1, -1);
                    return {
                        type: 'em',
                        raw: b,
                        text: k,
                        tokens: this.lexer.inlineTokens(k),
                    };
                }
                const m = b.slice(2, -2);
                return {
                    type: 'strong',
                    raw: b,
                    text: m,
                    tokens: this.lexer.inlineTokens(m),
                };
            }
        }
    }
    codespan(e) {
        const t = this.rules.inline.code.exec(e);
        if (t) {
            let n = t[2].replace(/\n/g, ' ');
            const i = /[^ ]/.test(n),
                s = /^ /.test(n) && / $/.test(n);
            return (
                i && s && (n = n.substring(1, n.length - 1)),
                (n = Tn(n, !0)),
                { type: 'codespan', raw: t[0], text: n }
            );
        }
    }
    br(e) {
        const t = this.rules.inline.br.exec(e);
        if (t) return { type: 'br', raw: t[0] };
    }
    del(e) {
        const t = this.rules.inline.del.exec(e);
        if (t)
            return {
                type: 'del',
                raw: t[0],
                text: t[2],
                tokens: this.lexer.inlineTokens(t[2]),
            };
    }
    autolink(e) {
        const t = this.rules.inline.autolink.exec(e);
        if (t) {
            let n, i;
            return (
                t[2] === '@' ?
                    ((n = Tn(t[1])), (i = 'mailto:' + n))
                :   ((n = Tn(t[1])), (i = n)),
                {
                    type: 'link',
                    raw: t[0],
                    text: n,
                    href: i,
                    tokens: [{ type: 'text', raw: n, text: n }],
                }
            );
        }
    }
    url(e) {
        let t;
        if ((t = this.rules.inline.url.exec(e))) {
            let n, i;
            if (t[2] === '@') (n = Tn(t[0])), (i = 'mailto:' + n);
            else {
                let s;
                do
                    (s = t[0]),
                        (t[0] =
                            this.rules.inline._backpedal.exec(t[0])?.[0] ?? '');
                while (s !== t[0]);
                (n = Tn(t[0])),
                    t[1] === 'www.' ? (i = 'http://' + t[0]) : (i = t[0]);
            }
            return {
                type: 'link',
                raw: t[0],
                text: n,
                href: i,
                tokens: [{ type: 'text', raw: n, text: n }],
            };
        }
    }
    inlineText(e) {
        const t = this.rules.inline.text.exec(e);
        if (t) {
            let n;
            return (
                this.lexer.state.inRawBlock ? (n = t[0]) : (n = Tn(t[0])),
                { type: 'text', raw: t[0], text: n }
            );
        }
    }
}
const vb = /^(?: *(?:\n|$))+/,
    kb = /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
    _b =
        /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
    Fs = /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
    xb = /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
    lp = /(?:[*+-]|\d{1,9}[.)])/,
    ap = wt(
        /^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
    )
        .replace(/bull/g, lp)
        .replace(/blockCode/g, / {4}/)
        .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/)
        .replace(/blockquote/g, / {0,3}>/)
        .replace(/heading/g, / {0,3}#{1,6}/)
        .replace(/html/g, / {0,3}<[^\n>]+>\n/)
        .getRegex(),
    Yl =
        /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
    Cb = /^[^\n]+/,
    Kl = /(?!\s*\])(?:\\.|[^\[\]\\])+/,
    Eb = wt(
        /^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
    )
        .replace('label', Kl)
        .replace(
            'title',
            /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,
        )
        .getRegex(),
    Tb = wt(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/)
        .replace(/bull/g, lp)
        .getRegex(),
    Sr =
        'address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul',
    Xl = /<!--(?:-?>|[\s\S]*?(?:-->|$))/,
    Sb = wt(
        '^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))',
        'i',
    )
        .replace('comment', Xl)
        .replace('tag', Sr)
        .replace(
            'attribute',
            / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/,
        )
        .getRegex(),
    cp = wt(Yl)
        .replace('hr', Fs)
        .replace('heading', ' {0,3}#{1,6}(?:\\s|$)')
        .replace('|lheading', '')
        .replace('|table', '')
        .replace('blockquote', ' {0,3}>')
        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ')
        .replace(
            'html',
            '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)',
        )
        .replace('tag', Sr)
        .getRegex(),
    Bb = wt(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/)
        .replace('paragraph', cp)
        .getRegex(),
    Zl = {
        blockquote: Bb,
        code: kb,
        def: Eb,
        fences: _b,
        heading: xb,
        hr: Fs,
        html: Sb,
        lheading: ap,
        list: Tb,
        newline: vb,
        paragraph: cp,
        table: Bs,
        text: Cb,
    },
    Ja = wt(
        '^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)',
    )
        .replace('hr', Fs)
        .replace('heading', ' {0,3}#{1,6}(?:\\s|$)')
        .replace('blockquote', ' {0,3}>')
        .replace('code', ' {4}[^\\n]')
        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ')
        .replace(
            'html',
            '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)',
        )
        .replace('tag', Sr)
        .getRegex(),
    Ib = {
        ...Zl,
        table: Ja,
        paragraph: wt(Yl)
            .replace('hr', Fs)
            .replace('heading', ' {0,3}#{1,6}(?:\\s|$)')
            .replace('|lheading', '')
            .replace('table', Ja)
            .replace('blockquote', ' {0,3}>')
            .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
            .replace('list', ' {0,3}(?:[*+-]|1[.)]) ')
            .replace(
                'html',
                '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)',
            )
            .replace('tag', Sr)
            .getRegex(),
    },
    Lb = {
        ...Zl,
        html: wt(
            `^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`,
        )
            .replace('comment', Xl)
            .replace(
                /tag/g,
                '(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b',
            )
            .getRegex(),
        def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
        heading: /^(#{1,6})(.*)(?:\n+|$)/,
        fences: Bs,
        lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
        paragraph: wt(Yl)
            .replace('hr', Fs)
            .replace(
                'heading',
                ` *#{1,6} *[^
]`,
            )
            .replace('lheading', ap)
            .replace('|table', '')
            .replace('blockquote', ' {0,3}>')
            .replace('|fences', '')
            .replace('|list', '')
            .replace('|html', '')
            .replace('|tag', '')
            .getRegex(),
    },
    hp = /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
    Ab = /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
    dp = /^( {2,}|\\)\n(?!\s*$)/,
    Ob =
        /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
    Hs = '\\p{P}\\p{S}',
    Mb = wt(/^((?![*_])[\spunctuation])/, 'u')
        .replace(/punctuation/g, Hs)
        .getRegex(),
    Pb = /\[[^[\]]*?\]\([^\(\)]*?\)|`[^`]*?`|<[^<>]*?>/g,
    Nb = wt(
        /^(?:\*+(?:((?!\*)[punct])|[^\s*]))|^_+(?:((?!_)[punct])|([^\s_]))/,
        'u',
    )
        .replace(/punct/g, Hs)
        .getRegex(),
    Rb = wt(
        '^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])',
        'gu',
    )
        .replace(/punct/g, Hs)
        .getRegex(),
    Db = wt(
        '^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])',
        'gu',
    )
        .replace(/punct/g, Hs)
        .getRegex(),
    Fb = wt(/\\([punct])/, 'gu')
        .replace(/punct/g, Hs)
        .getRegex(),
    Hb = wt(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/)
        .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)
        .replace(
            'email',
            /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,
        )
        .getRegex(),
    zb = wt(Xl).replace('(?:-->|$)', '-->').getRegex(),
    Ub = wt(
        '^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>',
    )
        .replace('comment', zb)
        .replace(
            'attribute',
            /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,
        )
        .getRegex(),
    yr = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,
    jb = wt(/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/)
        .replace('label', yr)
        .replace('href', /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/)
        .replace(
            'title',
            /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,
        )
        .getRegex(),
    up = wt(/^!?\[(label)\]\[(ref)\]/)
        .replace('label', yr)
        .replace('ref', Kl)
        .getRegex(),
    pp = wt(/^!?\[(ref)\](?:\[\])?/)
        .replace('ref', Kl)
        .getRegex(),
    $b = wt('reflink|nolink(?!\\()', 'g')
        .replace('reflink', up)
        .replace('nolink', pp)
        .getRegex(),
    Jl = {
        _backpedal: Bs,
        anyPunctuation: Fb,
        autolink: Hb,
        blockSkip: Pb,
        br: dp,
        code: Ab,
        del: Bs,
        emStrongLDelim: Nb,
        emStrongRDelimAst: Rb,
        emStrongRDelimUnd: Db,
        escape: hp,
        link: jb,
        nolink: pp,
        punctuation: Mb,
        reflink: up,
        reflinkSearch: $b,
        tag: Ub,
        text: Ob,
        url: Bs,
    },
    Wb = {
        ...Jl,
        link: wt(/^!?\[(label)\]\((.*?)\)/)
            .replace('label', yr)
            .getRegex(),
        reflink: wt(/^!?\[(label)\]\s*\[([^\]]*)\]/)
            .replace('label', yr)
            .getRegex(),
    },
    ll = {
        ...Jl,
        escape: wt(hp).replace('])', '~|])').getRegex(),
        url: wt(
            /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
            'i',
        )
            .replace(
                'email',
                /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
            )
            .getRegex(),
        _backpedal:
            /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
        del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
        text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/,
    },
    Gb = {
        ...ll,
        br: wt(dp).replace('{2,}', '*').getRegex(),
        text: wt(ll.text)
            .replace('\\b_', '\\b_| {2,}\\n')
            .replace(/\{2,\}/g, '*')
            .getRegex(),
    },
    Gs = { normal: Zl, gfm: Ib, pedantic: Lb },
    ys = { normal: Jl, gfm: ll, breaks: Gb, pedantic: Wb };
class ro {
    tokens;
    options;
    state;
    tokenizer;
    inlineQueue;
    constructor(e) {
        (this.tokens = []),
            (this.tokens.links = Object.create(null)),
            (this.options = e || fi),
            (this.options.tokenizer = this.options.tokenizer || new wr()),
            (this.tokenizer = this.options.tokenizer),
            (this.tokenizer.options = this.options),
            (this.tokenizer.lexer = this),
            (this.inlineQueue = []),
            (this.state = { inLink: !1, inRawBlock: !1, top: !0 });
        const t = { block: Gs.normal, inline: ys.normal };
        this.options.pedantic ?
            ((t.block = Gs.pedantic), (t.inline = ys.pedantic))
        :   this.options.gfm &&
            ((t.block = Gs.gfm),
            this.options.breaks ? (t.inline = ys.breaks) : (t.inline = ys.gfm)),
            (this.tokenizer.rules = t);
    }
    static get rules() {
        return { block: Gs, inline: ys };
    }
    static lex(e, t) {
        return new ro(t).lex(e);
    }
    static lexInline(e, t) {
        return new ro(t).inlineTokens(e);
    }
    lex(e) {
        (e = e.replace(
            /\r\n|\r/g,
            `
`,
        )),
            this.blockTokens(e, this.tokens);
        for (let t = 0; t < this.inlineQueue.length; t++) {
            const n = this.inlineQueue[t];
            this.inlineTokens(n.src, n.tokens);
        }
        return (this.inlineQueue = []), this.tokens;
    }
    blockTokens(e, t = [], n = !1) {
        this.options.pedantic ?
            (e = e.replace(/\t/g, '    ').replace(/^ +$/gm, ''))
        :   (e = e.replace(
                /^( *)(\t+)/gm,
                (l, a, c) => a + '    '.repeat(c.length),
            ));
        let i, s, r;
        for (; e; )
            if (
                !(
                    this.options.extensions &&
                    this.options.extensions.block &&
                    this.options.extensions.block.some((l) =>
                        (i = l.call({ lexer: this }, e, t)) ?
                            ((e = e.substring(i.raw.length)), t.push(i), !0)
                        :   !1,
                    )
                )
            ) {
                if ((i = this.tokenizer.space(e))) {
                    (e = e.substring(i.raw.length)),
                        i.raw.length === 1 && t.length > 0 ?
                            (t[t.length - 1].raw += `
`)
                        :   t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.code(e))) {
                    (e = e.substring(i.raw.length)),
                        (s = t[t.length - 1]),
                        s && (s.type === 'paragraph' || s.type === 'text') ?
                            ((s.raw +=
                                `
` + i.raw),
                            (s.text +=
                                `
` + i.text),
                            (this.inlineQueue[this.inlineQueue.length - 1].src =
                                s.text))
                        :   t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.fences(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.heading(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.hr(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.blockquote(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.list(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.html(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.def(e))) {
                    (e = e.substring(i.raw.length)),
                        (s = t[t.length - 1]),
                        s && (s.type === 'paragraph' || s.type === 'text') ?
                            ((s.raw +=
                                `
` + i.raw),
                            (s.text +=
                                `
` + i.raw),
                            (this.inlineQueue[this.inlineQueue.length - 1].src =
                                s.text))
                        :   this.tokens.links[i.tag] ||
                            (this.tokens.links[i.tag] = {
                                href: i.href,
                                title: i.title,
                            });
                    continue;
                }
                if ((i = this.tokenizer.table(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if ((i = this.tokenizer.lheading(e))) {
                    (e = e.substring(i.raw.length)), t.push(i);
                    continue;
                }
                if (
                    ((r = e),
                    this.options.extensions &&
                        this.options.extensions.startBlock)
                ) {
                    let l = 1 / 0;
                    const a = e.slice(1);
                    let c;
                    this.options.extensions.startBlock.forEach((h) => {
                        (c = h.call({ lexer: this }, a)),
                            typeof c == 'number' &&
                                c >= 0 &&
                                (l = Math.min(l, c));
                    }),
                        l < 1 / 0 && l >= 0 && (r = e.substring(0, l + 1));
                }
                if (this.state.top && (i = this.tokenizer.paragraph(r))) {
                    (s = t[t.length - 1]),
                        n && s?.type === 'paragraph' ?
                            ((s.raw +=
                                `
` + i.raw),
                            (s.text +=
                                `
` + i.text),
                            this.inlineQueue.pop(),
                            (this.inlineQueue[this.inlineQueue.length - 1].src =
                                s.text))
                        :   t.push(i),
                        (n = r.length !== e.length),
                        (e = e.substring(i.raw.length));
                    continue;
                }
                if ((i = this.tokenizer.text(e))) {
                    (e = e.substring(i.raw.length)),
                        (s = t[t.length - 1]),
                        s && s.type === 'text' ?
                            ((s.raw +=
                                `
` + i.raw),
                            (s.text +=
                                `
` + i.text),
                            this.inlineQueue.pop(),
                            (this.inlineQueue[this.inlineQueue.length - 1].src =
                                s.text))
                        :   t.push(i);
                    continue;
                }
                if (e) {
                    const l = 'Infinite loop on byte: ' + e.charCodeAt(0);
                    if (this.options.silent) {
                        console.error(l);
                        break;
                    } else throw new Error(l);
                }
            }
        return (this.state.top = !0), t;
    }
    inline(e, t = []) {
        return this.inlineQueue.push({ src: e, tokens: t }), t;
    }
    inlineTokens(e, t = []) {
        let n,
            i,
            s,
            r = e,
            l,
            a,
            c;
        if (this.tokens.links) {
            const h = Object.keys(this.tokens.links);
            if (h.length > 0)
                for (
                    ;
                    (l = this.tokenizer.rules.inline.reflinkSearch.exec(r)) !=
                    null;

                )
                    h.includes(l[0].slice(l[0].lastIndexOf('[') + 1, -1)) &&
                        (r =
                            r.slice(0, l.index) +
                            '[' +
                            'a'.repeat(l[0].length - 2) +
                            ']' +
                            r.slice(
                                this.tokenizer.rules.inline.reflinkSearch
                                    .lastIndex,
                            ));
        }
        for (; (l = this.tokenizer.rules.inline.blockSkip.exec(r)) != null; )
            r =
                r.slice(0, l.index) +
                '[' +
                'a'.repeat(l[0].length - 2) +
                ']' +
                r.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
        for (
            ;
            (l = this.tokenizer.rules.inline.anyPunctuation.exec(r)) != null;

        )
            r =
                r.slice(0, l.index) +
                '++' +
                r.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);
        for (; e; )
            if (
                (a || (c = ''),
                (a = !1),
                !(
                    this.options.extensions &&
                    this.options.extensions.inline &&
                    this.options.extensions.inline.some((h) =>
                        (n = h.call({ lexer: this }, e, t)) ?
                            ((e = e.substring(n.raw.length)), t.push(n), !0)
                        :   !1,
                    )
                ))
            ) {
                if ((n = this.tokenizer.escape(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.tag(e))) {
                    (e = e.substring(n.raw.length)),
                        (i = t[t.length - 1]),
                        i && n.type === 'text' && i.type === 'text' ?
                            ((i.raw += n.raw), (i.text += n.text))
                        :   t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.link(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.reflink(e, this.tokens.links))) {
                    (e = e.substring(n.raw.length)),
                        (i = t[t.length - 1]),
                        i && n.type === 'text' && i.type === 'text' ?
                            ((i.raw += n.raw), (i.text += n.text))
                        :   t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.emStrong(e, r, c))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.codespan(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.br(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.del(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if ((n = this.tokenizer.autolink(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if (!this.state.inLink && (n = this.tokenizer.url(e))) {
                    (e = e.substring(n.raw.length)), t.push(n);
                    continue;
                }
                if (
                    ((s = e),
                    this.options.extensions &&
                        this.options.extensions.startInline)
                ) {
                    let h = 1 / 0;
                    const u = e.slice(1);
                    let p;
                    this.options.extensions.startInline.forEach((b) => {
                        (p = b.call({ lexer: this }, u)),
                            typeof p == 'number' &&
                                p >= 0 &&
                                (h = Math.min(h, p));
                    }),
                        h < 1 / 0 && h >= 0 && (s = e.substring(0, h + 1));
                }
                if ((n = this.tokenizer.inlineText(s))) {
                    (e = e.substring(n.raw.length)),
                        n.raw.slice(-1) !== '_' && (c = n.raw.slice(-1)),
                        (a = !0),
                        (i = t[t.length - 1]),
                        i && i.type === 'text' ?
                            ((i.raw += n.raw), (i.text += n.text))
                        :   t.push(n);
                    continue;
                }
                if (e) {
                    const h = 'Infinite loop on byte: ' + e.charCodeAt(0);
                    if (this.options.silent) {
                        console.error(h);
                        break;
                    } else throw new Error(h);
                }
            }
        return t;
    }
}
class vr {
    options;
    parser;
    constructor(e) {
        this.options = e || fi;
    }
    space(e) {
        return '';
    }
    code({ text: e, lang: t, escaped: n }) {
        const i = (t || '').match(/^\S*/)?.[0],
            s =
                e.replace(/\n$/, '') +
                `
`;
        return i ?
                '<pre><code class="language-' +
                    Tn(i) +
                    '">' +
                    (n ? s : Tn(s, !0)) +
                    `</code></pre>
`
            :   '<pre><code>' +
                    (n ? s : Tn(s, !0)) +
                    `</code></pre>
`;
    }
    blockquote({ tokens: e }) {
        return `<blockquote>
${this.parser.parse(e)}</blockquote>
`;
    }
    html({ text: e }) {
        return e;
    }
    heading({ tokens: e, depth: t }) {
        return `<h${t}>${this.parser.parseInline(e)}</h${t}>
`;
    }
    hr(e) {
        return `<hr>
`;
    }
    list(e) {
        const t = e.ordered,
            n = e.start;
        let i = '';
        for (let l = 0; l < e.items.length; l++) {
            const a = e.items[l];
            i += this.listitem(a);
        }
        const s = t ? 'ol' : 'ul',
            r = t && n !== 1 ? ' start="' + n + '"' : '';
        return (
            '<' +
            s +
            r +
            `>
` +
            i +
            '</' +
            s +
            `>
`
        );
    }
    listitem(e) {
        let t = '';
        if (e.task) {
            const n = this.checkbox({ checked: !!e.checked });
            e.loose ?
                e.tokens.length > 0 && e.tokens[0].type === 'paragraph' ?
                    ((e.tokens[0].text = n + ' ' + e.tokens[0].text),
                    e.tokens[0].tokens &&
                        e.tokens[0].tokens.length > 0 &&
                        e.tokens[0].tokens[0].type === 'text' &&
                        (e.tokens[0].tokens[0].text =
                            n + ' ' + e.tokens[0].tokens[0].text))
                :   e.tokens.unshift({
                        type: 'text',
                        raw: n + ' ',
                        text: n + ' ',
                    })
            :   (t += n + ' ');
        }
        return (
            (t += this.parser.parse(e.tokens, !!e.loose)),
            `<li>${t}</li>
`
        );
    }
    checkbox({ checked: e }) {
        return (
            '<input ' +
            (e ? 'checked="" ' : '') +
            'disabled="" type="checkbox">'
        );
    }
    paragraph({ tokens: e }) {
        return `<p>${this.parser.parseInline(e)}</p>
`;
    }
    table(e) {
        let t = '',
            n = '';
        for (let s = 0; s < e.header.length; s++)
            n += this.tablecell(e.header[s]);
        t += this.tablerow({ text: n });
        let i = '';
        for (let s = 0; s < e.rows.length; s++) {
            const r = e.rows[s];
            n = '';
            for (let l = 0; l < r.length; l++) n += this.tablecell(r[l]);
            i += this.tablerow({ text: n });
        }
        return (
            i && (i = `<tbody>${i}</tbody>`),
            `<table>
<thead>
` +
                t +
                `</thead>
` +
                i +
                `</table>
`
        );
    }
    tablerow({ text: e }) {
        return `<tr>
${e}</tr>
`;
    }
    tablecell(e) {
        const t = this.parser.parseInline(e.tokens),
            n = e.header ? 'th' : 'td';
        return (
            (e.align ? `<${n} align="${e.align}">` : `<${n}>`) +
            t +
            `</${n}>
`
        );
    }
    strong({ tokens: e }) {
        return `<strong>${this.parser.parseInline(e)}</strong>`;
    }
    em({ tokens: e }) {
        return `<em>${this.parser.parseInline(e)}</em>`;
    }
    codespan({ text: e }) {
        return `<code>${e}</code>`;
    }
    br(e) {
        return '<br>';
    }
    del({ tokens: e }) {
        return `<del>${this.parser.parseInline(e)}</del>`;
    }
    link({ href: e, title: t, tokens: n }) {
        const i = this.parser.parseInline(n),
            s = Ka(e);
        if (s === null) return i;
        e = s;
        let r = '<a href="' + e + '"';
        return t && (r += ' title="' + t + '"'), (r += '>' + i + '</a>'), r;
    }
    image({ href: e, title: t, text: n }) {
        const i = Ka(e);
        if (i === null) return n;
        e = i;
        let s = `<img src="${e}" alt="${n}"`;
        return t && (s += ` title="${t}"`), (s += '>'), s;
    }
    text(e) {
        return 'tokens' in e && e.tokens ?
                this.parser.parseInline(e.tokens)
            :   e.text;
    }
}
class Ql {
    strong({ text: e }) {
        return e;
    }
    em({ text: e }) {
        return e;
    }
    codespan({ text: e }) {
        return e;
    }
    del({ text: e }) {
        return e;
    }
    html({ text: e }) {
        return e;
    }
    text({ text: e }) {
        return e;
    }
    link({ text: e }) {
        return '' + e;
    }
    image({ text: e }) {
        return '' + e;
    }
    br() {
        return '';
    }
}
class lo {
    options;
    renderer;
    textRenderer;
    constructor(e) {
        (this.options = e || fi),
            (this.options.renderer = this.options.renderer || new vr()),
            (this.renderer = this.options.renderer),
            (this.renderer.options = this.options),
            (this.renderer.parser = this),
            (this.textRenderer = new Ql());
    }
    static parse(e, t) {
        return new lo(t).parse(e);
    }
    static parseInline(e, t) {
        return new lo(t).parseInline(e);
    }
    parse(e, t = !0) {
        let n = '';
        for (let i = 0; i < e.length; i++) {
            const s = e[i];
            if (
                this.options.extensions &&
                this.options.extensions.renderers &&
                this.options.extensions.renderers[s.type]
            ) {
                const l = s,
                    a = this.options.extensions.renderers[l.type].call(
                        { parser: this },
                        l,
                    );
                if (
                    a !== !1 ||
                    ![
                        'space',
                        'hr',
                        'heading',
                        'code',
                        'table',
                        'blockquote',
                        'list',
                        'html',
                        'paragraph',
                        'text',
                    ].includes(l.type)
                ) {
                    n += a || '';
                    continue;
                }
            }
            const r = s;
            switch (r.type) {
                case 'space': {
                    n += this.renderer.space(r);
                    continue;
                }
                case 'hr': {
                    n += this.renderer.hr(r);
                    continue;
                }
                case 'heading': {
                    n += this.renderer.heading(r);
                    continue;
                }
                case 'code': {
                    n += this.renderer.code(r);
                    continue;
                }
                case 'table': {
                    n += this.renderer.table(r);
                    continue;
                }
                case 'blockquote': {
                    n += this.renderer.blockquote(r);
                    continue;
                }
                case 'list': {
                    n += this.renderer.list(r);
                    continue;
                }
                case 'html': {
                    n += this.renderer.html(r);
                    continue;
                }
                case 'paragraph': {
                    n += this.renderer.paragraph(r);
                    continue;
                }
                case 'text': {
                    let l = r,
                        a = this.renderer.text(l);
                    for (; i + 1 < e.length && e[i + 1].type === 'text'; )
                        (l = e[++i]),
                            (a +=
                                `
` + this.renderer.text(l));
                    t ?
                        (n += this.renderer.paragraph({
                            type: 'paragraph',
                            raw: a,
                            text: a,
                            tokens: [{ type: 'text', raw: a, text: a }],
                        }))
                    :   (n += a);
                    continue;
                }
                default: {
                    const l = 'Token with "' + r.type + '" type was not found.';
                    if (this.options.silent) return console.error(l), '';
                    throw new Error(l);
                }
            }
        }
        return n;
    }
    parseInline(e, t) {
        t = t || this.renderer;
        let n = '';
        for (let i = 0; i < e.length; i++) {
            const s = e[i];
            if (
                this.options.extensions &&
                this.options.extensions.renderers &&
                this.options.extensions.renderers[s.type]
            ) {
                const l = this.options.extensions.renderers[s.type].call(
                    { parser: this },
                    s,
                );
                if (
                    l !== !1 ||
                    ![
                        'escape',
                        'html',
                        'link',
                        'image',
                        'strong',
                        'em',
                        'codespan',
                        'br',
                        'del',
                        'text',
                    ].includes(s.type)
                ) {
                    n += l || '';
                    continue;
                }
            }
            const r = s;
            switch (r.type) {
                case 'escape': {
                    n += t.text(r);
                    break;
                }
                case 'html': {
                    n += t.html(r);
                    break;
                }
                case 'link': {
                    n += t.link(r);
                    break;
                }
                case 'image': {
                    n += t.image(r);
                    break;
                }
                case 'strong': {
                    n += t.strong(r);
                    break;
                }
                case 'em': {
                    n += t.em(r);
                    break;
                }
                case 'codespan': {
                    n += t.codespan(r);
                    break;
                }
                case 'br': {
                    n += t.br(r);
                    break;
                }
                case 'del': {
                    n += t.del(r);
                    break;
                }
                case 'text': {
                    n += t.text(r);
                    break;
                }
                default: {
                    const l = 'Token with "' + r.type + '" type was not found.';
                    if (this.options.silent) return console.error(l), '';
                    throw new Error(l);
                }
            }
        }
        return n;
    }
}
class tr {
    options;
    constructor(e) {
        this.options = e || fi;
    }
    static passThroughHooks = new Set([
        'preprocess',
        'postprocess',
        'processAllTokens',
    ]);
    preprocess(e) {
        return e;
    }
    postprocess(e) {
        return e;
    }
    processAllTokens(e) {
        return e;
    }
}
class qb {
    defaults = Vl();
    options = this.setOptions;
    parse = this.parseMarkdown(ro.lex, lo.parse);
    parseInline = this.parseMarkdown(ro.lexInline, lo.parseInline);
    Parser = lo;
    Renderer = vr;
    TextRenderer = Ql;
    Lexer = ro;
    Tokenizer = wr;
    Hooks = tr;
    constructor(...e) {
        this.use(...e);
    }
    walkTokens(e, t) {
        let n = [];
        for (const i of e)
            switch (((n = n.concat(t.call(this, i))), i.type)) {
                case 'table': {
                    const s = i;
                    for (const r of s.header)
                        n = n.concat(this.walkTokens(r.tokens, t));
                    for (const r of s.rows)
                        for (const l of r)
                            n = n.concat(this.walkTokens(l.tokens, t));
                    break;
                }
                case 'list': {
                    const s = i;
                    n = n.concat(this.walkTokens(s.items, t));
                    break;
                }
                default: {
                    const s = i;
                    this.defaults.extensions?.childTokens?.[s.type] ?
                        this.defaults.extensions.childTokens[s.type].forEach(
                            (r) => {
                                const l = s[r].flat(1 / 0);
                                n = n.concat(this.walkTokens(l, t));
                            },
                        )
                    :   s.tokens &&
                        (n = n.concat(this.walkTokens(s.tokens, t)));
                }
            }
        return n;
    }
    use(...e) {
        const t = this.defaults.extensions || {
            renderers: {},
            childTokens: {},
        };
        return (
            e.forEach((n) => {
                const i = { ...n };
                if (
                    ((i.async = this.defaults.async || i.async || !1),
                    n.extensions &&
                        (n.extensions.forEach((s) => {
                            if (!s.name)
                                throw new Error('extension name required');
                            if ('renderer' in s) {
                                const r = t.renderers[s.name];
                                r ?
                                    (t.renderers[s.name] = function (...l) {
                                        let a = s.renderer.apply(this, l);
                                        return (
                                            a === !1 && (a = r.apply(this, l)),
                                            a
                                        );
                                    })
                                :   (t.renderers[s.name] = s.renderer);
                            }
                            if ('tokenizer' in s) {
                                if (
                                    !s.level ||
                                    (s.level !== 'block' &&
                                        s.level !== 'inline')
                                )
                                    throw new Error(
                                        "extension level must be 'block' or 'inline'",
                                    );
                                const r = t[s.level];
                                r ?
                                    r.unshift(s.tokenizer)
                                :   (t[s.level] = [s.tokenizer]),
                                    s.start &&
                                        (s.level === 'block' ?
                                            t.startBlock ?
                                                t.startBlock.push(s.start)
                                            :   (t.startBlock = [s.start])
                                        :   s.level === 'inline' &&
                                            (t.startInline ?
                                                t.startInline.push(s.start)
                                            :   (t.startInline = [s.start])));
                            }
                            'childTokens' in s &&
                                s.childTokens &&
                                (t.childTokens[s.name] = s.childTokens);
                        }),
                        (i.extensions = t)),
                    n.renderer)
                ) {
                    const s = this.defaults.renderer || new vr(this.defaults);
                    for (const r in n.renderer) {
                        if (!(r in s))
                            throw new Error(`renderer '${r}' does not exist`);
                        if (['options', 'parser'].includes(r)) continue;
                        const l = r,
                            a = n.renderer[l],
                            c = s[l];
                        s[l] = (...h) => {
                            let u = a.apply(s, h);
                            return u === !1 && (u = c.apply(s, h)), u || '';
                        };
                    }
                    i.renderer = s;
                }
                if (n.tokenizer) {
                    const s = this.defaults.tokenizer || new wr(this.defaults);
                    for (const r in n.tokenizer) {
                        if (!(r in s))
                            throw new Error(`tokenizer '${r}' does not exist`);
                        if (['options', 'rules', 'lexer'].includes(r)) continue;
                        const l = r,
                            a = n.tokenizer[l],
                            c = s[l];
                        s[l] = (...h) => {
                            let u = a.apply(s, h);
                            return u === !1 && (u = c.apply(s, h)), u;
                        };
                    }
                    i.tokenizer = s;
                }
                if (n.hooks) {
                    const s = this.defaults.hooks || new tr();
                    for (const r in n.hooks) {
                        if (!(r in s))
                            throw new Error(`hook '${r}' does not exist`);
                        if (r === 'options') continue;
                        const l = r,
                            a = n.hooks[l],
                            c = s[l];
                        tr.passThroughHooks.has(r) ?
                            (s[l] = (h) => {
                                if (this.defaults.async)
                                    return Promise.resolve(a.call(s, h)).then(
                                        (p) => c.call(s, p),
                                    );
                                const u = a.call(s, h);
                                return c.call(s, u);
                            })
                        :   (s[l] = (...h) => {
                                let u = a.apply(s, h);
                                return u === !1 && (u = c.apply(s, h)), u;
                            });
                    }
                    i.hooks = s;
                }
                if (n.walkTokens) {
                    const s = this.defaults.walkTokens,
                        r = n.walkTokens;
                    i.walkTokens = function (l) {
                        let a = [];
                        return (
                            a.push(r.call(this, l)),
                            s && (a = a.concat(s.call(this, l))),
                            a
                        );
                    };
                }
                this.defaults = { ...this.defaults, ...i };
            }),
            this
        );
    }
    setOptions(e) {
        return (this.defaults = { ...this.defaults, ...e }), this;
    }
    lexer(e, t) {
        return ro.lex(e, t ?? this.defaults);
    }
    parser(e, t) {
        return lo.parse(e, t ?? this.defaults);
    }
    parseMarkdown(e, t) {
        return (i, s) => {
            const r = { ...s },
                l = { ...this.defaults, ...r },
                a = this.onError(!!l.silent, !!l.async);
            if (this.defaults.async === !0 && r.async === !1)
                return a(
                    new Error(
                        'marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.',
                    ),
                );
            if (typeof i > 'u' || i === null)
                return a(
                    new Error('marked(): input parameter is undefined or null'),
                );
            if (typeof i != 'string')
                return a(
                    new Error(
                        'marked(): input parameter is of type ' +
                            Object.prototype.toString.call(i) +
                            ', string expected',
                    ),
                );
            if ((l.hooks && (l.hooks.options = l), l.async))
                return Promise.resolve(l.hooks ? l.hooks.preprocess(i) : i)
                    .then((c) => e(c, l))
                    .then((c) => (l.hooks ? l.hooks.processAllTokens(c) : c))
                    .then((c) =>
                        l.walkTokens ?
                            Promise.all(this.walkTokens(c, l.walkTokens)).then(
                                () => c,
                            )
                        :   c,
                    )
                    .then((c) => t(c, l))
                    .then((c) => (l.hooks ? l.hooks.postprocess(c) : c))
                    .catch(a);
            try {
                l.hooks && (i = l.hooks.preprocess(i));
                let c = e(i, l);
                l.hooks && (c = l.hooks.processAllTokens(c)),
                    l.walkTokens && this.walkTokens(c, l.walkTokens);
                let h = t(c, l);
                return l.hooks && (h = l.hooks.postprocess(h)), h;
            } catch (c) {
                return a(c);
            }
        };
    }
    onError(e, t) {
        return (n) => {
            if (
                ((n.message += `
Please report this to https://github.com/markedjs/marked.`),
                e)
            ) {
                const i =
                    '<p>An error occurred:</p><pre>' +
                    Tn(n.message + '', !0) +
                    '</pre>';
                return t ? Promise.resolve(i) : i;
            }
            if (t) return Promise.reject(n);
            throw n;
        };
    }
}
const ui = new qb();
function mt(o, e) {
    return ui.parse(o, e);
}
mt.options = mt.setOptions = function (o) {
    return ui.setOptions(o), (mt.defaults = ui.defaults), ip(mt.defaults), mt;
};
mt.getDefaults = Vl;
mt.defaults = fi;
mt.use = function (...o) {
    return ui.use(...o), (mt.defaults = ui.defaults), ip(mt.defaults), mt;
};
mt.walkTokens = function (o, e) {
    return ui.walkTokens(o, e);
};
mt.parseInline = ui.parseInline;
mt.Parser = lo;
mt.parser = lo.parse;
mt.Renderer = vr;
mt.TextRenderer = Ql;
mt.Lexer = ro;
mt.lexer = ro.lex;
mt.Tokenizer = wr;
mt.Hooks = tr;
mt.parse = mt;
mt.options;
mt.setOptions;
mt.use;
mt.walkTokens;
mt.parseInline;
lo.parse;
ro.lex;
function Co(o) {
    return (
        (o = o.replaceAll(/__(.+)__/g, '<u>$1</u>')),
        (o = mt.parse(o, { async: !1, breaks: !0 })),
        o
    );
}
(function () {
    try {
        if (typeof document < 'u') {
            var o = document.createElement('style');
            o.appendChild(
                document.createTextNode(
                    '.ce-header{padding:.6em 0 3px;margin:0;line-height:1.25em;outline:none}.ce-header p,.ce-header div{padding:0!important;margin:0!important}',
                ),
            ),
                document.head.appendChild(o);
        }
    } catch (e) {
        console.error('vite-plugin-css-injected-by-js', e);
    }
})();
const Vb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 17V10.2135C19 10.1287 18.9011 10.0824 18.836 10.1367L16 12.5"/></svg>',
    Yb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10 19 9.5 19 12C19 13.9771 16.0684 13.9997 16.0012 16.8981C15.9999 16.9533 16.0448 17 16.1 17L19.3 17"/></svg>',
    Kb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10.5 16.8323 10 17.6 10C18.3677 10 19.5 10.311 19.5 11.5C19.5 12.5315 18.7474 12.9022 18.548 12.9823C18.5378 12.9864 18.5395 13.0047 18.5503 13.0063C18.8115 13.0456 20 13.3065 20 14.8C20 16 19.5 17 17.8 17C17.8 17 16 17 16 16.3"/></svg>',
    Xb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 10L15.2834 14.8511C15.246 14.9178 15.294 15 15.3704 15C16.8489 15 18.7561 15 20.2 15M19 17C19 15.7187 19 14.8813 19 13.6"/></svg>',
    Zb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 15.9C16 15.9 16.3768 17 17.8 17C19.5 17 20 15.6199 20 14.7C20 12.7323 17.6745 12.0486 16.1635 12.9894C16.094 13.0327 16 12.9846 16 12.9027V10.1C16 10.0448 16.0448 10 16.1 10H19.8"/></svg>',
    Jb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19.5 10C16.5 10.5 16 13.3285 16 15M16 15V15C16 16.1046 16.8954 17 18 17H18.3246C19.3251 17 20.3191 16.3492 20.2522 15.3509C20.0612 12.4958 16 12.6611 16 15Z"/></svg>',
    Qb =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 7L9 12M9 17V12M9 12L15 12M15 7V12M15 17L15 12"/></svg>';
/**
 * Header block for the Editor.js.
 *
 * @author CodeX (team@ifmo.su)
 * @copyright CodeX 2018
 * @license MIT
 * @version 2.0.0
 */ let al = class {
    constructor({ data: e, config: t, api: n, readOnly: i }) {
        (this.api = n),
            (this.readOnly = i),
            (this._settings = t),
            (this._data = this.normalizeData(e)),
            (this._element = this.getTag());
    }
    get _CSS() {
        return { block: this.api.styles.block, wrapper: 'ce-header' };
    }
    isHeaderData(e) {
        return e.text !== void 0;
    }
    normalizeData(e) {
        const t = { text: '', level: this.defaultLevel.number };
        return (
            this.isHeaderData(e) &&
                ((t.text = e.text || ''),
                e.level !== void 0 &&
                    !isNaN(parseInt(e.level.toString())) &&
                    (t.level = parseInt(e.level.toString()))),
            t
        );
    }
    render() {
        return this._element;
    }
    renderSettings() {
        return this.levels.map((e) => ({
            icon: e.svg,
            label: this.api.i18n.t(`Heading ${e.number}`),
            onActivate: () => this.setLevel(e.number),
            closeOnActivate: !0,
            isActive: this.currentLevel.number === e.number,
            render: () => document.createElement('div'),
        }));
    }
    setLevel(e) {
        this.data = { level: e, text: this.data.text };
    }
    merge(e) {
        const t = { text: this.data.text + e.text, level: this.data.level };
        this.data = t;
    }
    validate(e) {
        return e.text.trim() !== '';
    }
    save(e) {
        return { text: e.innerHTML, level: this.currentLevel.number };
    }
    static get conversionConfig() {
        return { export: 'text', import: 'text' };
    }
    static get sanitize() {
        return { level: !1, text: {} };
    }
    static get isReadOnlySupported() {
        return !0;
    }
    get data() {
        return (
            (this._data.text = this._element.innerHTML),
            (this._data.level = this.currentLevel.number),
            this._data
        );
    }
    set data(e) {
        if (
            ((this._data = this.normalizeData(e)),
            e.level !== void 0 && this._element.parentNode)
        ) {
            const t = this.getTag();
            (t.innerHTML = this._element.innerHTML),
                this._element.parentNode.replaceChild(t, this._element),
                (this._element = t);
        }
        e.text !== void 0 && (this._element.innerHTML = this._data.text || '');
    }
    getTag() {
        const e = document.createElement(this.currentLevel.tag);
        return (
            (e.innerHTML = this._data.text || ''),
            e.classList.add(this._CSS.wrapper),
            (e.contentEditable = this.readOnly ? 'false' : 'true'),
            (e.dataset.placeholder = this.api.i18n.t(
                this._settings.placeholder || '',
            )),
            e
        );
    }
    get currentLevel() {
        let e = this.levels.find((t) => t.number === this._data.level);
        return e || (e = this.defaultLevel), e;
    }
    get defaultLevel() {
        if (this._settings.defaultLevel) {
            const e = this.levels.find(
                (t) => t.number === this._settings.defaultLevel,
            );
            if (e) return e;
            console.warn(
                "(ง'̀-'́)ง Heading Tool: the default level specified was not found in available levels",
            );
        }
        return this.levels[1];
    }
    get levels() {
        const e = [
            { number: 1, tag: 'H1', svg: Vb },
            { number: 2, tag: 'H2', svg: Yb },
            { number: 3, tag: 'H3', svg: Kb },
            { number: 4, tag: 'H4', svg: Xb },
            { number: 5, tag: 'H5', svg: Zb },
            { number: 6, tag: 'H6', svg: Jb },
        ];
        return this._settings.levels ?
                e.filter((t) => this._settings.levels.includes(t.number))
            :   e;
    }
    onPaste(e) {
        const t = e.detail;
        if ('data' in t) {
            const n = t.data;
            let i = this.defaultLevel.number;
            switch (n.tagName) {
                case 'H1':
                    i = 1;
                    break;
                case 'H2':
                    i = 2;
                    break;
                case 'H3':
                    i = 3;
                    break;
                case 'H4':
                    i = 4;
                    break;
                case 'H5':
                    i = 5;
                    break;
                case 'H6':
                    i = 6;
                    break;
            }
            this._settings.levels &&
                (i = this._settings.levels.reduce((s, r) =>
                    Math.abs(r - i) < Math.abs(s - i) ? r : s,
                )),
                (this.data = { level: i, text: n.innerHTML });
        }
    }
    static get pasteConfig() {
        return { tags: ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'] };
    }
    static get toolbox() {
        return { icon: Qb, title: 'Heading' };
    }
};
(function () {
    try {
        if (typeof document < 'u') {
            var o = document.createElement('style');
            o.appendChild(
                document.createTextNode(
                    '.ce-paragraph{line-height:1.6em;outline:none}.ce-block:only-of-type .ce-paragraph[data-placeholder-active]:empty:before,.ce-block:only-of-type .ce-paragraph[data-placeholder-active][data-empty=true]:before{content:attr(data-placeholder-active)}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}',
                ),
            ),
                document.head.appendChild(o);
        }
    } catch (e) {
        console.error('vite-plugin-css-injected-by-js', e);
    }
})();
const e1 =
    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>';
function t1(o) {
    const e = document.createElement('div');
    e.innerHTML = o.trim();
    const t = document.createDocumentFragment();
    return t.append(...Array.from(e.childNodes)), t;
}
/**
 * Base Paragraph Block for the Editor.js.
 * Represents a regular text block
 *
 * @author CodeX (team@codex.so)
 * @copyright CodeX 2018
 * @license The MIT License (MIT)
 */ class ea {
    static get DEFAULT_PLACEHOLDER() {
        return '';
    }
    constructor({ data: e, config: t, api: n, readOnly: i }) {
        (this.api = n),
            (this.readOnly = i),
            (this._CSS = {
                block: this.api.styles.block,
                wrapper: 'ce-paragraph',
            }),
            this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)),
            (this._placeholder =
                t.placeholder ? t.placeholder : ea.DEFAULT_PLACEHOLDER),
            (this._data = e ?? {}),
            (this._element = null),
            (this._preserveBlank = t.preserveBlank ?? !1);
    }
    onKeyUp(e) {
        if ((e.code !== 'Backspace' && e.code !== 'Delete') || !this._element)
            return;
        const { textContent: t } = this._element;
        t === '' && (this._element.innerHTML = '');
    }
    drawView() {
        const e = document.createElement('DIV');
        return (
            e.classList.add(this._CSS.wrapper, this._CSS.block),
            (e.contentEditable = 'false'),
            (e.dataset.placeholderActive = this.api.i18n.t(this._placeholder)),
            this._data.text && (e.innerHTML = this._data.text),
            this.readOnly ||
                ((e.contentEditable = 'true'),
                e.addEventListener('keyup', this.onKeyUp)),
            e
        );
    }
    render() {
        return (this._element = this.drawView()), this._element;
    }
    merge(e) {
        if (!this._element) return;
        this._data.text += e.text;
        const t = t1(e.text);
        this._element.appendChild(t), this._element.normalize();
    }
    validate(e) {
        return !(e.text.trim() === '' && !this._preserveBlank);
    }
    save(e) {
        return { text: e.innerHTML };
    }
    onPaste(e) {
        const t = { text: e.detail.data.innerHTML };
        (this._data = t),
            window.requestAnimationFrame(() => {
                this._element &&
                    (this._element.innerHTML = this._data.text || '');
            });
    }
    static get conversionConfig() {
        return { export: 'text', import: 'text' };
    }
    static get sanitize() {
        return { text: { br: !0 } };
    }
    static get isReadOnlySupported() {
        return !0;
    }
    static get pasteConfig() {
        return { tags: ['P'] };
    }
    static get toolbox() {
        return { icon: e1, title: 'Text' };
    }
}
(function () {
    var o;
    try {
        if (typeof document < 'u') {
            var e = document.createElement('style');
            (e.nonce =
                (
                    (o = document.head.querySelector(
                        'meta[property=csp-nonce]',
                    )) == null
                ) ?
                    void 0
                :   o.content),
                e.appendChild(
                    document.createTextNode(
                        '.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;position:relative;height:100%;width:100%;margin-top:var(--toolbox-icon-size);box-sizing:border-box;display:grid;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table{position:relative;width:100%;height:100%;display:grid;font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));height:100%;left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{width:100%;height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border)}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}',
                    ),
                ),
                document.head.appendChild(e);
        }
    } catch (t) {
        console.error('vite-plugin-css-injected-by-js', t);
    }
})();
function Bn(o, e, t = {}) {
    const n = document.createElement(o);
    Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
    for (const i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    return n;
}
function Qa(o) {
    const e = o.getBoundingClientRect();
    return {
        y1: Math.floor(e.top + window.pageYOffset),
        x1: Math.floor(e.left + window.pageXOffset),
        x2: Math.floor(e.right + window.pageXOffset),
        y2: Math.floor(e.bottom + window.pageYOffset),
    };
}
function ec(o, e) {
    const t = Qa(o),
        n = Qa(e);
    return {
        fromTopBorder: n.y1 - t.y1,
        fromLeftBorder: n.x1 - t.x1,
        fromRightBorder: t.x2 - n.x2,
        fromBottomBorder: t.y2 - n.y2,
    };
}
function n1(o, e) {
    const t = o.getBoundingClientRect(),
        { width: n, height: i, x: s, y: r } = t,
        { clientX: l, clientY: a } = e;
    return { width: n, height: i, x: l - s, y: a - r };
}
function tc(o, e) {
    return e.parentNode.insertBefore(o, e);
}
function nc(o, e = !0) {
    const t = document.createRange(),
        n = window.getSelection();
    t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
class wn {
    constructor({ items: e }) {
        (this.items = e), (this.wrapper = void 0), (this.itemEls = []);
    }
    static get CSS() {
        return {
            popover: 'tc-popover',
            popoverOpened: 'tc-popover--opened',
            item: 'tc-popover__item',
            itemHidden: 'tc-popover__item--hidden',
            itemConfirmState: 'tc-popover__item--confirm',
            itemIcon: 'tc-popover__item-icon',
            itemLabel: 'tc-popover__item-label',
        };
    }
    render() {
        return (
            (this.wrapper = Bn('div', wn.CSS.popover)),
            this.items.forEach((e, t) => {
                const n = Bn('div', wn.CSS.item),
                    i = Bn('div', wn.CSS.itemIcon, { innerHTML: e.icon }),
                    s = Bn('div', wn.CSS.itemLabel, { textContent: e.label });
                (n.dataset.index = t),
                    n.appendChild(i),
                    n.appendChild(s),
                    this.wrapper.appendChild(n),
                    this.itemEls.push(n);
            }),
            this.wrapper.addEventListener('click', (e) => {
                this.popoverClicked(e);
            }),
            this.wrapper
        );
    }
    popoverClicked(e) {
        const t = e.target.closest(`.${wn.CSS.item}`);
        if (!t) return;
        const n = t.dataset.index,
            i = this.items[n];
        if (i.confirmationRequired && !this.hasConfirmationState(t)) {
            this.setConfirmationState(t);
            return;
        }
        i.onClick();
    }
    setConfirmationState(e) {
        e.classList.add(wn.CSS.itemConfirmState);
    }
    clearConfirmationState(e) {
        e.classList.remove(wn.CSS.itemConfirmState);
    }
    hasConfirmationState(e) {
        return e.classList.contains(wn.CSS.itemConfirmState);
    }
    get opened() {
        return this.wrapper.classList.contains(wn.CSS.popoverOpened);
    }
    open() {
        this.items.forEach((e, t) => {
            typeof e.hideIf == 'function' &&
                this.itemEls[t].classList.toggle(wn.CSS.itemHidden, e.hideIf());
        }),
            this.wrapper.classList.add(wn.CSS.popoverOpened);
    }
    close() {
        this.wrapper.classList.remove(wn.CSS.popoverOpened),
            this.itemEls.forEach((e) => {
                this.clearConfirmationState(e);
            });
    }
}
const oc =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>',
    o1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>',
    i1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>',
    s1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>',
    r1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>',
    l1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>',
    ic =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>',
    a1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>',
    c1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>',
    h1 =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
class Ro {
    constructor({
        api: e,
        items: t,
        onOpen: n,
        onClose: i,
        cssModifier: s = '',
    }) {
        (this.api = e),
            (this.items = t),
            (this.onOpen = n),
            (this.onClose = i),
            (this.cssModifier = s),
            (this.popover = null),
            (this.wrapper = this.createToolbox());
    }
    static get CSS() {
        return {
            toolbox: 'tc-toolbox',
            toolboxShowed: 'tc-toolbox--showed',
            toggler: 'tc-toolbox__toggler',
        };
    }
    get element() {
        return this.wrapper;
    }
    createToolbox() {
        const e = Bn('div', [
            Ro.CSS.toolbox,
            this.cssModifier ? `${Ro.CSS.toolbox}--${this.cssModifier}` : '',
        ]);
        e.dataset.mutationFree = 'true';
        const t = this.createPopover(),
            n = this.createToggler();
        return e.appendChild(n), e.appendChild(t), e;
    }
    createToggler() {
        const e = Bn('div', Ro.CSS.toggler, { innerHTML: l1 });
        return (
            e.addEventListener('click', () => {
                this.togglerClicked();
            }),
            e
        );
    }
    createPopover() {
        return (
            (this.popover = new wn({ items: this.items })),
            this.popover.render()
        );
    }
    togglerClicked() {
        this.popover.opened ?
            (this.popover.close(), this.onClose())
        :   (this.popover.open(), this.onOpen());
    }
    show(e) {
        const t = e();
        Object.entries(t).forEach(([n, i]) => {
            this.wrapper.style[n] = i;
        }),
            this.wrapper.classList.add(Ro.CSS.toolboxShowed);
    }
    hide() {
        this.popover.close(),
            this.wrapper.classList.remove(Ro.CSS.toolboxShowed);
    }
}
function d1(o, e) {
    let t = 0;
    return function (...n) {
        const i = new Date().getTime();
        if (!(i - t < o)) return (t = i), e(...n);
    };
}
const ft = {
    wrapper: 'tc-wrap',
    wrapperReadOnly: 'tc-wrap--readonly',
    table: 'tc-table',
    row: 'tc-row',
    withHeadings: 'tc-table--heading',
    rowSelected: 'tc-row--selected',
    cell: 'tc-cell',
    cellSelected: 'tc-cell--selected',
    addRow: 'tc-add-row',
    addColumn: 'tc-add-column',
};
class u1 {
    constructor(e, t, n, i) {
        (this.readOnly = e),
            (this.api = t),
            (this.data = n),
            (this.config = i),
            (this.wrapper = null),
            (this.table = null),
            (this.toolboxColumn = this.createColumnToolbox()),
            (this.toolboxRow = this.createRowToolbox()),
            this.createTableWrapper(),
            (this.hoveredRow = 0),
            (this.hoveredColumn = 0),
            (this.selectedRow = 0),
            (this.selectedColumn = 0),
            (this.tunes = { withHeadings: !1 }),
            this.resize(),
            this.fill(),
            (this.focusedCell = { row: 0, column: 0 }),
            (this.documentClicked = (s) => {
                const r = s.target.closest(`.${ft.table}`) !== null,
                    l = s.target.closest(`.${ft.wrapper}`) === null;
                (r || l) && this.hideToolboxes();
                const a = s.target.closest(`.${ft.addRow}`),
                    c = s.target.closest(`.${ft.addColumn}`);
                a && a.parentNode === this.wrapper ?
                    (this.addRow(void 0, !0), this.hideToolboxes())
                :   c &&
                    c.parentNode === this.wrapper &&
                    (this.addColumn(void 0, !0), this.hideToolboxes());
            }),
            this.readOnly || this.bindEvents();
    }
    getWrapper() {
        return this.wrapper;
    }
    bindEvents() {
        document.addEventListener('click', this.documentClicked),
            this.table.addEventListener(
                'mousemove',
                d1(150, (e) => this.onMouseMoveInTable(e)),
                { passive: !0 },
            ),
            (this.table.onkeypress = (e) => this.onKeyPressListener(e)),
            this.table.addEventListener('keydown', (e) =>
                this.onKeyDownListener(e),
            ),
            this.table.addEventListener('focusin', (e) =>
                this.focusInTableListener(e),
            );
    }
    createColumnToolbox() {
        return new Ro({
            api: this.api,
            cssModifier: 'column',
            items: [
                {
                    label: this.api.i18n.t('Add column to left'),
                    icon: i1,
                    onClick: () => {
                        this.addColumn(this.selectedColumn, !0),
                            this.hideToolboxes();
                    },
                },
                {
                    label: this.api.i18n.t('Add column to right'),
                    icon: s1,
                    onClick: () => {
                        this.addColumn(this.selectedColumn + 1, !0),
                            this.hideToolboxes();
                    },
                },
                {
                    label: this.api.i18n.t('Delete column'),
                    icon: oc,
                    hideIf: () => this.numberOfColumns === 1,
                    confirmationRequired: !0,
                    onClick: () => {
                        this.deleteColumn(this.selectedColumn),
                            this.hideToolboxes();
                    },
                },
            ],
            onOpen: () => {
                this.selectColumn(this.hoveredColumn), this.hideRowToolbox();
            },
            onClose: () => {
                this.unselectColumn();
            },
        });
    }
    createRowToolbox() {
        return new Ro({
            api: this.api,
            cssModifier: 'row',
            items: [
                {
                    label: this.api.i18n.t('Add row above'),
                    icon: r1,
                    onClick: () => {
                        this.addRow(this.selectedRow, !0), this.hideToolboxes();
                    },
                },
                {
                    label: this.api.i18n.t('Add row below'),
                    icon: o1,
                    onClick: () => {
                        this.addRow(this.selectedRow + 1, !0),
                            this.hideToolboxes();
                    },
                },
                {
                    label: this.api.i18n.t('Delete row'),
                    icon: oc,
                    hideIf: () => this.numberOfRows === 1,
                    confirmationRequired: !0,
                    onClick: () => {
                        this.deleteRow(this.selectedRow), this.hideToolboxes();
                    },
                },
            ],
            onOpen: () => {
                this.selectRow(this.hoveredRow), this.hideColumnToolbox();
            },
            onClose: () => {
                this.unselectRow();
            },
        });
    }
    moveCursorToNextRow() {
        this.focusedCell.row !== this.numberOfRows ?
            ((this.focusedCell.row += 1), this.focusCell(this.focusedCell))
        :   (this.addRow(),
            (this.focusedCell.row += 1),
            this.focusCell(this.focusedCell),
            this.updateToolboxesPosition(0, 0));
    }
    getCell(e, t) {
        return this.table.querySelectorAll(
            `.${ft.row}:nth-child(${e}) .${ft.cell}`,
        )[t - 1];
    }
    getRow(e) {
        return this.table.querySelector(`.${ft.row}:nth-child(${e})`);
    }
    getRowByCell(e) {
        return e.parentElement;
    }
    getRowFirstCell(e) {
        return e.querySelector(`.${ft.cell}:first-child`);
    }
    setCellContent(e, t, n) {
        const i = this.getCell(e, t);
        i.innerHTML = n;
    }
    addColumn(e = -1, t = !1) {
        let n = this.numberOfColumns;
        for (let i = 1; i <= this.numberOfRows; i++) {
            let s;
            const r = this.createCell();
            if (
                (e > 0 && e <= n ?
                    ((s = this.getCell(i, e)), tc(r, s))
                :   (s = this.getRow(i).appendChild(r)),
                i === 1)
            ) {
                const l = this.getCell(i, e > 0 ? e : n + 1);
                l && t && nc(l);
            }
        }
        this.addHeadingAttrToFirstRow();
    }
    addRow(e = -1, t = !1) {
        let n,
            i = Bn('div', ft.row);
        this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
        let s = this.numberOfColumns;
        if (e > 0 && e <= this.numberOfRows) {
            let l = this.getRow(e);
            n = tc(i, l);
        } else n = this.table.appendChild(i);
        this.fillRow(n, s),
            this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
        const r = this.getRowFirstCell(n);
        return r && t && nc(r), n;
    }
    deleteColumn(e) {
        for (let t = 1; t <= this.numberOfRows; t++) {
            const n = this.getCell(t, e);
            if (!n) return;
            n.remove();
        }
    }
    deleteRow(e) {
        this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
    }
    createTableWrapper() {
        if (
            ((this.wrapper = Bn('div', ft.wrapper)),
            (this.table = Bn('div', ft.table)),
            this.readOnly && this.wrapper.classList.add(ft.wrapperReadOnly),
            this.wrapper.appendChild(this.toolboxRow.element),
            this.wrapper.appendChild(this.toolboxColumn.element),
            this.wrapper.appendChild(this.table),
            !this.readOnly)
        ) {
            const e = Bn('div', ft.addColumn, { innerHTML: ic }),
                t = Bn('div', ft.addRow, { innerHTML: ic });
            this.wrapper.appendChild(e), this.wrapper.appendChild(t);
        }
    }
    computeInitialSize() {
        const e = this.data && this.data.content,
            t = Array.isArray(e),
            n = t ? e.length : !1,
            i = t ? e.length : void 0,
            s = n ? e[0].length : void 0,
            r = Number.parseInt(this.config && this.config.rows),
            l = Number.parseInt(this.config && this.config.cols),
            a = !isNaN(r) && r > 0 ? r : void 0,
            c = !isNaN(l) && l > 0 ? l : void 0;
        return { rows: i || a || 2, cols: s || c || 2 };
    }
    resize() {
        const { rows: e, cols: t } = this.computeInitialSize();
        for (let n = 0; n < e; n++) this.addRow();
        for (let n = 0; n < t; n++) this.addColumn();
    }
    fill() {
        const e = this.data;
        if (e && e.content)
            for (let t = 0; t < e.content.length; t++)
                for (let n = 0; n < e.content[t].length; n++)
                    this.setCellContent(t + 1, n + 1, e.content[t][n]);
    }
    fillRow(e, t) {
        for (let n = 1; n <= t; n++) {
            const i = this.createCell();
            e.appendChild(i);
        }
    }
    createCell() {
        return Bn('div', ft.cell, { contentEditable: !this.readOnly });
    }
    get numberOfRows() {
        return this.table.childElementCount;
    }
    get numberOfColumns() {
        return this.numberOfRows ?
                this.table.querySelectorAll(
                    `.${ft.row}:first-child .${ft.cell}`,
                ).length
            :   0;
    }
    get isColumnMenuShowing() {
        return this.selectedColumn !== 0;
    }
    get isRowMenuShowing() {
        return this.selectedRow !== 0;
    }
    onMouseMoveInTable(e) {
        const { row: t, column: n } = this.getHoveredCell(e);
        (this.hoveredColumn = n),
            (this.hoveredRow = t),
            this.updateToolboxesPosition();
    }
    onKeyPressListener(e) {
        if (e.key === 'Enter') {
            if (e.shiftKey) return !0;
            this.moveCursorToNextRow();
        }
        return e.key !== 'Enter';
    }
    onKeyDownListener(e) {
        e.key === 'Tab' && e.stopPropagation();
    }
    focusInTableListener(e) {
        const t = e.target,
            n = this.getRowByCell(t);
        this.focusedCell = {
            row:
                Array.from(this.table.querySelectorAll(`.${ft.row}`)).indexOf(
                    n,
                ) + 1,
            column:
                Array.from(n.querySelectorAll(`.${ft.cell}`)).indexOf(t) + 1,
        };
    }
    hideToolboxes() {
        this.hideRowToolbox(),
            this.hideColumnToolbox(),
            this.updateToolboxesPosition();
    }
    hideRowToolbox() {
        this.unselectRow(), this.toolboxRow.hide();
    }
    hideColumnToolbox() {
        this.unselectColumn(), this.toolboxColumn.hide();
    }
    focusCell() {
        this.focusedCellElem.focus();
    }
    get focusedCellElem() {
        const { row: e, column: t } = this.focusedCell;
        return this.getCell(e, t);
    }
    updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
        this.isColumnMenuShowing ||
            (t > 0 &&
                t <= this.numberOfColumns &&
                this.toolboxColumn.show(() => ({
                    left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * (1 + (${t} - 1) * 2))`,
                }))),
            this.isRowMenuShowing ||
                (e > 0 &&
                    e <= this.numberOfRows &&
                    this.toolboxRow.show(() => {
                        const n = this.getRow(e),
                            { fromTopBorder: i } = ec(this.table, n),
                            { height: s } = n.getBoundingClientRect();
                        return { top: `${Math.ceil(i + s / 2)}px` };
                    }));
    }
    setHeadingsSetting(e) {
        (this.tunes.withHeadings = e),
            e ?
                (this.table.classList.add(ft.withHeadings),
                this.addHeadingAttrToFirstRow())
            :   (this.table.classList.remove(ft.withHeadings),
                this.removeHeadingAttrFromFirstRow());
    }
    addHeadingAttrToFirstRow() {
        for (let e = 1; e <= this.numberOfColumns; e++) {
            let t = this.getCell(1, e);
            t && t.setAttribute('heading', this.api.i18n.t('Heading'));
        }
    }
    removeHeadingAttrFromFirstRow() {
        for (let e = 1; e <= this.numberOfColumns; e++) {
            let t = this.getCell(1, e);
            t && t.removeAttribute('heading');
        }
    }
    selectRow(e) {
        const t = this.getRow(e);
        t && ((this.selectedRow = e), t.classList.add(ft.rowSelected));
    }
    unselectRow() {
        if (this.selectedRow <= 0) return;
        const e = this.table.querySelector(`.${ft.rowSelected}`);
        e && e.classList.remove(ft.rowSelected), (this.selectedRow = 0);
    }
    selectColumn(e) {
        for (let t = 1; t <= this.numberOfRows; t++) {
            const n = this.getCell(t, e);
            n && n.classList.add(ft.cellSelected);
        }
        this.selectedColumn = e;
    }
    unselectColumn() {
        if (this.selectedColumn <= 0) return;
        let e = this.table.querySelectorAll(`.${ft.cellSelected}`);
        Array.from(e).forEach((t) => {
            t.classList.remove(ft.cellSelected);
        }),
            (this.selectedColumn = 0);
    }
    getHoveredCell(e) {
        let t = this.hoveredRow,
            n = this.hoveredColumn;
        const { width: i, height: s, x: r, y: l } = n1(this.table, e);
        return (
            r >= 0 &&
                (n = this.binSearch(
                    this.numberOfColumns,
                    (a) => this.getCell(1, a),
                    ({ fromLeftBorder: a }) => r < a,
                    ({ fromRightBorder: a }) => r > i - a,
                )),
            l >= 0 &&
                (t = this.binSearch(
                    this.numberOfRows,
                    (a) => this.getCell(a, 1),
                    ({ fromTopBorder: a }) => l < a,
                    ({ fromBottomBorder: a }) => l > s - a,
                )),
            { row: t || this.hoveredRow, column: n || this.hoveredColumn }
        );
    }
    binSearch(e, t, n, i) {
        let s = 0,
            r = e + 1,
            l = 0,
            a;
        for (; s < r - 1 && l < 10; ) {
            a = Math.ceil((s + r) / 2);
            const c = t(a),
                h = ec(this.table, c);
            if (n(h)) r = a;
            else if (i(h)) s = a;
            else break;
            l++;
        }
        return a;
    }
    getData() {
        const e = [];
        for (let t = 1; t <= this.numberOfRows; t++) {
            const n = this.table.querySelector(`.${ft.row}:nth-child(${t})`),
                i = Array.from(n.querySelectorAll(`.${ft.cell}`));
            i.every((s) => !s.textContent.trim()) ||
                e.push(i.map((s) => s.innerHTML));
        }
        return e;
    }
    destroy() {
        document.removeEventListener('click', this.documentClicked);
    }
}
class cl {
    static get isReadOnlySupported() {
        return !0;
    }
    static get enableLineBreaks() {
        return !0;
    }
    constructor({ data: e, config: t, api: n, readOnly: i }) {
        (this.api = n),
            (this.readOnly = i),
            (this.config = t),
            (this.data = {
                withHeadings: this.getConfig('withHeadings', !1, e),
                content: e && e.content ? e.content : [],
            }),
            (this.table = null);
    }
    static get toolbox() {
        return { icon: h1, title: 'Table' };
    }
    render() {
        return (
            (this.table = new u1(
                this.readOnly,
                this.api,
                this.data,
                this.config,
            )),
            (this.container = Bn('div', this.api.styles.block)),
            this.container.appendChild(this.table.getWrapper()),
            this.table.setHeadingsSetting(this.data.withHeadings),
            this.container
        );
    }
    renderSettings() {
        return [
            {
                label: this.api.i18n.t('With headings'),
                icon: a1,
                isActive: this.data.withHeadings,
                closeOnActivate: !0,
                toggle: !0,
                onActivate: () => {
                    (this.data.withHeadings = !0),
                        this.table.setHeadingsSetting(this.data.withHeadings);
                },
            },
            {
                label: this.api.i18n.t('Without headings'),
                icon: c1,
                isActive: !this.data.withHeadings,
                closeOnActivate: !0,
                toggle: !0,
                onActivate: () => {
                    (this.data.withHeadings = !1),
                        this.table.setHeadingsSetting(this.data.withHeadings);
                },
            },
        ];
    }
    save() {
        const e = this.table.getData();
        return { withHeadings: this.data.withHeadings, content: e };
    }
    destroy() {
        this.table.destroy();
    }
    getConfig(e, t = void 0, n = void 0) {
        const i = this.data || n;
        return (
            i ?
                i[e] ?
                    i[e]
                :   t
            : this.config && this.config[e] ? this.config[e]
            : t
        );
    }
    static get pasteConfig() {
        return { tags: ['TABLE', 'TR', 'TH', 'TD'] };
    }
    onPaste(e) {
        const t = e.detail.data,
            n = t.querySelector(':scope > thead, tr:first-of-type th'),
            i = Array.from(t.querySelectorAll('tr')).map((s) =>
                Array.from(s.querySelectorAll('th, td')).map(
                    (r) => r.innerHTML,
                ),
            );
        (this.data = { withHeadings: n !== null, content: i }),
            this.table.wrapper && this.table.wrapper.replaceWith(this.render());
    }
}
function p1(o) {
    return (
            o &&
                o.__esModule &&
                Object.prototype.hasOwnProperty.call(o, 'default')
        ) ?
            o.default
        :   o;
}
var fp = { exports: {} };
(function (o, e) {
    (function (t, n) {
        o.exports = n();
    })(window, function () {
        return (function (t) {
            var n = {};
            function i(s) {
                if (n[s]) return n[s].exports;
                var r = (n[s] = { i: s, l: !1, exports: {} });
                return (
                    t[s].call(r.exports, r, r.exports, i), (r.l = !0), r.exports
                );
            }
            return (
                (i.m = t),
                (i.c = n),
                (i.d = function (s, r, l) {
                    i.o(s, r) ||
                        Object.defineProperty(s, r, { enumerable: !0, get: l });
                }),
                (i.r = function (s) {
                    typeof Symbol < 'u' &&
                        Symbol.toStringTag &&
                        Object.defineProperty(s, Symbol.toStringTag, {
                            value: 'Module',
                        }),
                        Object.defineProperty(s, '__esModule', { value: !0 });
                }),
                (i.t = function (s, r) {
                    if (
                        (1 & r && (s = i(s)),
                        8 & r ||
                            (4 & r &&
                                typeof s == 'object' &&
                                s &&
                                s.__esModule))
                    )
                        return s;
                    var l = Object.create(null);
                    if (
                        (i.r(l),
                        Object.defineProperty(l, 'default', {
                            enumerable: !0,
                            value: s,
                        }),
                        2 & r && typeof s != 'string')
                    )
                        for (var a in s)
                            i.d(
                                l,
                                a,
                                function (c) {
                                    return s[c];
                                }.bind(null, a),
                            );
                    return l;
                }),
                (i.n = function (s) {
                    var r =
                        s && s.__esModule ?
                            function () {
                                return s.default;
                            }
                        :   function () {
                                return s;
                            };
                    return i.d(r, 'a', r), r;
                }),
                (i.o = function (s, r) {
                    return Object.prototype.hasOwnProperty.call(s, r);
                }),
                (i.p = '/'),
                i((i.s = 4))
            );
        })([
            function (t, n, i) {
                var s = i(1),
                    r = i(2);
                typeof (r = r.__esModule ? r.default : r) == 'string' &&
                    (r = [[t.i, r, '']]);
                var l = { insert: 'head', singleton: !1 };
                s(r, l), (t.exports = r.locals || {});
            },
            function (t, n, i) {
                var s,
                    r = function () {
                        return (
                            s === void 0 &&
                                (s = !!(
                                    window &&
                                    document &&
                                    document.all &&
                                    !window.atob
                                )),
                            s
                        );
                    },
                    l = (function () {
                        var _ = {};
                        return function (B) {
                            if (_[B] === void 0) {
                                var O = document.querySelector(B);
                                if (
                                    window.HTMLIFrameElement &&
                                    O instanceof window.HTMLIFrameElement
                                )
                                    try {
                                        O = O.contentDocument.head;
                                    } catch {
                                        O = null;
                                    }
                                _[B] = O;
                            }
                            return _[B];
                        };
                    })(),
                    a = [];
                function c(_) {
                    for (var B = -1, O = 0; O < a.length; O++)
                        if (a[O].identifier === _) {
                            B = O;
                            break;
                        }
                    return B;
                }
                function h(_, B) {
                    for (var O = {}, P = [], H = 0; H < _.length; H++) {
                        var T = _[H],
                            S = B.base ? T[0] + B.base : T[0],
                            A = O[S] || 0,
                            $ = ''.concat(S, ' ').concat(A);
                        O[S] = A + 1;
                        var K = c($),
                            W = { css: T[1], media: T[2], sourceMap: T[3] };
                        K !== -1 ?
                            (a[K].references++, a[K].updater(W))
                        :   a.push({
                                identifier: $,
                                updater: E(W, B),
                                references: 1,
                            }),
                            P.push($);
                    }
                    return P;
                }
                function u(_) {
                    var B = document.createElement('style'),
                        O = _.attributes || {};
                    if (O.nonce === void 0) {
                        var P = i.nc;
                        P && (O.nonce = P);
                    }
                    if (
                        (Object.keys(O).forEach(function (T) {
                            B.setAttribute(T, O[T]);
                        }),
                        typeof _.insert == 'function')
                    )
                        _.insert(B);
                    else {
                        var H = l(_.insert || 'head');
                        if (!H)
                            throw new Error(
                                "Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.",
                            );
                        H.appendChild(B);
                    }
                    return B;
                }
                var p,
                    b =
                        ((p = []),
                        function (_, B) {
                            return (
                                (p[_] = B),
                                p.filter(Boolean).join(`
`)
                            );
                        });
                function m(_, B, O, P) {
                    var H =
                        O ? ''
                        : P.media ?
                            '@media '.concat(P.media, ' {').concat(P.css, '}')
                        :   P.css;
                    if (_.styleSheet) _.styleSheet.cssText = b(B, H);
                    else {
                        var T = document.createTextNode(H),
                            S = _.childNodes;
                        S[B] && _.removeChild(S[B]),
                            S.length ?
                                _.insertBefore(T, S[B])
                            :   _.appendChild(T);
                    }
                }
                function k(_, B, O) {
                    var P = O.css,
                        H = O.media,
                        T = O.sourceMap;
                    if (
                        (H ?
                            _.setAttribute('media', H)
                        :   _.removeAttribute('media'),
                        T &&
                            typeof btoa < 'u' &&
                            (P += `
/*# sourceMappingURL=data:application/json;base64,`.concat(
                                btoa(
                                    unescape(
                                        encodeURIComponent(JSON.stringify(T)),
                                    ),
                                ),
                                ' */',
                            )),
                        _.styleSheet)
                    )
                        _.styleSheet.cssText = P;
                    else {
                        for (; _.firstChild; ) _.removeChild(_.firstChild);
                        _.appendChild(document.createTextNode(P));
                    }
                }
                var y = null,
                    w = 0;
                function E(_, B) {
                    var O, P, H;
                    if (B.singleton) {
                        var T = w++;
                        (O = y || (y = u(B))),
                            (P = m.bind(null, O, T, !1)),
                            (H = m.bind(null, O, T, !0));
                    } else
                        (O = u(B)),
                            (P = k.bind(null, O, B)),
                            (H = function () {
                                (function (S) {
                                    if (S.parentNode === null) return !1;
                                    S.parentNode.removeChild(S);
                                })(O);
                            });
                    return (
                        P(_),
                        function (S) {
                            if (S) {
                                if (
                                    S.css === _.css &&
                                    S.media === _.media &&
                                    S.sourceMap === _.sourceMap
                                )
                                    return;
                                P((_ = S));
                            } else H();
                        }
                    );
                }
                t.exports = function (_, B) {
                    (B = B || {}).singleton ||
                        typeof B.singleton == 'boolean' ||
                        (B.singleton = r());
                    var O = h((_ = _ || []), B);
                    return function (P) {
                        if (
                            ((P = P || []),
                            Object.prototype.toString.call(P) ===
                                '[object Array]')
                        ) {
                            for (var H = 0; H < O.length; H++) {
                                var T = c(O[H]);
                                a[T].references--;
                            }
                            for (var S = h(P, B), A = 0; A < O.length; A++) {
                                var $ = c(O[A]);
                                a[$].references === 0 &&
                                    (a[$].updater(), a.splice($, 1));
                            }
                            O = S;
                        }
                    };
                };
            },
            function (t, n, i) {
                (n = i(3)(!1)).push([
                    t.i,
                    `.cdx-underline {
    text-decoration: underline;
}
`,
                    '',
                ]),
                    (t.exports = n);
            },
            function (t, n, i) {
                t.exports = function (s) {
                    var r = [];
                    return (
                        (r.toString = function () {
                            return this.map(function (l) {
                                var a = (function (c, h) {
                                    var u = c[1] || '',
                                        p = c[3];
                                    if (!p) return u;
                                    if (h && typeof btoa == 'function') {
                                        var b =
                                                ((k = p),
                                                (y = btoa(
                                                    unescape(
                                                        encodeURIComponent(
                                                            JSON.stringify(k),
                                                        ),
                                                    ),
                                                )),
                                                (w =
                                                    'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(
                                                        y,
                                                    )),
                                                '/*# '.concat(w, ' */')),
                                            m = p.sources.map(function (E) {
                                                return '/*# sourceURL='
                                                    .concat(p.sourceRoot || '')
                                                    .concat(E, ' */');
                                            });
                                        return [u].concat(m).concat([b]).join(`
`);
                                    }
                                    var k, y, w;
                                    return [u].join(`
`);
                                })(l, s);
                                return l[2] ?
                                        '@media '
                                            .concat(l[2], ' {')
                                            .concat(a, '}')
                                    :   a;
                            }).join('');
                        }),
                        (r.i = function (l, a, c) {
                            typeof l == 'string' && (l = [[null, l, '']]);
                            var h = {};
                            if (c)
                                for (var u = 0; u < this.length; u++) {
                                    var p = this[u][0];
                                    p != null && (h[p] = !0);
                                }
                            for (var b = 0; b < l.length; b++) {
                                var m = [].concat(l[b]);
                                (c && h[m[0]]) ||
                                    (a &&
                                        (m[2] ?
                                            (m[2] = ''
                                                .concat(a, ' and ')
                                                .concat(m[2]))
                                        :   (m[2] = a)),
                                    r.push(m));
                            }
                        }),
                        r
                    );
                };
            },
            function (t, n, i) {
                i.r(n),
                    i.d(n, 'default', function () {
                        return l;
                    }),
                    i(0);
                function s(a) {
                    return (s =
                        (
                            typeof Symbol == 'function' &&
                            typeof Symbol.iterator == 'symbol'
                        ) ?
                            function (c) {
                                return typeof c;
                            }
                        :   function (c) {
                                return (
                                        c &&
                                            typeof Symbol == 'function' &&
                                            c.constructor === Symbol &&
                                            c !== Symbol.prototype
                                    ) ?
                                        'symbol'
                                    :   typeof c;
                            })(a);
                }
                function r(a, c) {
                    for (var h = 0; h < c.length; h++) {
                        var u = c[h];
                        (u.enumerable = u.enumerable || !1),
                            (u.configurable = !0),
                            'value' in u && (u.writable = !0),
                            Object.defineProperty(
                                a,
                                ((p = u.key),
                                (b = void 0),
                                (b = (function (m, k) {
                                    if (s(m) !== 'object' || m === null)
                                        return m;
                                    var y = m[Symbol.toPrimitive];
                                    if (y !== void 0) {
                                        var w = y.call(m, k || 'default');
                                        if (s(w) !== 'object') return w;
                                        throw new TypeError(
                                            '@@toPrimitive must return a primitive value.',
                                        );
                                    }
                                    return (k === 'string' ? String : Number)(
                                        m,
                                    );
                                })(p, 'string')),
                                s(b) === 'symbol' ? b : String(b)),
                                u,
                            );
                    }
                    var p, b;
                }
                var l = (function () {
                    function a(p) {
                        var b = p.api;
                        (function (m, k) {
                            if (!(m instanceof k))
                                throw new TypeError(
                                    'Cannot call a class as a function',
                                );
                        })(this, a),
                            (this.api = b),
                            (this.button = null),
                            (this.tag = 'U'),
                            (this.iconClasses = {
                                base: this.api.styles.inlineToolButton,
                                active: this.api.styles.inlineToolButtonActive,
                            });
                    }
                    var c, h, u;
                    return (
                        (c = a),
                        (u = [
                            {
                                key: 'CSS',
                                get: function () {
                                    return 'cdx-underline';
                                },
                            },
                            {
                                key: 'isInline',
                                get: function () {
                                    return !0;
                                },
                            },
                            {
                                key: 'sanitize',
                                get: function () {
                                    return { u: { class: a.CSS } };
                                },
                            },
                        ]),
                        (h = [
                            {
                                key: 'render',
                                value: function () {
                                    return (
                                        (this.button =
                                            document.createElement('button')),
                                        (this.button.type = 'button'),
                                        this.button.classList.add(
                                            this.iconClasses.base,
                                        ),
                                        (this.button.innerHTML =
                                            this.toolboxIcon),
                                        this.button
                                    );
                                },
                            },
                            {
                                key: 'surround',
                                value: function (p) {
                                    if (p) {
                                        var b =
                                            this.api.selection.findParentTag(
                                                this.tag,
                                                a.CSS,
                                            );
                                        b ? this.unwrap(b) : this.wrap(p);
                                    }
                                },
                            },
                            {
                                key: 'wrap',
                                value: function (p) {
                                    var b = document.createElement(this.tag);
                                    b.classList.add(a.CSS),
                                        b.appendChild(p.extractContents()),
                                        p.insertNode(b),
                                        this.api.selection.expandToTag(b);
                                },
                            },
                            {
                                key: 'unwrap',
                                value: function (p) {
                                    this.api.selection.expandToTag(p);
                                    var b = window.getSelection(),
                                        m = b.getRangeAt(0),
                                        k = m.extractContents();
                                    p.parentNode.removeChild(p),
                                        m.insertNode(k),
                                        b.removeAllRanges(),
                                        b.addRange(m);
                                },
                            },
                            {
                                key: 'checkState',
                                value: function () {
                                    var p = this.api.selection.findParentTag(
                                        this.tag,
                                        a.CSS,
                                    );
                                    this.button.classList.toggle(
                                        this.iconClasses.active,
                                        !!p,
                                    );
                                },
                            },
                            {
                                key: 'toolboxIcon',
                                get: function () {
                                    return '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7.5V11.5C9 12.2956 9.31607 13.0587 9.87868 13.6213C10.4413 14.1839 11.2044 14.5 12 14.5C12.7956 14.5 13.5587 14.1839 14.1213 13.6213C14.6839 13.0587 15 12.2956 15 11.5V7.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7.71429 18H16.2857"/></svg>';
                                },
                            },
                        ]) && r(c.prototype, h),
                        u && r(c, u),
                        Object.defineProperty(c, 'prototype', { writable: !1 }),
                        a
                    );
                })();
            },
        ]).default;
    });
})(fp);
var f1 = fp.exports;
const hl = p1(f1);
class Fo {
    static get CSS() {
        return 'cdx-monospace';
    }
    constructor({ api: e }) {
        (this.api = e),
            (this.button = null),
            (this.tag = 'CODE'),
            (this.iconClasses = {
                base: this.api.styles.inlineToolButton,
                active: this.api.styles.inlineToolButtonActive,
            });
    }
    static get isInline() {
        return !0;
    }
    render() {
        return (
            (this.button = document.createElement('button')),
            (this.button.type = 'button'),
            (this.button.textContent = 'M'),
            this.button.classList.add(this.api.styles.inlineToolButton),
            this.button
        );
    }
    surround(e) {
        if (!e) return;
        const t = this.api.selection.findParentTag(this.tag, Fo.CSS);
        t ? this.unwrap(t) : this.wrap(e);
    }
    wrap(e) {
        const t = document.createElement(this.tag);
        t.classList.add(Fo.CSS),
            t.appendChild(e.extractContents()),
            e.insertNode(t),
            this.api.selection.expandToTag(t);
    }
    unwrap(e) {
        this.api.selection.expandToTag(e);
        const t = window.getSelection();
        if (t) {
            const n = t.getRangeAt(0),
                i = n.extractContents();
            e.parentNode && e.parentNode.removeChild(e),
                n.insertNode(i),
                t.removeAllRanges(),
                t.addRange(n);
        }
    }
    checkState() {
        const e = this.api.selection.findParentTag(this.tag, Fo.CSS);
        this.button &&
            this.button.classList.toggle(this.iconClasses.active, !!e);
    }
    static get sanitize() {
        return { code: { class: Fo.CSS } };
    }
    static get toolbox() {
        return { icon: 'M', title: 'Monospace' };
    }
}
function zi(o = null, e = 'docs-tab') {
    const t = {
        holder: e,
        tools: {
            underline: hl,
            monospace: { class: Fo, inlineToolbar: !0 },
            header: al,
            paragraph: ea,
            table: cl,
        },
        logLevel: 'ERROR',
        readOnly: e === 'ref-docs',
    };
    o && (t.data = o);
    const n = new gr(t);
    e === 'docs-tab' && Tr.set(n);
}
var $n = {};
const gp = async (o, e, t) => await e({ name: o, setAttributes: () => {} }),
    En = {
        KIND: 'xata.trace.kind',
        VERSION: 'xata.sdk.version',
        TABLE: 'xata.table',
        HTTP_REQUEST_ID: 'http.request_id',
        HTTP_STATUS_CODE: 'http.status_code',
        HTTP_HOST: 'http.host',
        HTTP_SCHEME: 'http.scheme',
        HTTP_USER_AGENT: 'http.user_agent',
        HTTP_METHOD: 'http.method',
        HTTP_URL: 'http.url',
        HTTP_ROUTE: 'http.route',
        HTTP_TARGET: 'http.target',
        CLOUDFLARE_RAY_ID: 'cf.ray',
    },
    oo = [],
    Nn = [],
    Ur = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (let o = 0, e = Ur.length; o < e; ++o)
    (oo[o] = Ur[o]), (Nn[Ur.charCodeAt(o)] = o);
Nn[45] = 62;
Nn[95] = 63;
function g1(o) {
    const e = o.length;
    if (e % 4 > 0)
        throw new Error('Invalid string. Length must be a multiple of 4');
    let t = o.indexOf('=');
    t === -1 && (t = e);
    const n = t === e ? 0 : 4 - (t % 4);
    return [t, n];
}
function m1(o, e, t) {
    return ((e + t) * 3) / 4 - t;
}
function b1(o) {
    let e;
    const t = g1(o),
        n = t[0],
        i = t[1],
        s = new Uint8Array(m1(o, n, i));
    let r = 0;
    const l = i > 0 ? n - 4 : n;
    let a;
    for (a = 0; a < l; a += 4)
        (e =
            (Nn[o.charCodeAt(a)] << 18) |
            (Nn[o.charCodeAt(a + 1)] << 12) |
            (Nn[o.charCodeAt(a + 2)] << 6) |
            Nn[o.charCodeAt(a + 3)]),
            (s[r++] = (e >> 16) & 255),
            (s[r++] = (e >> 8) & 255),
            (s[r++] = e & 255);
    return (
        i === 2 &&
            ((e = (Nn[o.charCodeAt(a)] << 2) | (Nn[o.charCodeAt(a + 1)] >> 4)),
            (s[r++] = e & 255)),
        i === 1 &&
            ((e =
                (Nn[o.charCodeAt(a)] << 10) |
                (Nn[o.charCodeAt(a + 1)] << 4) |
                (Nn[o.charCodeAt(a + 2)] >> 2)),
            (s[r++] = (e >> 8) & 255),
            (s[r++] = e & 255)),
        s
    );
}
function w1(o) {
    return (
        oo[(o >> 18) & 63] + oo[(o >> 12) & 63] + oo[(o >> 6) & 63] + oo[o & 63]
    );
}
function y1(o, e, t) {
    let n;
    const i = [];
    for (let s = e; s < t; s += 3)
        (n =
            ((o[s] << 16) & 16711680) +
            ((o[s + 1] << 8) & 65280) +
            (o[s + 2] & 255)),
            i.push(w1(n));
    return i.join('');
}
function sc(o) {
    let e;
    const t = o.length,
        n = t % 3,
        i = [],
        s = 16383;
    for (let r = 0, l = t - n; r < l; r += s)
        i.push(y1(o, r, r + s > l ? l : r + s));
    return (
        n === 1 ?
            ((e = o[t - 1]), i.push(oo[e >> 2] + oo[(e << 4) & 63] + '=='))
        :   n === 2 &&
            ((e = (o[t - 2] << 8) + o[t - 1]),
            i.push(oo[e >> 10] + oo[(e >> 4) & 63] + oo[(e << 2) & 63] + '=')),
        i.join('')
    );
}
const rc = 2147483647,
    lc = 4096;
class le extends Uint8Array {
    constructor(e, t, n) {
        if (typeof e == 'number') {
            if (typeof t == 'string')
                throw new TypeError(
                    'The first argument must be of type string, received type number',
                );
            if (e < 0)
                throw new RangeError('The buffer size cannot be negative');
            super(e < 0 ? 0 : le._checked(e) | 0);
        } else if (typeof e == 'string') {
            if ((typeof t != 'string' && (t = 'utf8'), !le.isEncoding(t)))
                throw new TypeError('Unknown encoding: ' + t);
            const i = le.byteLength(e, t) | 0;
            super(i);
            const s = this.write(e, 0, this.length, t);
            if (s !== i)
                throw new TypeError(
                    'Number of bytes written did not match expected length (wrote ' +
                        s +
                        ', expected ' +
                        i +
                        ')',
                );
        } else if (ArrayBuffer.isView(e))
            if (le._isInstance(e, Uint8Array)) {
                const i = new Uint8Array(e),
                    s = i.buffer,
                    r = i.byteOffset,
                    l = i.byteLength;
                if (r < 0 || s.byteLength < r)
                    throw new RangeError('offset is outside of buffer bounds');
                if (s.byteLength < r + (l || 0))
                    throw new RangeError('length is outside of buffer bounds');
                super(new Uint8Array(s, r, l));
            } else {
                const i = e,
                    s = i.length < 0 ? 0 : le._checked(i.length) | 0;
                super(new Uint8Array(s));
                for (let r = 0; r < s; r++) this[r] = i[r] & 255;
            }
        else {
            if (e == null)
                throw new TypeError(
                    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                        typeof e,
                );
            if (
                le._isInstance(e, ArrayBuffer) ||
                (e && le._isInstance(e.buffer, ArrayBuffer))
            ) {
                const i = e,
                    s = t;
                if (s < 0 || i.byteLength < s)
                    throw new RangeError('offset is outside of buffer bounds');
                if (i.byteLength < s + (n || 0))
                    throw new RangeError('length is outside of buffer bounds');
                super(new Uint8Array(i, s, n));
            } else if (Array.isArray(e)) {
                const i = e,
                    s = i.length < 0 ? 0 : le._checked(i.length) | 0;
                super(new Uint8Array(s));
                for (let r = 0; r < s; r++) this[r] = i[r] & 255;
            } else
                throw new TypeError(
                    'Unable to determine the correct way to allocate buffer for type ' +
                        typeof e,
                );
        }
    }
    toJSON() {
        return { type: 'Buffer', data: Array.prototype.slice.call(this) };
    }
    write(e, t, n, i) {
        if (typeof t > 'u') (i = 'utf8'), (n = this.length), (t = 0);
        else if (typeof n > 'u' && typeof t == 'string')
            (i = t), (n = this.length), (t = 0);
        else if (typeof t == 'number' && isFinite(t))
            (t = t >>> 0),
                typeof n == 'number' && isFinite(n) ?
                    ((n = n >>> 0), i ?? (i = 'utf8'))
                :   typeof n == 'string' && ((i = n), (n = void 0));
        else
            throw new Error(
                'Buffer.write(string, encoding, offset[, length]) is no longer supported',
            );
        const s = this.length - t;
        if (
            ((typeof n > 'u' || n > s) && (n = s),
            (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
        )
            throw new RangeError('Attempt to write outside buffer bounds');
        switch ((i || (i = 'utf8'), le._getEncoding(i))) {
            case 'hex':
                return le._hexWrite(this, e, t, n);
            case 'utf8':
                return le._utf8Write(this, e, t, n);
            case 'ascii':
            case 'latin1':
            case 'binary':
                return le._asciiWrite(this, e, t, n);
            case 'ucs2':
            case 'utf16le':
                return le._ucs2Write(this, e, t, n);
            case 'base64':
                return le._base64Write(this, e, t, n);
        }
    }
    toString(e, t, n) {
        const i = this.length;
        if (i === 0) return '';
        if (arguments.length === 0) return le._utf8Slice(this, 0, i);
        if (
            ((typeof t > 'u' || t < 0) && (t = 0),
            t > this.length ||
                ((typeof n > 'u' || n > this.length) && (n = this.length),
                n <= 0) ||
                ((n >>>= 0), (t >>>= 0), n <= t))
        )
            return '';
        switch ((e || (e = 'utf8'), le._getEncoding(e))) {
            case 'hex':
                return le._hexSlice(this, t, n);
            case 'utf8':
                return le._utf8Slice(this, t, n);
            case 'ascii':
                return le._asciiSlice(this, t, n);
            case 'latin1':
            case 'binary':
                return le._latin1Slice(this, t, n);
            case 'ucs2':
            case 'utf16le':
                return le._utf16leSlice(this, t, n);
            case 'base64':
                return le._base64Slice(this, t, n);
        }
    }
    equals(e) {
        if (!le.isBuffer(e)) throw new TypeError('Argument must be a Buffer');
        return this === e ? !0 : le.compare(this, e) === 0;
    }
    compare(e, t, n, i, s) {
        if (
            (le._isInstance(e, Uint8Array) &&
                (e = le.from(e, e.byteOffset, e.byteLength)),
            !le.isBuffer(e))
        )
            throw new TypeError('Argument must be a Buffer or Uint8Array');
        if (
            (t ?? (t = 0),
            n ?? (n = e ? e.length : 0),
            i ?? (i = 0),
            s ?? (s = this.length),
            t < 0 || n > e.length || i < 0 || s > this.length)
        )
            throw new RangeError('Out of range index');
        if (i >= s && t >= n) return 0;
        if (i >= s) return -1;
        if (t >= n) return 1;
        if (((t >>>= 0), (n >>>= 0), (i >>>= 0), (s >>>= 0), this === e))
            return 0;
        let r = s - i,
            l = n - t;
        const a = Math.min(r, l),
            c = this.slice(i, s),
            h = e.slice(t, n);
        for (let u = 0; u < a; ++u)
            if (c[u] !== h[u]) {
                (r = c[u]), (l = h[u]);
                break;
            }
        return (
            r < l ? -1
            : l < r ? 1
            : 0
        );
    }
    copy(e, t, n, i) {
        if (!le.isBuffer(e)) throw new TypeError('argument should be a Buffer');
        if (
            (n || (n = 0),
            t || (t = 0),
            !i && i !== 0 && (i = this.length),
            t >= e.length && (t = e.length),
            t || (t = 0),
            i > 0 && i < n && (i = n),
            i === n || e.length === 0 || this.length === 0)
        )
            return 0;
        if (t < 0) throw new RangeError('targetStart out of bounds');
        if (n < 0 || n >= this.length)
            throw new RangeError('Index out of range');
        if (i < 0) throw new RangeError('sourceEnd out of bounds');
        i > this.length && (i = this.length),
            e.length - t < i - n && (i = e.length - t + n);
        const s = i - n;
        return (
            this === e && typeof Uint8Array.prototype.copyWithin == 'function' ?
                this.copyWithin(t, n, i)
            :   Uint8Array.prototype.set.call(e, this.subarray(n, i), t),
            s
        );
    }
    slice(e, t) {
        e || (e = 0);
        const n = this.length;
        (e = ~~e),
            (t = t === void 0 ? n : ~~t),
            e < 0 ? ((e += n), e < 0 && (e = 0)) : e > n && (e = n),
            t < 0 ? ((t += n), t < 0 && (t = 0)) : t > n && (t = n),
            t < e && (t = e);
        const i = this.subarray(e, t);
        return Object.setPrototypeOf(i, le.prototype), i;
    }
    writeUIntLE(e, t, n, i) {
        if (((e = +e), (t = t >>> 0), (n = n >>> 0), !i)) {
            const l = Math.pow(2, 8 * n) - 1;
            le._checkInt(this, e, t, n, l, 0);
        }
        let s = 1,
            r = 0;
        for (this[t] = e & 255; ++r < n && (s *= 256); )
            this[t + r] = (e / s) & 255;
        return t + n;
    }
    writeUIntBE(e, t, n, i) {
        if (((e = +e), (t = t >>> 0), (n = n >>> 0), !i)) {
            const l = Math.pow(2, 8 * n) - 1;
            le._checkInt(this, e, t, n, l, 0);
        }
        let s = n - 1,
            r = 1;
        for (this[t + s] = e & 255; --s >= 0 && (r *= 256); )
            this[t + s] = (e / r) & 255;
        return t + n;
    }
    writeIntLE(e, t, n, i) {
        if (((e = +e), (t = t >>> 0), !i)) {
            const a = Math.pow(2, 8 * n - 1);
            le._checkInt(this, e, t, n, a - 1, -a);
        }
        let s = 0,
            r = 1,
            l = 0;
        for (this[t] = e & 255; ++s < n && (r *= 256); )
            e < 0 && l === 0 && this[t + s - 1] !== 0 && (l = 1),
                (this[t + s] = (((e / r) >> 0) - l) & 255);
        return t + n;
    }
    writeIntBE(e, t, n, i) {
        if (((e = +e), (t = t >>> 0), !i)) {
            const a = Math.pow(2, 8 * n - 1);
            le._checkInt(this, e, t, n, a - 1, -a);
        }
        let s = n - 1,
            r = 1,
            l = 0;
        for (this[t + s] = e & 255; --s >= 0 && (r *= 256); )
            e < 0 && l === 0 && this[t + s + 1] !== 0 && (l = 1),
                (this[t + s] = (((e / r) >> 0) - l) & 255);
        return t + n;
    }
    readUIntLE(e, t, n) {
        (e = e >>> 0), (t = t >>> 0), n || le._checkOffset(e, t, this.length);
        let i = this[e],
            s = 1,
            r = 0;
        for (; ++r < t && (s *= 256); ) i += this[e + r] * s;
        return i;
    }
    readUIntBE(e, t, n) {
        (e = e >>> 0), (t = t >>> 0), n || le._checkOffset(e, t, this.length);
        let i = this[e + --t],
            s = 1;
        for (; t > 0 && (s *= 256); ) i += this[e + --t] * s;
        return i;
    }
    readIntLE(e, t, n) {
        (e = e >>> 0), (t = t >>> 0), n || le._checkOffset(e, t, this.length);
        let i = this[e],
            s = 1,
            r = 0;
        for (; ++r < t && (s *= 256); ) i += this[e + r] * s;
        return (s *= 128), i >= s && (i -= Math.pow(2, 8 * t)), i;
    }
    readIntBE(e, t, n) {
        (e = e >>> 0), (t = t >>> 0), n || le._checkOffset(e, t, this.length);
        let i = t,
            s = 1,
            r = this[e + --i];
        for (; i > 0 && (s *= 256); ) r += this[e + --i] * s;
        return (s *= 128), r >= s && (r -= Math.pow(2, 8 * t)), r;
    }
    readUInt8(e, t) {
        return (e = e >>> 0), t || le._checkOffset(e, 1, this.length), this[e];
    }
    readUInt16LE(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 2, this.length),
            this[e] | (this[e + 1] << 8)
        );
    }
    readUInt16BE(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 2, this.length),
            (this[e] << 8) | this[e + 1]
        );
    }
    readUInt32LE(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 4, this.length),
            (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                this[e + 3] * 16777216
        );
    }
    readUInt32BE(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 4, this.length),
            this[e] * 16777216 +
                ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
        );
    }
    readInt8(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 1, this.length),
            this[e] & 128 ? (255 - this[e] + 1) * -1 : this[e]
        );
    }
    readInt16LE(e, t) {
        (e = e >>> 0), t || le._checkOffset(e, 2, this.length);
        const n = this[e] | (this[e + 1] << 8);
        return n & 32768 ? n | 4294901760 : n;
    }
    readInt16BE(e, t) {
        (e = e >>> 0), t || le._checkOffset(e, 2, this.length);
        const n = this[e + 1] | (this[e] << 8);
        return n & 32768 ? n | 4294901760 : n;
    }
    readInt32LE(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 4, this.length),
            this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
        );
    }
    readInt32BE(e, t) {
        return (
            (e = e >>> 0),
            t || le._checkOffset(e, 4, this.length),
            (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
        );
    }
    swap16() {
        const e = this.length;
        if (e % 2 !== 0)
            throw new RangeError('Buffer size must be a multiple of 16-bits');
        for (let t = 0; t < e; t += 2) this._swap(this, t, t + 1);
        return this;
    }
    swap32() {
        const e = this.length;
        if (e % 4 !== 0)
            throw new RangeError('Buffer size must be a multiple of 32-bits');
        for (let t = 0; t < e; t += 4)
            this._swap(this, t, t + 3), this._swap(this, t + 1, t + 2);
        return this;
    }
    swap64() {
        const e = this.length;
        if (e % 8 !== 0)
            throw new RangeError('Buffer size must be a multiple of 64-bits');
        for (let t = 0; t < e; t += 8)
            this._swap(this, t, t + 7),
                this._swap(this, t + 1, t + 6),
                this._swap(this, t + 2, t + 5),
                this._swap(this, t + 3, t + 4);
        return this;
    }
    _swap(e, t, n) {
        const i = e[t];
        (e[t] = e[n]), (e[n] = i);
    }
    writeUInt8(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 1, 255, 0),
            (this[t] = e & 255),
            t + 1
        );
    }
    writeUInt16LE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 2, 65535, 0),
            (this[t] = e & 255),
            (this[t + 1] = e >>> 8),
            t + 2
        );
    }
    writeUInt16BE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 2, 65535, 0),
            (this[t] = e >>> 8),
            (this[t + 1] = e & 255),
            t + 2
        );
    }
    writeUInt32LE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 4, 4294967295, 0),
            (this[t + 3] = e >>> 24),
            (this[t + 2] = e >>> 16),
            (this[t + 1] = e >>> 8),
            (this[t] = e & 255),
            t + 4
        );
    }
    writeUInt32BE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 4, 4294967295, 0),
            (this[t] = e >>> 24),
            (this[t + 1] = e >>> 16),
            (this[t + 2] = e >>> 8),
            (this[t + 3] = e & 255),
            t + 4
        );
    }
    writeInt8(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 1, 127, -128),
            e < 0 && (e = 255 + e + 1),
            (this[t] = e & 255),
            t + 1
        );
    }
    writeInt16LE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 2, 32767, -32768),
            (this[t] = e & 255),
            (this[t + 1] = e >>> 8),
            t + 2
        );
    }
    writeInt16BE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 2, 32767, -32768),
            (this[t] = e >>> 8),
            (this[t + 1] = e & 255),
            t + 2
        );
    }
    writeInt32LE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 4, 2147483647, -2147483648),
            (this[t] = e & 255),
            (this[t + 1] = e >>> 8),
            (this[t + 2] = e >>> 16),
            (this[t + 3] = e >>> 24),
            t + 4
        );
    }
    writeInt32BE(e, t, n) {
        return (
            (e = +e),
            (t = t >>> 0),
            n || le._checkInt(this, e, t, 4, 2147483647, -2147483648),
            e < 0 && (e = 4294967295 + e + 1),
            (this[t] = e >>> 24),
            (this[t + 1] = e >>> 16),
            (this[t + 2] = e >>> 8),
            (this[t + 3] = e & 255),
            t + 4
        );
    }
    fill(e, t, n, i) {
        if (typeof e == 'string') {
            if (
                (typeof t == 'string' ?
                    ((i = t), (t = 0), (n = this.length))
                :   typeof n == 'string' && ((i = n), (n = this.length)),
                i !== void 0 && typeof i != 'string')
            )
                throw new TypeError('encoding must be a string');
            if (typeof i == 'string' && !le.isEncoding(i))
                throw new TypeError('Unknown encoding: ' + i);
            if (e.length === 1) {
                const r = e.charCodeAt(0);
                i === 'utf8' && r < 128 && (e = r);
            }
        } else
            typeof e == 'number' ?
                (e = e & 255)
            :   typeof e == 'boolean' && (e = Number(e));
        if (
            (t ?? (t = 0),
            n ?? (n = this.length),
            t < 0 || this.length < t || this.length < n)
        )
            throw new RangeError('Out of range index');
        if (n <= t) return this;
        (t = t >>> 0), (n = n === void 0 ? this.length : n >>> 0), e || (e = 0);
        let s;
        if (typeof e == 'number') for (s = t; s < n; ++s) this[s] = e;
        else {
            const r = le.isBuffer(e) ? e : le.from(e, i),
                l = r.length;
            if (l === 0)
                throw new TypeError(
                    'The value "' + e + '" is invalid for argument "value"',
                );
            for (s = 0; s < n - t; ++s) this[s + t] = r[s % l];
        }
        return this;
    }
    indexOf(e, t, n) {
        return this._bidirectionalIndexOf(this, e, t, n, !0);
    }
    lastIndexOf(e, t, n) {
        return this._bidirectionalIndexOf(this, e, t, n, !1);
    }
    _bidirectionalIndexOf(e, t, n, i, s) {
        if (e.length === 0) return -1;
        if (
            (typeof n == 'string' ? ((i = n), (n = 0))
            : typeof n > 'u' ? (n = 0)
            : n > 2147483647 ? (n = 2147483647)
            : n < -2147483648 && (n = -2147483648),
            (n = +n),
            n !== n && (n = s ? 0 : e.length - 1),
            n < 0 && (n = e.length + n),
            n >= e.length)
        ) {
            if (s) return -1;
            n = e.length - 1;
        } else if (n < 0)
            if (s) n = 0;
            else return -1;
        if ((typeof t == 'string' && (t = le.from(t, i)), le.isBuffer(t)))
            return t.length === 0 ? -1 : le._arrayIndexOf(e, t, n, i, s);
        if (typeof t == 'number')
            return (
                (t = t & 255),
                typeof Uint8Array.prototype.indexOf == 'function' ?
                    s ? Uint8Array.prototype.indexOf.call(e, t, n)
                    :   Uint8Array.prototype.lastIndexOf.call(e, t, n)
                :   le._arrayIndexOf(e, le.from([t]), n, i, s)
            );
        throw new TypeError('val must be string, number or Buffer');
    }
    includes(e, t, n) {
        return this.indexOf(e, t, n) !== -1;
    }
    static from(e, t, n) {
        return new le(e, t, n);
    }
    static isBuffer(e) {
        return e != null && e !== le.prototype && le._isInstance(e, le);
    }
    static isEncoding(e) {
        switch (e.toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'ascii':
            case 'binary':
            case 'latin1':
            case 'ucs2':
            case 'utf16le':
            case 'base64':
                return !0;
            default:
                return !1;
        }
    }
    static byteLength(e, t) {
        if (le.isBuffer(e)) return e.length;
        if (
            typeof e != 'string' &&
            (ArrayBuffer.isView(e) || le._isInstance(e, ArrayBuffer))
        )
            return e.byteLength;
        if (typeof e != 'string')
            throw new TypeError(
                'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                    typeof e,
            );
        const n = e.length,
            i = arguments.length > 2 && arguments[2] === !0;
        if (!i && n === 0) return 0;
        switch (t?.toLowerCase()) {
            case 'ascii':
            case 'latin1':
            case 'binary':
                return n;
            case 'utf8':
                return le._utf8ToBytes(e).length;
            case 'hex':
                return n >>> 1;
            case 'ucs2':
            case 'utf16le':
                return n * 2;
            case 'base64':
                return le._base64ToBytes(e).length;
            default:
                return i ? -1 : le._utf8ToBytes(e).length;
        }
    }
    static concat(e, t) {
        if (!Array.isArray(e))
            throw new TypeError('"list" argument must be an Array of Buffers');
        if (e.length === 0) return le.alloc(0);
        let n;
        if (t === void 0)
            for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
        const i = le.allocUnsafe(t);
        let s = 0;
        for (n = 0; n < e.length; ++n) {
            let r = e[n];
            if (le._isInstance(r, Uint8Array))
                s + r.length > i.length ?
                    (le.isBuffer(r) || (r = le.from(r)), r.copy(i, s))
                :   Uint8Array.prototype.set.call(i, r, s);
            else if (le.isBuffer(r)) r.copy(i, s);
            else
                throw new TypeError(
                    '"list" argument must be an Array of Buffers',
                );
            s += r.length;
        }
        return i;
    }
    static compare(e, t) {
        if (
            (le._isInstance(e, Uint8Array) &&
                (e = le.from(e, e.byteOffset, e.byteLength)),
            le._isInstance(t, Uint8Array) &&
                (t = le.from(t, t.byteOffset, t.byteLength)),
            !le.isBuffer(e) || !le.isBuffer(t))
        )
            throw new TypeError(
                'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array',
            );
        if (e === t) return 0;
        let n = e.length,
            i = t.length;
        for (let s = 0, r = Math.min(n, i); s < r; ++s)
            if (e[s] !== t[s]) {
                (n = e[s]), (i = t[s]);
                break;
            }
        return (
            n < i ? -1
            : i < n ? 1
            : 0
        );
    }
    static alloc(e, t, n) {
        if (typeof e != 'number')
            throw new TypeError('"size" argument must be of type number');
        if (e < 0)
            throw new RangeError(
                'The value "' + e + '" is invalid for option "size"',
            );
        return (
            e <= 0 ? new le(e)
            : t !== void 0 ?
                typeof n == 'string' ?
                    new le(e).fill(t, 0, e, n)
                :   new le(e).fill(t)
            :   new le(e)
        );
    }
    static allocUnsafe(e) {
        if (typeof e != 'number')
            throw new TypeError('"size" argument must be of type number');
        if (e < 0)
            throw new RangeError(
                'The value "' + e + '" is invalid for option "size"',
            );
        return new le(e < 0 ? 0 : le._checked(e) | 0);
    }
    static _isInstance(e, t) {
        return (
            e instanceof t ||
            (e != null &&
                e.constructor != null &&
                e.constructor.name != null &&
                e.constructor.name === t.name)
        );
    }
    static _checked(e) {
        if (e >= rc)
            throw new RangeError(
                'Attempt to allocate Buffer larger than maximum size: 0x' +
                    rc.toString(16) +
                    ' bytes',
            );
        return e | 0;
    }
    static _blitBuffer(e, t, n, i) {
        let s;
        for (s = 0; s < i && !(s + n >= t.length || s >= e.length); ++s)
            t[s + n] = e[s];
        return s;
    }
    static _utf8Write(e, t, n, i) {
        return le._blitBuffer(le._utf8ToBytes(t, e.length - n), e, n, i);
    }
    static _asciiWrite(e, t, n, i) {
        return le._blitBuffer(le._asciiToBytes(t), e, n, i);
    }
    static _base64Write(e, t, n, i) {
        return le._blitBuffer(le._base64ToBytes(t), e, n, i);
    }
    static _ucs2Write(e, t, n, i) {
        return le._blitBuffer(le._utf16leToBytes(t, e.length - n), e, n, i);
    }
    static _hexWrite(e, t, n, i) {
        n = Number(n) || 0;
        const s = e.length - n;
        i ? ((i = Number(i)), i > s && (i = s)) : (i = s);
        const r = t.length;
        i > r / 2 && (i = r / 2);
        let l;
        for (l = 0; l < i; ++l) {
            const a = parseInt(t.substr(l * 2, 2), 16);
            if (a !== a) return l;
            e[n + l] = a;
        }
        return l;
    }
    static _utf8ToBytes(e, t) {
        t = t || 1 / 0;
        const n = e.length,
            i = [];
        let s,
            r = null;
        for (let l = 0; l < n; ++l) {
            if (((s = e.charCodeAt(l)), s > 55295 && s < 57344)) {
                if (!r) {
                    if (s > 56319) {
                        (t -= 3) > -1 && i.push(239, 191, 189);
                        continue;
                    } else if (l + 1 === n) {
                        (t -= 3) > -1 && i.push(239, 191, 189);
                        continue;
                    }
                    r = s;
                    continue;
                }
                if (s < 56320) {
                    (t -= 3) > -1 && i.push(239, 191, 189), (r = s);
                    continue;
                }
                s = (((r - 55296) << 10) | (s - 56320)) + 65536;
            } else r && (t -= 3) > -1 && i.push(239, 191, 189);
            if (((r = null), s < 128)) {
                if ((t -= 1) < 0) break;
                i.push(s);
            } else if (s < 2048) {
                if ((t -= 2) < 0) break;
                i.push((s >> 6) | 192, (s & 63) | 128);
            } else if (s < 65536) {
                if ((t -= 3) < 0) break;
                i.push((s >> 12) | 224, ((s >> 6) & 63) | 128, (s & 63) | 128);
            } else if (s < 1114112) {
                if ((t -= 4) < 0) break;
                i.push(
                    (s >> 18) | 240,
                    ((s >> 12) & 63) | 128,
                    ((s >> 6) & 63) | 128,
                    (s & 63) | 128,
                );
            } else throw new Error('Invalid code point');
        }
        return i;
    }
    static _base64ToBytes(e) {
        return b1(_1(e));
    }
    static _asciiToBytes(e) {
        const t = [];
        for (let n = 0; n < e.length; ++n) t.push(e.charCodeAt(n) & 255);
        return t;
    }
    static _utf16leToBytes(e, t) {
        let n, i, s;
        const r = [];
        for (let l = 0; l < e.length && !((t -= 2) < 0); ++l)
            (n = e.charCodeAt(l)),
                (i = n >> 8),
                (s = n % 256),
                r.push(s),
                r.push(i);
        return r;
    }
    static _hexSlice(e, t, n) {
        const i = e.length;
        (!t || t < 0) && (t = 0), (!n || n < 0 || n > i) && (n = i);
        let s = '';
        for (let r = t; r < n; ++r) s += v1[e[r]];
        return s;
    }
    static _base64Slice(e, t, n) {
        return t === 0 && n === e.length ? sc(e) : sc(e.slice(t, n));
    }
    static _utf8Slice(e, t, n) {
        n = Math.min(e.length, n);
        const i = [];
        let s = t;
        for (; s < n; ) {
            const r = e[s];
            let l = null,
                a =
                    r > 239 ? 4
                    : r > 223 ? 3
                    : r > 191 ? 2
                    : 1;
            if (s + a <= n) {
                let c, h, u, p;
                switch (a) {
                    case 1:
                        r < 128 && (l = r);
                        break;
                    case 2:
                        (c = e[s + 1]),
                            (c & 192) === 128 &&
                                ((p = ((r & 31) << 6) | (c & 63)),
                                p > 127 && (l = p));
                        break;
                    case 3:
                        (c = e[s + 1]),
                            (h = e[s + 2]),
                            (c & 192) === 128 &&
                                (h & 192) === 128 &&
                                ((p =
                                    ((r & 15) << 12) |
                                    ((c & 63) << 6) |
                                    (h & 63)),
                                p > 2047 &&
                                    (p < 55296 || p > 57343) &&
                                    (l = p));
                        break;
                    case 4:
                        (c = e[s + 1]),
                            (h = e[s + 2]),
                            (u = e[s + 3]),
                            (c & 192) === 128 &&
                                (h & 192) === 128 &&
                                (u & 192) === 128 &&
                                ((p =
                                    ((r & 15) << 18) |
                                    ((c & 63) << 12) |
                                    ((h & 63) << 6) |
                                    (u & 63)),
                                p > 65535 && p < 1114112 && (l = p));
                }
            }
            l === null ?
                ((l = 65533), (a = 1))
            :   l > 65535 &&
                ((l -= 65536),
                i.push(((l >>> 10) & 1023) | 55296),
                (l = 56320 | (l & 1023))),
                i.push(l),
                (s += a);
        }
        return le._decodeCodePointsArray(i);
    }
    static _decodeCodePointsArray(e) {
        const t = e.length;
        if (t <= lc) return String.fromCharCode.apply(String, e);
        let n = '',
            i = 0;
        for (; i < t; )
            n += String.fromCharCode.apply(String, e.slice(i, (i += lc)));
        return n;
    }
    static _asciiSlice(e, t, n) {
        let i = '';
        n = Math.min(e.length, n);
        for (let s = t; s < n; ++s) i += String.fromCharCode(e[s] & 127);
        return i;
    }
    static _latin1Slice(e, t, n) {
        let i = '';
        n = Math.min(e.length, n);
        for (let s = t; s < n; ++s) i += String.fromCharCode(e[s]);
        return i;
    }
    static _utf16leSlice(e, t, n) {
        const i = e.slice(t, n);
        let s = '';
        for (let r = 0; r < i.length - 1; r += 2)
            s += String.fromCharCode(i[r] + i[r + 1] * 256);
        return s;
    }
    static _arrayIndexOf(e, t, n, i, s) {
        let r = 1,
            l = e.length,
            a = t.length;
        if (
            i !== void 0 &&
            ((i = le._getEncoding(i)), i === 'ucs2' || i === 'utf16le')
        ) {
            if (e.length < 2 || t.length < 2) return -1;
            (r = 2), (l /= 2), (a /= 2), (n /= 2);
        }
        function c(u, p) {
            return r === 1 ? u[p] : u.readUInt16BE(p * r);
        }
        let h;
        if (s) {
            let u = -1;
            for (h = n; h < l; h++)
                if (c(e, h) === c(t, u === -1 ? 0 : h - u)) {
                    if ((u === -1 && (u = h), h - u + 1 === a)) return u * r;
                } else u !== -1 && (h -= h - u), (u = -1);
        } else
            for (n + a > l && (n = l - a), h = n; h >= 0; h--) {
                let u = !0;
                for (let p = 0; p < a; p++)
                    if (c(e, h + p) !== c(t, p)) {
                        u = !1;
                        break;
                    }
                if (u) return h;
            }
        return -1;
    }
    static _checkOffset(e, t, n) {
        if (e % 1 !== 0 || e < 0) throw new RangeError('offset is not uint');
        if (e + t > n)
            throw new RangeError('Trying to access beyond buffer length');
    }
    static _checkInt(e, t, n, i, s, r) {
        if (!le.isBuffer(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t > s || t < r)
            throw new RangeError('"value" argument is out of bounds');
        if (n + i > e.length) throw new RangeError('Index out of range');
    }
    static _getEncoding(e) {
        let t = !1,
            n = '';
        for (;;)
            switch (e) {
                case 'hex':
                    return 'hex';
                case 'utf8':
                    return 'utf8';
                case 'ascii':
                    return 'ascii';
                case 'binary':
                    return 'binary';
                case 'latin1':
                    return 'latin1';
                case 'ucs2':
                    return 'ucs2';
                case 'utf16le':
                    return 'utf16le';
                case 'base64':
                    return 'base64';
                default: {
                    if (t)
                        throw new TypeError(
                            'Unknown or unsupported encoding: ' + n,
                        );
                    (t = !0), (n = e), (e = e.toLowerCase());
                }
            }
    }
}
const v1 = (function () {
        const o = '0123456789abcdef',
            e = new Array(256);
        for (let t = 0; t < 16; ++t) {
            const n = t * 16;
            for (let i = 0; i < 16; ++i) e[n + i] = o[t] + o[i];
        }
        return e;
    })(),
    k1 = /[^+/0-9A-Za-z-_]/g;
function _1(o) {
    if (((o = o.split('=')[0]), (o = o.trim().replace(k1, '')), o.length < 2))
        return '';
    for (; o.length % 4 !== 0; ) o = o + '=';
    return o;
}
function mp(o) {
    return o != null;
}
function vo(o) {
    return o.filter(mp);
}
function bp(o) {
    return Object.fromEntries(Object.entries(o).filter(([, e]) => mp(e)));
}
function ta(o) {
    try {
        return o instanceof Blob;
    } catch {
        return !1;
    }
}
function Ke(o) {
    return (
        !!o &&
        typeof o == 'object' &&
        !Array.isArray(o) &&
        !(o instanceof Date) &&
        !ta(o)
    );
}
function bt(o) {
    return o != null;
}
function rt(o) {
    return bt(o) && typeof o == 'string';
}
function wp(o) {
    return bt(o) && Array.isArray(o) && o.every(rt);
}
function yp(o) {
    return bt(o) && typeof o == 'number';
}
function x1(o) {
    if (yp(o)) return o;
    if (rt(o)) {
        const e = Number(o);
        if (!Number.isNaN(e)) return e;
    }
}
function C1(o) {
    try {
        return btoa(o);
    } catch {
        return le.from(o).toString('base64');
    }
}
function vp(o, e) {
    const t = { ...o };
    for (const [n, i] of Object.entries(e))
        Ke(i) && Ke(t[n]) ? (t[n] = vp(t[n], i)) : (t[n] = i);
    return t;
}
function na(o, e) {
    const t = [];
    for (let n = 0; n < o.length; n += e) t.push(o.slice(n, n + e));
    return t;
}
async function E1(o) {
    return new Promise((e) => setTimeout(e, o));
}
function T1(o) {
    let e;
    const t = new Promise((n) => {
        e = setTimeout(() => {
            n();
        }, o);
    });
    return { cancel: () => clearTimeout(e), promise: t };
}
function oa(o, e) {
    const t = (n, i) => n.then((s) => e(i).then((r) => (s.push(r), s)));
    return o.reduce(t, Promise.resolve([]));
}
function Br() {
    try {
        if (bt(process) && bt($n))
            return {
                apiKey: $n.XATA_API_KEY ?? jr(),
                databaseURL: $n.XATA_DATABASE_URL ?? $r(),
                branch: $n.XATA_BRANCH ?? Wr(),
                deployPreview: $n.XATA_PREVIEW,
                deployPreviewBranch: $n.XATA_PREVIEW_BRANCH,
                vercelGitCommitRef: $n.VERCEL_GIT_COMMIT_REF,
                vercelGitRepoOwner: $n.VERCEL_GIT_REPO_OWNER,
            };
    } catch {}
    try {
        if (Ke(Deno) && Ke(Deno.env))
            return {
                apiKey: Deno.env.get('XATA_API_KEY') ?? jr(),
                databaseURL: Deno.env.get('XATA_DATABASE_URL') ?? $r(),
                branch: Deno.env.get('XATA_BRANCH') ?? Wr(),
                deployPreview: Deno.env.get('XATA_PREVIEW'),
                deployPreviewBranch: Deno.env.get('XATA_PREVIEW_BRANCH'),
                vercelGitCommitRef: Deno.env.get('VERCEL_GIT_COMMIT_REF'),
                vercelGitRepoOwner: Deno.env.get('VERCEL_GIT_REPO_OWNER'),
            };
    } catch {}
    return {
        apiKey: jr(),
        databaseURL: $r(),
        branch: Wr(),
        deployPreview: void 0,
        deployPreviewBranch: void 0,
        vercelGitCommitRef: void 0,
        vercelGitRepoOwner: void 0,
    };
}
function S1() {
    try {
        if (Ke(process) && Ke($n) && $n.XATA_ENABLE_BROWSER !== void 0)
            return $n.XATA_ENABLE_BROWSER === 'true';
    } catch {}
    try {
        if (
            Ke(Deno) &&
            Ke(Deno.env) &&
            Deno.env.get('XATA_ENABLE_BROWSER') !== void 0
        )
            return Deno.env.get('XATA_ENABLE_BROWSER') === 'true';
    } catch {}
    try {
        return XATA_ENABLE_BROWSER === !0 || XATA_ENABLE_BROWSER === 'true';
    } catch {
        return;
    }
}
function jr() {
    try {
        return XATA_API_KEY;
    } catch {
        return;
    }
}
function $r() {
    try {
        return XATA_DATABASE_URL;
    } catch {
        return;
    }
}
function Wr() {
    try {
        return XATA_BRANCH;
    } catch {
        return;
    }
}
function B1() {
    try {
        const { databaseURL: o } = Br();
        return o;
    } catch {
        return;
    }
}
function I1() {
    try {
        const { apiKey: o } = Br();
        return o;
    } catch {
        return;
    }
}
function L1() {
    try {
        const { branch: o } = Br();
        return o;
    } catch {
        return;
    }
}
function A1({ org: o, branch: e }) {
    return `preview-${o}-${e}`;
}
function O1() {
    try {
        const {
            deployPreview: o,
            deployPreviewBranch: e,
            vercelGitCommitRef: t,
            vercelGitRepoOwner: n,
        } = Br();
        if (e) return e;
        switch (o) {
            case 'vercel': {
                if (!t || !n) {
                    console.warn(
                        'XATA_PREVIEW=vercel but VERCEL_GIT_COMMIT_REF or VERCEL_GIT_REPO_OWNER is not valid',
                    );
                    return;
                }
                return A1({ org: n, branch: t });
            }
        }
        return;
    } catch {
        return;
    }
}
var kp = (o) => {
        throw TypeError(o);
    },
    ia = (o, e, t) => e.has(o) || kp('Cannot ' + t),
    Ii = (o, e, t) => (
        ia(o, e, 'read from private field'), t ? t.call(o) : e.get(o)
    ),
    qs = (o, e, t) =>
        e.has(o) ? kp('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    Gr = (o, e, t, n) => (ia(o, e, 'write to private field'), e.set(o, t), t),
    M1 = (o, e, t) => (ia(o, e, 'access private method'), t),
    Cs,
    Ni,
    kr,
    dl,
    _p;
const P1 = 5 * 60 * 1e3;
function N1(o) {
    const e = typeof fetch < 'u' ? fetch : void 0,
        t = typeof globalThis < 'u' ? globalThis.fetch : void 0,
        n = o ?? e ?? t;
    if (!n)
        throw new Error(
            "Couldn't find a global `fetch`. Pass a fetch implementation explicitly.",
        );
    return n;
}
class R1 {
    constructor(e = 10) {
        qs(this, dl),
            qs(this, Cs),
            qs(this, Ni),
            qs(this, kr),
            Gr(this, Ni, []),
            Gr(this, kr, e),
            (this.running = 0),
            (this.started = 0);
    }
    setFetch(e) {
        Gr(this, Cs, e);
    }
    getFetch() {
        if (!Ii(this, Cs)) throw new Error('Fetch not set');
        return Ii(this, Cs);
    }
    request(e, t) {
        const n = new Date(),
            i = this.getFetch(),
            s = async (r = !1) => {
                const { promise: l, cancel: a } = T1(P1),
                    c = await Promise.race([
                        i(e, t),
                        l.then(() => null),
                    ]).finally(a);
                if (!c) throw new Error('Request timed out');
                if (c.status === 429) {
                    const h = x1(c.headers?.get('x-ratelimit-reset')) ?? 1;
                    return await E1(h * 1e3), await s(!0);
                }
                if (r) {
                    const h = new Date().getTime() - n.getTime();
                    console.warn(
                        `A request to Xata hit branch rate limits, was retried and stalled for ${h}ms`,
                    );
                }
                return c;
            };
        return M1(this, dl, _p).call(this, async () => await s());
    }
}
Cs = new WeakMap();
Ni = new WeakMap();
kr = new WeakMap();
dl = new WeakSet();
_p = function (o) {
    const e = new Promise((t) => Ii(this, Ni).push(t))
        .finally(() => {
            this.started--, this.running++;
        })
        .then(() => o())
        .finally(() => {
            this.running--;
            const t = Ii(this, Ni).shift();
            t !== void 0 && (this.started++, t());
        });
    if (this.running + this.started < Ii(this, kr)) {
        const t = Ii(this, Ni).shift();
        t !== void 0 && (this.started++, t());
    }
    return e;
};
function zs() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(
        /[xy]/g,
        function (o) {
            const e = (Math.random() * 16) | 0;
            return (o == 'x' ? e : (e & 3) | 8).toString(16);
        },
    );
}
async function D1(o, e) {
    const t = o.getReader();
    let n;
    for (; !(n = await t.read()).done; ) e(n.value);
}
function F1(o) {
    let e,
        t,
        n,
        i = !1;
    return function (r) {
        e === void 0 ? ((e = r), (t = 0), (n = -1)) : (e = z1(e, r));
        const l = e.length;
        let a = 0;
        for (; t < l; ) {
            i && (e[t] === 10 && (a = ++t), (i = !1));
            let c = -1;
            for (; t < l && c === -1; ++t)
                switch (e[t]) {
                    case 58:
                        n === -1 && (n = t - a);
                        break;
                    case 13:
                        i = !0;
                    case 10:
                        c = t;
                        break;
                }
            if (c === -1) break;
            o(e.subarray(a, c), n), (a = t), (n = -1);
        }
        a === l ? (e = void 0) : a !== 0 && ((e = e.subarray(a)), (t -= a));
    };
}
function H1(o, e, t) {
    let n = ac();
    const i = new TextDecoder();
    return function (r, l) {
        if (r.length === 0) t?.(n), (n = ac());
        else if (l > 0) {
            const a = i.decode(r.subarray(0, l)),
                c = l + (r[l + 1] === 32 ? 2 : 1),
                h = i.decode(r.subarray(c));
            switch (a) {
                case 'data':
                    n.data =
                        n.data ?
                            n.data +
                            `
` +
                            h
                        :   h;
                    break;
                case 'event':
                    n.event = h;
                    break;
                case 'id':
                    o((n.id = h));
                    break;
                case 'retry':
                    const u = parseInt(h, 10);
                    isNaN(u) || e((n.retry = u));
                    break;
            }
        }
    };
}
function z1(o, e) {
    const t = new Uint8Array(o.length + e.length);
    return t.set(o), t.set(e, o.length), t;
}
function ac() {
    return { data: '', event: '', id: '', retry: void 0 };
}
const ul = 'text/event-stream',
    cc = 'last-event-id';
function U1(
    o,
    {
        signal: e,
        headers: t,
        onopen: n,
        onmessage: i,
        onclose: s,
        onerror: r,
        fetch: l,
        ...a
    },
) {
    return new Promise((c, h) => {
        const u = { ...t };
        u.accept || (u.accept = ul);
        let p;
        function b() {
            p.abort();
        }
        e?.addEventListener('abort', () => {
            b(), c();
        });
        const m = l ?? fetch,
            k = n ?? j1;
        async function y() {
            p = new AbortController();
            try {
                const w = await m(o, { ...a, headers: u, signal: p.signal });
                await k(w),
                    await D1(
                        w.body,
                        F1(
                            H1(
                                (E) => {
                                    E ? (u[cc] = E) : delete u[cc];
                                },
                                (E) => {},
                                i,
                            ),
                        ),
                    ),
                    s?.(),
                    b(),
                    c();
            } catch {}
        }
        y();
    });
}
function j1(o) {
    const e = o.headers?.get('content-type');
    if (!e?.startsWith(ul))
        throw new Error(`Expected content-type to be ${ul}, Actual: ${e}`);
}
const sa = '0.30.0';
class $1 extends Error {
    constructor(e, t) {
        super(e, t);
    }
}
class qr extends $1 {
    constructor(e, t, n) {
        super(hc(t)),
            (this.status = e),
            (this.errors = xp(t) ? t.errors : [{ message: hc(t), status: e }]),
            (this.requestId = n),
            t instanceof Error &&
                ((this.stack = t.stack), (this.cause = t.cause));
    }
    toString() {
        const e = super.toString();
        return `[${this.status}] (${this.requestId ?? 'Unknown'}): ${e}`;
    }
}
function xp(o) {
    return Ke(o) && Array.isArray(o.errors);
}
function W1(o) {
    return Ke(o) && rt(o.message);
}
function hc(o) {
    return (
        o instanceof Error ? o.message
        : rt(o) ? o
        : W1(o) ? o.message
        : xp(o) ? 'Bulk operation failed'
        : 'Unexpected error'
    );
}
const G1 = {
    production: {
        main: 'https://api.xata.io',
        workspaces: 'https://{workspaceId}.{region}.xata.sh',
    },
    staging: {
        main: 'https://api.staging-xata.dev',
        workspaces: 'https://{workspaceId}.{region}.staging-xata.dev',
    },
    dev: {
        main: 'https://api.dev-xata.dev',
        workspaces: 'https://{workspaceId}.{region}.dev-xata.dev',
    },
    local: {
        main: 'http://localhost:6001',
        workspaces: 'http://{workspaceId}.{region}.localhost:6001',
    },
};
function q1(o) {
    return rt(o) && Object.keys(G1).includes(o);
}
function Cp(o) {
    if (!rt(o)) return null;
    const e = {
            production: o.match(
                /(?:https:\/\/)?([^.]+)(?:\.([^.]+))\.xata\.sh\/db\/([^:]+):?(.*)?/,
            ),
            staging: o.match(
                /(?:https:\/\/)?([^.]+)(?:\.([^.]+))\.staging-xata\.dev\/db\/([^:]+):?(.*)?/,
            ),
            dev: o.match(
                /(?:https:\/\/)?([^.]+)(?:\.([^.]+))\.dev-xata\.dev\/db\/([^:]+):?(.*)?/,
            ),
            local: o.match(
                /(?:https?:\/\/)?([^.]+)(?:\.([^.]+))\.localhost:(?:\d+)\/db\/([^:]+):?(.*)?/,
            ),
        },
        [t, n] = Object.entries(e).find(([, i]) => i !== null) ?? [];
    return !q1(t) || !n ?
            null
        :   {
                workspace: n[1],
                region: n[2],
                database: n[3],
                branch: n[4],
                host: t,
            };
}
const dc = new R1(),
    pl = (o, e = {}, t = {}) => {
        const n = Object.entries(e).reduce(
                (l, [a, c]) => (c == null ? l : { ...l, [a]: c }),
                {},
            ),
            i = new URLSearchParams(n).toString(),
            s = i.length > 0 ? `?${i}` : '',
            r = Object.entries(t).reduce(
                (l, [a, c]) => ({
                    ...l,
                    [a]: encodeURIComponent(String(c ?? '')).replace(
                        '%3A',
                        ':',
                    ),
                }),
                {},
            );
        return o.replace(/\{\w*\}/g, (l) => r[l.slice(1, -1)]) + s;
    };
function Ep({
    method: o,
    endpoint: e,
    path: t,
    workspacesApiUrl: n,
    apiUrl: i,
    pathParams: s = {},
}) {
    if (e === 'dataPlane') {
        let r = rt(n) ? `${n}${t}` : n(t, s);
        if (
            o.toUpperCase() === 'PUT' &&
            [
                '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
                '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
            ].includes(t)
        ) {
            const { host: a } = Cp(r) ?? {};
            switch (a) {
                case 'production':
                    r = r.replace('xata.sh', 'upload.xata.sh');
                    break;
                case 'staging':
                    r = r.replace(
                        'staging-xata.dev',
                        'upload.staging-xata.dev',
                    );
                    break;
                case 'dev':
                    r = r.replace('dev-xata.dev', 'upload.dev-xata.dev');
                    break;
            }
        }
        const l =
            rt(s.workspace) ?
                r.replace('{workspaceId}', String(s.workspace))
            :   r;
        return rt(s.region) ? l.replace('{region}', String(s.region)) : l;
    }
    return `${i}${t}`;
}
function V1(o) {
    const e = /.*:\/\/(?<host>[^/]+).*/,
        { groups: t } = e.exec(o) ?? {};
    return t?.host ? { Host: t.host } : {};
}
async function Y1(o, e) {
    if (!bt(o)) return;
    if (ta(o) || typeof o.text == 'function') return o;
    const { 'Content-Type': t } = e ?? {};
    return String(t).toLowerCase() === 'application/json' && Ke(o) ?
            JSON.stringify(o)
        :   o;
}
const Tp = zs();
async function Sp({
    url: o,
    method: e,
    body: t,
    headers: n,
    pathParams: i,
    queryParams: s,
    fetch: r,
    apiKey: l,
    endpoint: a,
    apiUrl: c,
    workspacesApiUrl: h,
    trace: u,
    signal: p,
    clientID: b,
    sessionID: m,
    clientName: k,
    xataAgentExtra: y,
    fetchOptions: w = {},
    rawResponse: E = !1,
}) {
    return (
        dc.setFetch(r),
        await u(
            `${e.toUpperCase()} ${o}`,
            async ({ setAttributes: _ }) => {
                const B = Ep({
                        method: e,
                        endpoint: a,
                        path: o,
                        workspacesApiUrl: h,
                        pathParams: i,
                        apiUrl: c,
                    }),
                    O = pl(B, s, i),
                    P =
                        O.includes('localhost') ?
                            O.replace(/^[^.]+\.[^.]+\./, 'http://')
                        :   O;
                _({ [En.HTTP_URL]: P, [En.HTTP_TARGET]: pl(o, s, i) });
                const H = vo([
                        ['client', 'TS_SDK'],
                        ['version', sa],
                        bt(k) ? ['service', k] : void 0,
                        ...Object.entries(y ?? {}),
                    ])
                        .map(([G, L]) => `${G}=${L}`)
                        .join('; '),
                    T = bp({
                        'Accept-Encoding': 'identity',
                        'Content-Type': 'application/json',
                        'X-Xata-Client-ID': b ?? Tp,
                        'X-Xata-Session-ID': m ?? zs(),
                        'X-Xata-Agent': H,
                        ...n,
                        ...V1(O),
                        Authorization: `Bearer ${l}`,
                    }),
                    S = await dc.request(P, {
                        ...w,
                        method: e.toUpperCase(),
                        body: await Y1(t, T),
                        headers: T,
                        signal: p,
                    }),
                    { host: A, protocol: $ } = X1(S.url),
                    K = S.headers?.get('x-request-id') ?? void 0;
                _({
                    [En.KIND]: 'http',
                    [En.HTTP_REQUEST_ID]: K,
                    [En.HTTP_STATUS_CODE]: S.status,
                    [En.HTTP_HOST]: A,
                    [En.HTTP_SCHEME]: $?.replace(':', ''),
                    [En.CLOUDFLARE_RAY_ID]: S.headers?.get('cf-ray') ?? void 0,
                });
                const W = S.headers?.get('x-xata-message');
                if ((W && console.warn(W), S.status === 204)) return {};
                if (S.status === 429)
                    throw new qr(S.status, 'Rate limit exceeded', K);
                try {
                    const G = E ? await S.blob() : await S.json();
                    if (S.ok) return G;
                    throw new qr(S.status, G, K);
                } catch (G) {
                    throw new qr(S.status, G, K);
                }
            },
            { [En.HTTP_METHOD]: e.toUpperCase(), [En.HTTP_ROUTE]: o },
        )
    );
}
function K1({
    url: o,
    method: e,
    body: t,
    headers: n,
    pathParams: i,
    queryParams: s,
    fetch: r,
    apiKey: l,
    endpoint: a,
    apiUrl: c,
    workspacesApiUrl: h,
    onMessage: u,
    onError: p,
    onClose: b,
    signal: m,
    clientID: k,
    sessionID: y,
    clientName: w,
    xataAgentExtra: E,
}) {
    const _ = Ep({
            method: e,
            endpoint: a,
            path: o,
            workspacesApiUrl: h,
            pathParams: i,
            apiUrl: c,
        }),
        B = pl(_, s, i),
        O = B.includes('localhost') ? B.replace(/^[^.]+\./, 'http://') : B;
    U1(O, {
        method: e,
        body: JSON.stringify(t),
        fetch: r,
        signal: m,
        headers: {
            'X-Xata-Client-ID': k ?? Tp,
            'X-Xata-Session-ID': y ?? zs(),
            'X-Xata-Agent': vo([
                ['client', 'TS_SDK'],
                ['version', sa],
                bt(w) ? ['service', w] : void 0,
                ...Object.entries(E ?? {}),
            ])
                .map(([P, H]) => `${P}=${H}`)
                .join('; '),
            ...n,
            Authorization: `Bearer ${l}`,
            'Content-Type': 'application/json',
        },
        onmessage(P) {
            u?.(JSON.parse(P.data));
        },
        onerror(P) {
            p?.(JSON.parse(P.data));
        },
        onclose() {
            b?.();
        },
    });
}
function X1(o) {
    try {
        const { host: e, protocol: t } = new URL(o);
        return { host: e, protocol: t };
    } catch {
        return {};
    }
}
const be = async (o) => Sp({ ...o, endpoint: 'dataPlane' }),
    Z1 = (o, e) =>
        be({
            url: '/cluster/{clusterId}/branches',
            method: 'get',
            ...o,
            signal: e,
        }),
    J1 = (o, e) =>
        be({
            url: '/cluster/{clusterId}/extensions',
            method: 'get',
            ...o,
            signal: e,
        }),
    Q1 = (o, e) =>
        be({
            url: '/cluster/{clusterId}/extensions',
            method: 'post',
            ...o,
            signal: e,
        }),
    ew = (o, e) =>
        be({
            url: '/cluster/{clusterId}/extensions',
            method: 'delete',
            ...o,
            signal: e,
        }),
    tw = (o, e) =>
        be({
            url: '/cluster/{clusterId}/metrics',
            method: 'get',
            ...o,
            signal: e,
        }),
    nw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/apply',
            method: 'post',
            ...o,
            signal: e,
        }),
    ow = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/start',
            method: 'post',
            ...o,
            signal: e,
        }),
    iw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/complete',
            method: 'post',
            ...o,
            signal: e,
        }),
    sw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/rollback',
            method: 'post',
            ...o,
            signal: e,
        }),
    rw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/adapt/{tableName}',
            method: 'post',
            ...o,
            signal: e,
        }),
    lw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/adapt',
            method: 'post',
            ...o,
            signal: e,
        }),
    aw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/status',
            method: 'get',
            ...o,
            signal: e,
        }),
    cw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/jobs',
            method: 'get',
            ...o,
            signal: e,
        }),
    hw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/jobs/{jobId}',
            method: 'get',
            ...o,
            signal: e,
        }),
    dw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/history',
            method: 'get',
            ...o,
            signal: e,
        }),
    uw = (o, e) => be({ url: '/dbs/{dbName}', method: 'get', ...o, signal: e }),
    pw = (o, e) =>
        be({ url: '/dbs/{dbName}/settings', method: 'get', ...o, signal: e }),
    fw = (o, e) =>
        be({ url: '/dbs/{dbName}/settings', method: 'patch', ...o, signal: e }),
    Bp = (o, e) =>
        be({ url: '/db/{dbBranchName}', method: 'get', ...o, signal: e }),
    gw = (o, e) =>
        be({ url: '/db/{dbBranchName}', method: 'put', ...o, signal: e }),
    mw = (o, e) =>
        be({ url: '/db/{dbBranchName}', method: 'delete', ...o, signal: e }),
    bw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema',
            method: 'get',
            ...o,
            signal: e,
        }),
    ww = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schemas',
            method: 'get',
            ...o,
            signal: e,
        }),
    yw = (o, e) =>
        be({ url: '/db/{dbBranchName}/copy', method: 'post', ...o, signal: e }),
    vw = (o, e) =>
        be({ url: '/db/{dbBranchName}/move', method: 'get', ...o, signal: e }),
    kw = (o, e) =>
        be({ url: '/db/{dbBranchName}/move', method: 'put', ...o, signal: e }),
    _w = (o, e) =>
        be({
            url: '/db/{dbBranchName}/metadata',
            method: 'put',
            ...o,
            signal: e,
        }),
    xw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/metadata',
            method: 'get',
            ...o,
            signal: e,
        }),
    Cw = (o, e) =>
        be({ url: '/db/{dbBranchName}/stats', method: 'get', ...o, signal: e }),
    Ew = (o, e) =>
        be({
            url: '/dbs/{dbName}/gitBranches',
            method: 'get',
            ...o,
            signal: e,
        }),
    Tw = (o, e) =>
        be({
            url: '/dbs/{dbName}/gitBranches',
            method: 'post',
            ...o,
            signal: e,
        }),
    Sw = (o, e) =>
        be({
            url: '/dbs/{dbName}/gitBranches',
            method: 'delete',
            ...o,
            signal: e,
        }),
    Bw = (o, e) =>
        be({
            url: '/dbs/{dbName}/resolveBranch',
            method: 'get',
            ...o,
            signal: e,
        }),
    Iw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations',
            method: 'get',
            ...o,
            signal: e,
        }),
    Lw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/plan',
            method: 'post',
            ...o,
            signal: e,
        }),
    Aw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/migrations/execute',
            method: 'post',
            ...o,
            signal: e,
        }),
    Ow = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/query',
            method: 'post',
            ...o,
            signal: e,
        }),
    Mw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations',
            method: 'post',
            ...o,
            signal: e,
        }),
    Pw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/{mrNumber}',
            method: 'get',
            ...o,
            signal: e,
        }),
    Nw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/{mrNumber}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    Rw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/{mrNumber}/commits',
            method: 'post',
            ...o,
            signal: e,
        }),
    Dw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/{mrNumber}/compare',
            method: 'post',
            ...o,
            signal: e,
        }),
    Fw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/{mrNumber}/merge',
            method: 'get',
            ...o,
            signal: e,
        }),
    Hw = (o, e) =>
        be({
            url: '/dbs/{dbName}/migrations/{mrNumber}/merge',
            method: 'post',
            ...o,
            signal: e,
        }),
    zw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/history',
            method: 'post',
            ...o,
            signal: e,
        }),
    Uw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/compare',
            method: 'post',
            ...o,
            signal: e,
        }),
    jw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/compare/{branchName}',
            method: 'post',
            ...o,
            signal: e,
        }),
    $w = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/update',
            method: 'post',
            ...o,
            signal: e,
        }),
    Ww = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/preview',
            method: 'post',
            ...o,
            signal: e,
        }),
    Gw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/apply',
            method: 'post',
            ...o,
            signal: e,
        }),
    qw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/schema/push',
            method: 'post',
            ...o,
            signal: e,
        }),
    Vw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}',
            method: 'put',
            ...o,
            signal: e,
        }),
    Yw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    Kw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    Xw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/schema',
            method: 'get',
            ...o,
            signal: e,
        }),
    Zw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/schema',
            method: 'put',
            ...o,
            signal: e,
        }),
    Jw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/columns',
            method: 'get',
            ...o,
            signal: e,
        }),
    Qw = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/columns',
            method: 'post',
            ...o,
            signal: e,
        }),
    e0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/columns/{columnName}',
            method: 'get',
            ...o,
            signal: e,
        }),
    t0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/columns/{columnName}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    n0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/columns/{columnName}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    Us = (o, e) =>
        be({
            url: '/db/{dbBranchName}/transaction',
            method: 'post',
            ...o,
            signal: e,
        }),
    Ip = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data',
            method: 'post',
            ...o,
            signal: e,
        }),
    Lp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
            method: 'get',
            ...o,
            signal: e,
        }),
    Ap = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
            method: 'put',
            ...o,
            signal: e,
        }),
    Op = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    o0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
            method: 'get',
            ...o,
            signal: e,
        }),
    i0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
            method: 'put',
            ...o,
            signal: e,
        }),
    s0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
            method: 'delete',
            ...o,
            signal: e,
        }),
    Mp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
            method: 'get',
            ...o,
            signal: e,
        }),
    Pp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
            method: 'put',
            ...o,
            signal: e,
        }),
    Np = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    Rp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
            method: 'post',
            ...o,
            signal: e,
        }),
    Dp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    r0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/bulk',
            method: 'post',
            ...o,
            signal: e,
        }),
    Fp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/query',
            method: 'post',
            ...o,
            signal: e,
        }),
    Hp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/search',
            method: 'post',
            ...o,
            signal: e,
        }),
    zp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/search',
            method: 'post',
            ...o,
            signal: e,
        }),
    Up = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/vectorSearch',
            method: 'post',
            ...o,
            signal: e,
        }),
    l0 = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/ask',
            method: 'post',
            ...o,
            signal: e,
        }),
    jp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/ask/{sessionId}',
            method: 'post',
            ...o,
            signal: e,
        }),
    $p = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/summarize',
            method: 'post',
            ...o,
            signal: e,
        }),
    Wp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/tables/{tableName}/aggregate',
            method: 'post',
            ...o,
            signal: e,
        }),
    a0 = (o, e) =>
        be({ url: '/file/{fileId}', method: 'get', ...o, signal: e }),
    c0 = (o, e) =>
        be({ url: '/file/{fileId}', method: 'put', ...o, signal: e }),
    Gp = (o, e) =>
        be({ url: '/db/{dbBranchName}/sql', method: 'post', ...o, signal: e }),
    qp = (o, e) =>
        be({
            url: '/db/{dbBranchName}/sql/batch',
            method: 'post',
            ...o,
            signal: e,
        }),
    h0 = {
        cluster: {
            listClusterBranches: Z1,
            listClusterExtensions: J1,
            installClusterExtension: Q1,
            dropClusterExtension: ew,
            getClusterMetrics: tw,
        },
        migrations: {
            applyMigration: nw,
            startMigration: ow,
            completeMigration: iw,
            rollbackMigration: sw,
            adaptTable: rw,
            adaptAllTables: lw,
            getBranchMigrationJobStatus: aw,
            getMigrationJobs: cw,
            getMigrationJobStatus: hw,
            getMigrationHistory: dw,
            getSchema: bw,
            getSchemas: ww,
            getBranchMigrationHistory: Iw,
            getBranchMigrationPlan: Lw,
            executeBranchMigrationPlan: Aw,
            getBranchSchemaHistory: zw,
            compareBranchWithUserSchema: Uw,
            compareBranchSchemas: jw,
            updateBranchSchema: $w,
            previewBranchSchemaEdit: Ww,
            applyBranchSchemaEdit: Gw,
            pushBranchMigrations: qw,
        },
        branch: {
            getBranchList: uw,
            getBranchDetails: Bp,
            createBranch: gw,
            deleteBranch: mw,
            copyBranch: yw,
            getBranchMoveStatus: vw,
            moveBranch: kw,
            updateBranchMetadata: _w,
            getBranchMetadata: xw,
            getBranchStats: Cw,
            getGitBranchesMapping: Ew,
            addGitBranchesEntry: Tw,
            removeGitBranchesEntry: Sw,
            resolveBranch: Bw,
        },
        database: { getDatabaseSettings: pw, updateDatabaseSettings: fw },
        migrationRequests: {
            queryMigrationRequests: Ow,
            createMigrationRequest: Mw,
            getMigrationRequest: Pw,
            updateMigrationRequest: Nw,
            listMigrationRequestsCommits: Rw,
            compareMigrationRequest: Dw,
            getMigrationRequestIsMerged: Fw,
            mergeMigrationRequest: Hw,
        },
        table: {
            createTable: Vw,
            deleteTable: Yw,
            updateTable: Kw,
            getTableSchema: Xw,
            setTableSchema: Zw,
            getTableColumns: Jw,
            addTableColumn: Qw,
            getColumn: e0,
            updateColumn: t0,
            deleteColumn: n0,
        },
        records: {
            branchTransaction: Us,
            insertRecord: Ip,
            getRecord: Mp,
            insertRecordWithID: Pp,
            updateRecordWithID: Np,
            upsertRecordWithID: Rp,
            deleteRecord: Dp,
            bulkInsertTableRecords: r0,
        },
        files: {
            getFileItem: Lp,
            putFileItem: Ap,
            deleteFileItem: Op,
            getFile: o0,
            putFile: i0,
            deleteFile: s0,
            fileAccess: a0,
            fileUpload: c0,
        },
        searchAndFilter: {
            queryTable: Fp,
            searchBranch: Hp,
            searchTable: zp,
            vectorSearchTable: Up,
            askTable: l0,
            askTableSession: jp,
            summarizeTable: $p,
            aggregateTable: Wp,
        },
        sql: { sqlQuery: Gp, sqlBatchQuery: qp },
    },
    Xe = async (o) => Sp({ ...o, endpoint: 'controlPlane' }),
    d0 = (o, e) =>
        Xe({ url: '/oauth/authorize', method: 'get', ...o, signal: e }),
    u0 = (o, e) =>
        Xe({ url: '/oauth/authorize', method: 'post', ...o, signal: e }),
    p0 = (o, e) => Xe({ url: '/user', method: 'get', ...o, signal: e }),
    f0 = (o, e) => Xe({ url: '/user', method: 'put', ...o, signal: e }),
    g0 = (o, e) => Xe({ url: '/user', method: 'delete', ...o, signal: e }),
    m0 = (o, e) => Xe({ url: '/user/keys', method: 'get', ...o, signal: e }),
    b0 = (o, e) =>
        Xe({ url: '/user/keys/{keyName}', method: 'post', ...o, signal: e }),
    w0 = (o, e) =>
        Xe({ url: '/user/keys/{keyName}', method: 'delete', ...o, signal: e }),
    y0 = (o, e) =>
        Xe({ url: '/user/oauth/clients', method: 'get', ...o, signal: e }),
    v0 = (o, e) =>
        Xe({
            url: '/user/oauth/clients/{clientId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    k0 = (o, e) =>
        Xe({ url: '/user/oauth/tokens', method: 'get', ...o, signal: e }),
    _0 = (o, e) =>
        Xe({
            url: '/user/oauth/tokens/{token}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    x0 = (o, e) =>
        Xe({
            url: '/user/oauth/tokens/{token}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    C0 = (o, e) => Xe({ url: '/workspaces', method: 'get', ...o, signal: e }),
    E0 = (o, e) => Xe({ url: '/workspaces', method: 'post', ...o, signal: e }),
    T0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}',
            method: 'get',
            ...o,
            signal: e,
        }),
    S0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}',
            method: 'put',
            ...o,
            signal: e,
        }),
    B0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    I0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/settings',
            method: 'get',
            ...o,
            signal: e,
        }),
    L0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/settings',
            method: 'patch',
            ...o,
            signal: e,
        }),
    A0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/members',
            method: 'get',
            ...o,
            signal: e,
        }),
    O0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/members/{userId}',
            method: 'put',
            ...o,
            signal: e,
        }),
    M0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/members/{userId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    P0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/invites',
            method: 'post',
            ...o,
            signal: e,
        }),
    N0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/invites/{inviteId}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    R0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/invites/{inviteId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    D0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/invites/{inviteKey}/accept',
            method: 'post',
            ...o,
            signal: e,
        }),
    F0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/invites/{inviteId}/resend',
            method: 'post',
            ...o,
            signal: e,
        }),
    H0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/clusters',
            method: 'get',
            ...o,
            signal: e,
        }),
    z0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/clusters',
            method: 'post',
            ...o,
            signal: e,
        }),
    U0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/clusters/{clusterId}',
            method: 'get',
            ...o,
            signal: e,
        }),
    j0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/clusters/{clusterId}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    $0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/clusters/{clusterId}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    W0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs',
            method: 'get',
            ...o,
            signal: e,
        }),
    G0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}',
            method: 'put',
            ...o,
            signal: e,
        }),
    q0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}',
            method: 'delete',
            ...o,
            signal: e,
        }),
    V0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}',
            method: 'get',
            ...o,
            signal: e,
        }),
    Y0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}',
            method: 'patch',
            ...o,
            signal: e,
        }),
    K0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}/rename',
            method: 'post',
            ...o,
            signal: e,
        }),
    X0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}/github',
            method: 'get',
            ...o,
            signal: e,
        }),
    Z0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}/github',
            method: 'put',
            ...o,
            signal: e,
        }),
    J0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/dbs/{dbName}/github',
            method: 'delete',
            ...o,
            signal: e,
        }),
    Q0 = (o, e) =>
        Xe({
            url: '/workspaces/{workspaceId}/regions',
            method: 'get',
            ...o,
            signal: e,
        }),
    ey = {
        oAuth: {
            getAuthorizationCode: d0,
            grantAuthorizationCode: u0,
            getUserOAuthClients: y0,
            deleteUserOAuthClient: v0,
            getUserOAuthAccessTokens: k0,
            deleteOAuthAccessToken: _0,
            updateOAuthAccessToken: x0,
        },
        users: { getUser: p0, updateUser: f0, deleteUser: g0 },
        authentication: {
            getUserAPIKeys: m0,
            createUserAPIKey: b0,
            deleteUserAPIKey: w0,
        },
        workspaces: {
            getWorkspacesList: C0,
            createWorkspace: E0,
            getWorkspace: T0,
            updateWorkspace: S0,
            deleteWorkspace: B0,
            getWorkspaceSettings: I0,
            updateWorkspaceSettings: L0,
            getWorkspaceMembersList: A0,
            updateWorkspaceMemberRole: O0,
            removeWorkspaceMember: M0,
        },
        invites: {
            inviteWorkspaceMember: P0,
            updateWorkspaceMemberInvite: N0,
            cancelWorkspaceMemberInvite: R0,
            acceptWorkspaceMemberInvite: D0,
            resendWorkspaceMemberInvite: F0,
        },
        xbcontrolOther: {
            listClusters: H0,
            createCluster: z0,
            getCluster: U0,
            updateCluster: j0,
            deleteCluster: $0,
        },
        databases: {
            getDatabaseList: W0,
            createDatabase: G0,
            deleteDatabase: q0,
            getDatabaseMetadata: V0,
            updateDatabaseMetadata: Y0,
            renameDatabase: K0,
            getDatabaseGithubSettings: X0,
            updateDatabaseGithubSettings: Z0,
            deleteDatabaseGithubSettings: J0,
            listRegions: Q0,
        },
    };
vp(h0, ey);
class js {}
function ty(o) {
    return o
        .flatMap((e) =>
            Object.entries(e).map(([t, n]) => {
                if (t === 'trim') {
                    const {
                        left: i = 0,
                        top: s = 0,
                        right: r = 0,
                        bottom: l = 0,
                    } = n;
                    return `${t}=${[s, r, l, i].join(';')}`;
                }
                if (t === 'gravity' && typeof n == 'object') {
                    const { x: i = 0.5, y: s = 0.5 } = n;
                    return `${t}=${[i, s].join('x')}`;
                }
                return `${t}=${n}`;
            }),
        )
        .join(',');
}
function Vs(o, ...e) {
    if (!bt(o)) return;
    const t = ty(e),
        { hostname: n, pathname: i, search: s } = new URL(o),
        r = i.split('/'),
        l = r.findIndex((u) => u === 'transform'),
        c = `/transform/${[(l >= 0 ? r.splice(l, 2) : [])[1], t].filter(bt).join(',')}`,
        h = r.join('/');
    return `https://${n}${c}${h}${s}`;
}
class Ho {
    constructor(e) {
        (this.id = e.id),
            (this.name = e.name),
            (this.mediaType = e.mediaType),
            (this.base64Content = e.base64Content),
            (this.enablePublicUrl = e.enablePublicUrl),
            (this.signedUrlTimeout = e.signedUrlTimeout),
            (this.uploadUrlTimeout = e.uploadUrlTimeout),
            (this.size = e.size),
            (this.version = e.version),
            (this.url = e.url),
            (this.signedUrl = e.signedUrl),
            (this.uploadUrl = e.uploadUrl),
            (this.attributes = e.attributes);
    }
    static fromBuffer(e, t = {}) {
        const n = e.toString('base64');
        return new Ho({ ...t, base64Content: n });
    }
    toBuffer() {
        if (!this.base64Content)
            throw new Error(
                'File content is not available, please select property "base64Content" when querying the file',
            );
        return le.from(this.base64Content, 'base64');
    }
    static fromArrayBuffer(e, t = {}) {
        const n = new Uint8Array(e);
        return this.fromUint8Array(n, t);
    }
    toArrayBuffer() {
        if (!this.base64Content)
            throw new Error(
                'File content is not available, please select property "base64Content" when querying the file',
            );
        const e = atob(this.base64Content);
        return new ArrayBuffer(e.length);
    }
    static fromUint8Array(e, t = {}) {
        let n = '';
        for (let s = 0; s < e.byteLength; s++) n += String.fromCharCode(e[s]);
        const i = btoa(n);
        return new Ho({ ...t, base64Content: i });
    }
    toUint8Array() {
        if (!this.base64Content)
            throw new Error(
                'File content is not available, please select property "base64Content" when querying the file',
            );
        const e = atob(this.base64Content),
            t = new Uint8Array(e.length);
        for (let n = 0; n < e.length; n++) t[n] = e.charCodeAt(n);
        return t;
    }
    static async fromBlob(e, t = {}) {
        const n = t.name ?? e.name,
            i = e.type,
            s = await e.arrayBuffer();
        return this.fromArrayBuffer(s, { ...t, name: n, mediaType: i });
    }
    toBlob() {
        if (!this.base64Content)
            throw new Error(
                'File content is not available, please select property "base64Content" when querying the file',
            );
        const e = atob(this.base64Content),
            t = new Uint8Array(e.length);
        for (let n = 0; n < e.length; n++) t[n] = e.charCodeAt(n);
        return new Blob([t], { type: this.mediaType });
    }
    static fromString(e, t = {}) {
        const n = btoa(e);
        return new Ho({ ...t, base64Content: n });
    }
    toString() {
        if (!this.base64Content)
            throw new Error(
                'File content is not available, please select property "base64Content" when querying the file',
            );
        return atob(this.base64Content);
    }
    static fromBase64(e, t = {}) {
        return new Ho({ ...t, base64Content: e });
    }
    toBase64() {
        if (!this.base64Content)
            throw new Error(
                'File content is not available, please select property "base64Content" when querying the file',
            );
        return this.base64Content;
    }
    transform(...e) {
        return {
            url: Vs(this.url, ...e),
            signedUrl: Vs(this.signedUrl, ...e),
            metadataUrl: Vs(this.url, ...e, { format: 'json' }),
            metadataSignedUrl: Vs(this.signedUrl, ...e, { format: 'json' }),
        };
    }
}
const uc = async (o) => {
    if (!bt(o)) return null;
    const {
        id: e,
        name: t,
        mediaType: n,
        base64Content: i,
        enablePublicUrl: s,
        signedUrlTimeout: r,
        uploadUrlTimeout: l,
    } = await o;
    return bp({
        id: e,
        name: t || void 0,
        mediaType: n,
        base64Content: i,
        enablePublicUrl: s,
        signedUrlTimeout: r,
        uploadUrlTimeout: l,
    });
};
function _r(o) {
    if (!bt(o)) return;
    if (!Ke(o)) return o;
    const e = Object.fromEntries(
        Object.entries(o).reduce((t, [n, i]) => {
            if (!bt(i)) return t;
            if (Array.isArray(i)) {
                const s = i.map((r) => _r(r)).filter((r) => bt(r));
                return s.length === 0 ? t : [...t, [n, s]];
            }
            if (Ke(i)) {
                const s = _r(i);
                return bt(s) ? [...t, [n, s]] : t;
            }
            return [...t, [n, i]];
        }, []),
    );
    return Object.keys(e).length > 0 ? e : void 0;
}
function ny(o) {
    if (!bt(o) || rt(o)) return o;
    try {
        return JSON.stringify(o);
    } catch {
        return o;
    }
}
function oy(o) {
    try {
        return JSON.parse(o);
    } catch {
        return o;
    }
}
var Vp = (o) => {
        throw TypeError(o);
    },
    Yp = (o, e, t) => e.has(o) || Vp('Cannot ' + t),
    mo = (o, e, t) => (
        Yp(o, e, 'read from private field'), t ? t.call(o) : e.get(o)
    ),
    Kp = (o, e, t) =>
        e.has(o) ? Vp('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    Xp = (o, e, t, n) => (Yp(o, e, 'write to private field'), e.set(o, t), t),
    ti,
    Po;
class pc {
    constructor(e, t, n = []) {
        Kp(this, ti),
            Xp(this, ti, e),
            (this.meta = t),
            (this.records = new fl(this, n));
    }
    async nextPage(e, t) {
        return mo(this, ti).getPaginated({
            pagination: { size: e, offset: t, after: this.meta.page.cursor },
        });
    }
    async previousPage(e, t) {
        return mo(this, ti).getPaginated({
            pagination: { size: e, offset: t, before: this.meta.page.cursor },
        });
    }
    async startPage(e, t) {
        return mo(this, ti).getPaginated({
            pagination: { size: e, offset: t, start: this.meta.page.cursor },
        });
    }
    async endPage(e, t) {
        return mo(this, ti).getPaginated({
            pagination: { size: e, offset: t, end: this.meta.page.cursor },
        });
    }
    hasNextPage() {
        return this.meta.page.more;
    }
}
ti = new WeakMap();
const Vr = 1e3,
    fc = 20;
function iy(o) {
    return bt(o) && (bt(o.start) || bt(o.end) || bt(o.after) || bt(o.before));
}
class ra extends Array {
    constructor(...e) {
        super(...ra.parseConstructorParams(...e));
    }
    static parseConstructorParams(...e) {
        if (e.length === 1 && typeof e[0] == 'number') return new Array(e[0]);
        if (e.length <= 1 && Array.isArray(e[0] ?? [])) {
            const t = e[0] ?? [];
            return new Array(...t);
        }
        return new Array(...e);
    }
    toArray() {
        return new Array(...this);
    }
    toSerializable() {
        return JSON.parse(this.toString());
    }
    toString() {
        return JSON.stringify(this.toArray());
    }
    map(e, t) {
        return this.toArray().map(e, t);
    }
}
const sy = class Ei extends Array {
    constructor(...e) {
        super(...Ei.parseConstructorParams(...e)),
            Kp(this, Po),
            Xp(
                this,
                Po,
                Ke(e[0]?.meta) ?
                    e[0]
                :   { meta: { page: { cursor: '', more: !1 } }, records: [] },
            );
    }
    static parseConstructorParams(...e) {
        if (e.length === 1 && typeof e[0] == 'number') return new Array(e[0]);
        if (e.length <= 2 && Ke(e[0]?.meta) && Array.isArray(e[1] ?? [])) {
            const t = e[1] ?? e[0].records ?? [];
            return new Array(...t);
        }
        return new Array(...e);
    }
    toArray() {
        return new Array(...this);
    }
    toSerializable() {
        return JSON.parse(this.toString());
    }
    toString() {
        return JSON.stringify(this.toArray());
    }
    map(e, t) {
        return this.toArray().map(e, t);
    }
    async nextPage(e, t) {
        const n = await mo(this, Po).nextPage(e, t);
        return new Ei(n);
    }
    async previousPage(e, t) {
        const n = await mo(this, Po).previousPage(e, t);
        return new Ei(n);
    }
    async startPage(e, t) {
        const n = await mo(this, Po).startPage(e, t);
        return new Ei(n);
    }
    async endPage(e, t) {
        const n = await mo(this, Po).endPage(e, t);
        return new Ei(n);
    }
    hasNextPage() {
        return mo(this, Po).meta.page.more;
    }
};
Po = new WeakMap();
let fl = sy;
var Zp = (o) => {
        throw TypeError(o);
    },
    la = (o, e, t) => e.has(o) || Zp('Cannot ' + t),
    De = (o, e, t) => (
        la(o, e, 'read from private field'), t ? t.call(o) : e.get(o)
    ),
    Ys = (o, e, t) =>
        e.has(o) ? Zp('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    Yr = (o, e, t, n) => (la(o, e, 'write to private field'), e.set(o, t), t),
    gc = (o, e, t) => (la(o, e, 'access private method'), t),
    an,
    Xt,
    gt,
    nr,
    gl;
const ry = class Pn {
    constructor(e, t, n, i) {
        Ys(this, nr),
            Ys(this, an),
            Ys(this, Xt),
            Ys(this, gt, { filter: {} }),
            (this.meta = { page: { cursor: 'start', more: !0, size: fc } }),
            (this.records = new fl(this, [])),
            Yr(this, an, t),
            e ? Yr(this, Xt, e) : Yr(this, Xt, this);
        const s = ay(n, i);
        (De(this, gt).filter = n.filter ?? s?.filter ?? {}),
            (De(this, gt).filter.$any = n.filter?.$any ?? s?.filter?.$any),
            (De(this, gt).filter.$all = n.filter?.$all ?? s?.filter?.$all),
            (De(this, gt).filter.$not = n.filter?.$not ?? s?.filter?.$not),
            (De(this, gt).filter.$none = n.filter?.$none ?? s?.filter?.$none),
            (De(this, gt).sort = n.sort ?? s?.sort),
            (De(this, gt).columns = n.columns ?? s?.columns),
            (De(this, gt).consistency = n.consistency ?? s?.consistency),
            (De(this, gt).pagination = n.pagination ?? s?.pagination),
            (De(this, gt).cache = n.cache ?? s?.cache),
            (De(this, gt).fetchOptions = n.fetchOptions ?? s?.fetchOptions),
            (this.any = this.any.bind(this)),
            (this.all = this.all.bind(this)),
            (this.not = this.not.bind(this)),
            (this.filter = this.filter.bind(this)),
            (this.sort = this.sort.bind(this)),
            (this.none = this.none.bind(this)),
            Object.defineProperty(this, 'table', { enumerable: !1 }),
            Object.defineProperty(this, 'repository', { enumerable: !1 });
    }
    getQueryOptions() {
        return De(this, gt);
    }
    key() {
        const {
                columns: e = [],
                filter: t = {},
                sort: n = [],
                pagination: i = {},
            } = De(this, gt),
            s = JSON.stringify({
                columns: e,
                filter: t,
                sort: n,
                pagination: i,
            });
        return C1(s);
    }
    any(...e) {
        const t = e.map((n) => n.getQueryOptions().filter ?? {});
        return new Pn(
            De(this, Xt),
            De(this, an),
            { filter: { $any: t } },
            De(this, gt),
        );
    }
    all(...e) {
        const t = e.map((n) => n.getQueryOptions().filter ?? {});
        return new Pn(
            De(this, Xt),
            De(this, an),
            { filter: { $all: t } },
            De(this, gt),
        );
    }
    not(...e) {
        const t = e.map((n) => n.getQueryOptions().filter ?? {});
        return new Pn(
            De(this, Xt),
            De(this, an),
            { filter: { $not: t } },
            De(this, gt),
        );
    }
    none(...e) {
        const t = e.map((n) => n.getQueryOptions().filter ?? {});
        return new Pn(
            De(this, Xt),
            De(this, an),
            { filter: { $none: t } },
            De(this, gt),
        );
    }
    filter(e, t) {
        if (arguments.length === 1) {
            const n = Object.entries(e ?? {}).map(([s, r]) => ({
                    [s]: gc(this, nr, gl).call(this, s, r),
                })),
                i = vo([De(this, gt).filter?.$all].flat().concat(n));
            return new Pn(
                De(this, Xt),
                De(this, an),
                { filter: { $all: i } },
                De(this, gt),
            );
        } else {
            const n =
                    bt(e) && bt(t) ?
                        [{ [e]: gc(this, nr, gl).call(this, e, t) }]
                    :   void 0,
                i = vo([De(this, gt).filter?.$all].flat().concat(n));
            return new Pn(
                De(this, Xt),
                De(this, an),
                { filter: { $all: i } },
                De(this, gt),
            );
        }
    }
    sort(e, t = 'asc') {
        const i = [
            ...[De(this, gt).sort ?? []].flat(),
            { column: e, direction: t },
        ];
        return new Pn(De(this, Xt), De(this, an), { sort: i }, De(this, gt));
    }
    select(e) {
        return new Pn(De(this, Xt), De(this, an), { columns: e }, De(this, gt));
    }
    getPaginated(e = {}) {
        const t = new Pn(De(this, Xt), De(this, an), e, De(this, gt));
        return De(this, Xt).query(t);
    }
    async *[Symbol.asyncIterator]() {
        for await (const [e] of this.getIterator({ batchSize: 1 })) yield e;
    }
    async *getIterator(e = {}) {
        const { batchSize: t = 1 } = e;
        let n = await this.getPaginated({
                ...e,
                pagination: { size: t, offset: 0 },
            }),
            i = n.hasNextPage();
        for (yield n.records; i; )
            (n = await n.nextPage()), (i = n.hasNextPage()), yield n.records;
    }
    async getMany(e = {}) {
        const { pagination: t = {}, ...n } = e,
            { size: i = fc, offset: s } = t,
            r = i <= Vr ? i : Vr;
        let l = await this.getPaginated({
            ...n,
            pagination: { size: r, offset: s },
        });
        const a = [...l.records];
        for (; l.hasNextPage() && a.length < i; )
            (l = await l.nextPage()), a.push(...l.records);
        return (
            l.hasNextPage() &&
                e.pagination?.size === void 0 &&
                console.trace(
                    'Calling getMany does not return all results. Paginate to get all results or call getAll.',
                ),
            new fl(l, a.slice(0, i))
        );
    }
    async getAll(e = {}) {
        const { batchSize: t = Vr, ...n } = e,
            i = [];
        for await (const s of this.getIterator({ ...n, batchSize: t }))
            i.push(...s);
        return new ra(i);
    }
    async getFirst(e = {}) {
        return (
            (await this.getMany({ ...e, pagination: { size: 1 } }))[0] ?? null
        );
    }
    async getFirstOrThrow(e = {}) {
        const t = await this.getMany({ ...e, pagination: { size: 1 } });
        if (t[0] === void 0) throw new Error('No results found.');
        return t[0];
    }
    async summarize(e = {}) {
        const { summaries: t, summariesFilter: n, ...i } = e,
            s = new Pn(De(this, Xt), De(this, an), i, De(this, gt));
        return De(this, Xt).summarizeTable(s, t, n);
    }
    cache(e) {
        return new Pn(De(this, Xt), De(this, an), { cache: e }, De(this, gt));
    }
    nextPage(e, t) {
        return this.startPage(e, t);
    }
    previousPage(e, t) {
        return this.startPage(e, t);
    }
    startPage(e, t) {
        return this.getPaginated({ pagination: { size: e, offset: t } });
    }
    endPage(e, t) {
        return this.getPaginated({
            pagination: { size: e, offset: t, before: 'end' },
        });
    }
    hasNextPage() {
        return this.meta.page.more;
    }
};
an = new WeakMap();
Xt = new WeakMap();
gt = new WeakMap();
nr = new WeakSet();
gl = function (o, e) {
    const t = De(this, an).schema?.columns.find(({ name: n }) => n === o)?.type;
    return (
        t === 'multiple' && (rt(e) || wp(e)) ? { $includes: e }
        : t === 'link' && Ke(e) && rt(e.id) ? e.id
        : e
    );
};
let ly = ry;
function ay(o, e) {
    return iy(o.pagination) ? { ...e, sort: void 0, filter: void 0 } : e;
}
function cy(o) {
    return Ke(o) && rt(o?.id);
}
function hy(o) {
    return Ke(o) && rt(o.name);
}
function Jt(o) {
    return Array.isArray(o) ?
            o.every((e) =>
                typeof e == 'string' ? !0
                : typeof e == 'object' ? hy(e)
                : !1,
            )
        :   !1;
}
function dy(o) {
    return rt(o);
}
function Jp(o) {
    return (
        Ke(o) &&
        Object.entries(o).every(([e, t]) =>
            e === '*' ? t === 'random' : t === 'asc' || t === 'desc',
        )
    );
}
function uy(o) {
    return Ke(o) && !Jp(o) && o.column !== void 0;
}
function ml(o) {
    if (dy(o)) return { [o]: 'asc' };
    if (Array.isArray(o)) return o.map((e) => ml(e));
    if (Jp(o)) return o;
    if (uy(o)) return { [o.column]: o.direction ?? 'asc' };
    throw new Error(`Invalid sort filter: ${o}`);
}
var Qp = (o) => {
        throw TypeError(o);
    },
    aa = (o, e, t) => e.has(o) || Qp('Cannot ' + t),
    ke = (o, e, t) => (
        aa(o, e, 'read from private field'), t ? t.call(o) : e.get(o)
    ),
    Zo = (o, e, t) =>
        e.has(o) ? Qp('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    ni = (o, e, t, n) => (aa(o, e, 'write to private field'), e.set(o, t), t),
    st = (o, e, t) => (aa(o, e, 'access private method'), t),
    ct,
    Vt,
    Sn,
    Ui,
    Ri,
    Zt,
    nt,
    ef,
    Es,
    bl,
    wl,
    yl,
    vl,
    kl,
    tf,
    nf,
    of,
    Hn,
    Gi;
const ca = 1e3;
class mc extends ly {
    constructor(e) {
        super(
            null,
            {
                name: e.table,
                schema: e.schemaTables?.find((n) => n.name === e.table),
            },
            {},
        ),
            Zo(this, nt),
            Zo(this, ct),
            Zo(this, Vt),
            Zo(this, Sn),
            Zo(this, Ui),
            Zo(this, Ri),
            Zo(this, Zt),
            ni(this, ct, e.table),
            ni(this, Sn, e.db),
            ni(this, Ui, e.pluginOptions.cache),
            ni(this, Ri, e.schemaTables),
            ni(this, Vt, () => ({ ...e.pluginOptions, sessionID: zs() }));
        const t = e.pluginOptions.trace ?? gp;
        ni(this, Zt, async (n, i, s = {}) =>
            t(n, i, {
                ...s,
                [En.TABLE]: ke(this, ct),
                [En.KIND]: 'sdk-operation',
                [En.VERSION]: sa,
            }),
        );
    }
    async create(e, t, n, i) {
        return ke(this, Zt).call(this, 'create', async () => {
            const s = Li(t, n, i);
            if (Array.isArray(e)) {
                if (e.length === 0) return [];
                const r = await st(this, nt, bl).call(this, e, {
                        ifVersion: s,
                        createOnly: !0,
                    }),
                    l = Jt(t) ? t : ['*'];
                return await this.read(r, l);
            }
            if (rt(e) && Ke(t)) {
                if (e === '') throw new Error("The id can't be empty");
                const r = Jt(n) ? n : void 0;
                return await st(this, nt, Es).call(this, e, t, r, {
                    createOnly: !0,
                    ifVersion: s,
                });
            }
            if (Ke(e) && rt(e.id)) {
                if (e.id === '') throw new Error("The id can't be empty");
                const r = Jt(t) ? t : void 0;
                return await st(this, nt, Es).call(
                    this,
                    e.id,
                    { ...e, id: void 0 },
                    r,
                    { createOnly: !0, ifVersion: s },
                );
            }
            if (Ke(e)) {
                const r = Jt(t) ? t : void 0;
                return st(this, nt, ef).call(this, e, r);
            }
            throw new Error('Invalid arguments for create method');
        });
    }
    async read(e, t) {
        return ke(this, Zt).call(this, 'read', async () => {
            const n = Jt(t) ? t : ['*'];
            if (Array.isArray(e)) {
                if (e.length === 0) return [];
                const s = e.map((a) => Oo(a)),
                    l = (
                        await this.getAll({
                            filter: { id: { $any: vo(s) } },
                            columns: n,
                        })
                    ).reduce((a, c) => ((a[c.id] = c), a), {});
                return s.map((a) => l[a ?? ''] ?? null);
            }
            const i = Oo(e);
            if (i)
                try {
                    const s = await Mp({
                            pathParams: {
                                workspace: '{workspaceId}',
                                dbBranchName: '{dbBranch}',
                                region: '{region}',
                                tableName: ke(this, ct),
                                recordId: i,
                            },
                            queryParams: { columns: n },
                            ...ke(this, Vt).call(this),
                        }),
                        r = await st(this, nt, Hn).call(this);
                    return In(ke(this, Sn), r, ke(this, ct), s, n);
                } catch (s) {
                    if (Ke(s) && s.status === 404) return null;
                    throw s;
                }
            return null;
        });
    }
    async readOrThrow(e, t) {
        return ke(this, Zt).call(this, 'readOrThrow', async () => {
            const n = await this.read(e, t);
            if (Array.isArray(n)) {
                const i = vo(
                    e.filter((s, r) => n[r] === null).map((s) => Oo(s)),
                );
                if (i.length > 0)
                    throw new Error(
                        `Could not find records with ids: ${i.join(', ')}`,
                    );
                return n;
            }
            if (n === null) {
                const i = Oo(e) ?? 'unknown';
                throw new Error(`Record with id ${i} not found`);
            }
            return n;
        });
    }
    async update(e, t, n, i) {
        return ke(this, Zt).call(this, 'update', async () => {
            const s = Li(t, n, i);
            if (Array.isArray(e)) {
                if (e.length === 0) return [];
                const r = await this.read(e, ['id']),
                    l = e.filter((h, u) => r[u] !== null);
                await st(this, nt, yl).call(this, l, {
                    ifVersion: s,
                    upsert: !1,
                });
                const a = Jt(t) ? t : ['*'];
                return await this.read(e, a);
            }
            try {
                if (rt(e) && Ke(t)) {
                    const r = Jt(n) ? n : void 0;
                    return await st(this, nt, wl).call(this, e, t, r, {
                        ifVersion: s,
                    });
                }
                if (Ke(e) && rt(e.id)) {
                    const r = Jt(t) ? t : void 0;
                    return await st(this, nt, wl).call(
                        this,
                        e.id,
                        { ...e, id: void 0 },
                        r,
                        { ifVersion: s },
                    );
                }
            } catch (r) {
                if (r.status === 422) return null;
                throw r;
            }
            throw new Error('Invalid arguments for update method');
        });
    }
    async updateOrThrow(e, t, n, i) {
        return ke(this, Zt).call(this, 'updateOrThrow', async () => {
            const s = await this.update(e, t, n, i);
            if (Array.isArray(s)) {
                const r = vo(
                    e.filter((l, a) => s[a] === null).map((l) => Oo(l)),
                );
                if (r.length > 0)
                    throw new Error(
                        `Could not find records with ids: ${r.join(', ')}`,
                    );
                return s;
            }
            if (s === null) {
                const r = Oo(e) ?? 'unknown';
                throw new Error(`Record with id ${r} not found`);
            }
            return s;
        });
    }
    async createOrUpdate(e, t, n, i) {
        return ke(this, Zt).call(this, 'createOrUpdate', async () => {
            const s = Li(t, n, i);
            if (Array.isArray(e)) {
                if (e.length === 0) return [];
                await st(this, nt, yl).call(this, e, {
                    ifVersion: s,
                    upsert: !0,
                });
                const r = Jt(t) ? t : ['*'];
                return await this.read(e, r);
            }
            if (rt(e) && Ke(t)) {
                if (e === '') throw new Error("The id can't be empty");
                const r = Jt(n) ? n : void 0;
                return await st(this, nt, vl).call(this, e, t, r, {
                    ifVersion: s,
                });
            }
            if (Ke(e) && rt(e.id)) {
                if (e.id === '') throw new Error("The id can't be empty");
                const r = Jt(n) ? n : void 0;
                return await st(this, nt, vl).call(
                    this,
                    e.id,
                    { ...e, id: void 0 },
                    r,
                    { ifVersion: s },
                );
            }
            if (!bt(e) && Ke(t)) return await this.create(t, n);
            if (Ke(e) && !bt(e.id)) return await this.create(e, t);
            throw new Error('Invalid arguments for createOrUpdate method');
        });
    }
    async createOrReplace(e, t, n, i) {
        return ke(this, Zt).call(this, 'createOrReplace', async () => {
            const s = Li(t, n, i);
            if (Array.isArray(e)) {
                if (e.length === 0) return [];
                const r = await st(this, nt, bl).call(this, e, {
                        ifVersion: s,
                        createOnly: !1,
                    }),
                    l = Jt(t) ? t : ['*'];
                return await this.read(r, l);
            }
            if (rt(e) && Ke(t)) {
                if (e === '') throw new Error("The id can't be empty");
                const r = Jt(n) ? n : void 0;
                return await st(this, nt, Es).call(this, e, t, r, {
                    createOnly: !1,
                    ifVersion: s,
                });
            }
            if (Ke(e) && rt(e.id)) {
                if (e.id === '') throw new Error("The id can't be empty");
                const r = Jt(n) ? n : void 0;
                return await st(this, nt, Es).call(
                    this,
                    e.id,
                    { ...e, id: void 0 },
                    r,
                    { createOnly: !1, ifVersion: s },
                );
            }
            if (!bt(e) && Ke(t)) return await this.create(t, n);
            if (Ke(e) && !bt(e.id)) return await this.create(e, t);
            throw new Error('Invalid arguments for createOrReplace method');
        });
    }
    async delete(e, t) {
        return ke(this, Zt).call(this, 'delete', async () => {
            if (Array.isArray(e)) {
                if (e.length === 0) return [];
                const n = e.map((r) => {
                        if (rt(r)) return r;
                        if (rt(r.id)) return r.id;
                        throw new Error('Invalid arguments for delete method');
                    }),
                    i = Jt(t) ? t : ['*'],
                    s = await this.read(e, i);
                return await st(this, nt, tf).call(this, n), s;
            }
            if (rt(e)) return st(this, nt, kl).call(this, e, t);
            if (Ke(e) && rt(e.id)) return st(this, nt, kl).call(this, e.id, t);
            throw new Error('Invalid arguments for delete method');
        });
    }
    async deleteOrThrow(e, t) {
        return ke(this, Zt).call(this, 'deleteOrThrow', async () => {
            const n = await this.delete(e, t);
            if (Array.isArray(n)) {
                const i = vo(
                    e.filter((s, r) => n[r] === null).map((s) => Oo(s)),
                );
                if (i.length > 0)
                    throw new Error(
                        `Could not find records with ids: ${i.join(', ')}`,
                    );
                return n;
            } else if (n === null) {
                const i = Oo(e) ?? 'unknown';
                throw new Error(`Record with id ${i} not found`);
            }
            return n;
        });
    }
    async search(e, t = {}) {
        return ke(this, Zt).call(this, 'search', async () => {
            const { records: n, totalCount: i } = await zp({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: ke(this, ct),
                    },
                    body: {
                        query: e,
                        fuzziness: t.fuzziness,
                        prefix: t.prefix,
                        highlight: t.highlight,
                        filter: t.filter,
                        boosters: t.boosters,
                        page: t.page,
                        target: t.target,
                    },
                    ...ke(this, Vt).call(this),
                }),
                s = await st(this, nt, Hn).call(this);
            return {
                records: n.map((r) =>
                    In(ke(this, Sn), s, ke(this, ct), r, ['*']),
                ),
                totalCount: i,
            };
        });
    }
    async vectorSearch(e, t, n) {
        return ke(this, Zt).call(this, 'vectorSearch', async () => {
            const { records: i, totalCount: s } = await Up({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: ke(this, ct),
                    },
                    body: {
                        column: e,
                        queryVector: t,
                        similarityFunction: n?.similarityFunction,
                        size: n?.size,
                        filter: n?.filter,
                    },
                    ...ke(this, Vt).call(this),
                }),
                r = await st(this, nt, Hn).call(this);
            return {
                records: i.map((l) =>
                    In(ke(this, Sn), r, ke(this, ct), l, ['*']),
                ),
                totalCount: s,
            };
        });
    }
    async aggregate(e, t) {
        return ke(this, Zt).call(
            this,
            'aggregate',
            async () =>
                await Wp({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: ke(this, ct),
                    },
                    body: { aggs: e, filter: t },
                    ...ke(this, Vt).call(this),
                }),
        );
    }
    async query(e) {
        return ke(this, Zt).call(this, 'query', async () => {
            const t = await st(this, nt, of).call(this, e);
            if (t) return new pc(e, t.meta, t.records);
            const n = e.getQueryOptions(),
                { meta: i, records: s } = await Fp({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: ke(this, ct),
                    },
                    body: {
                        filter: _r(n.filter),
                        sort: n.sort !== void 0 ? ml(n.sort) : void 0,
                        page: n.pagination,
                        columns: n.columns ?? ['*'],
                        consistency: n.consistency,
                    },
                    fetchOptions: n.fetchOptions,
                    ...ke(this, Vt).call(this),
                }),
                r = await st(this, nt, Hn).call(this),
                l = s.map((a) =>
                    In(ke(this, Sn), r, ke(this, ct), a, n.columns ?? ['*']),
                );
            return await st(this, nt, nf).call(this, e, i, l), new pc(e, i, l);
        });
    }
    async summarizeTable(e, t, n) {
        return ke(this, Zt).call(this, 'summarize', async () => {
            const i = e.getQueryOptions(),
                s = await $p({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: ke(this, ct),
                    },
                    body: {
                        filter: _r(i.filter),
                        sort: i.sort !== void 0 ? ml(i.sort) : void 0,
                        columns: i.columns,
                        consistency: i.consistency,
                        page:
                            i.pagination?.size !== void 0 ?
                                { size: i.pagination?.size }
                            :   void 0,
                        summaries: t,
                        summariesFilter: n,
                    },
                    ...ke(this, Vt).call(this),
                }),
                r = await st(this, nt, Hn).call(this);
            return {
                ...s,
                summaries: s.summaries.map((l) =>
                    In(ke(this, Sn), r, ke(this, ct), l, i.columns ?? []),
                ),
            };
        });
    }
    ask(e, t) {
        const n = t?.sessionId ? { message: e } : { question: e },
            i = {
                pathParams: {
                    workspace: '{workspaceId}',
                    dbBranchName: '{dbBranch}',
                    region: '{region}',
                    tableName: ke(this, ct),
                    sessionId: t?.sessionId,
                },
                body: {
                    ...n,
                    rules: t?.rules,
                    searchType: t?.searchType,
                    search: t?.searchType === 'keyword' ? t?.search : void 0,
                    vectorSearch:
                        t?.searchType === 'vector' ? t?.vectorSearch : void 0,
                },
                ...ke(this, Vt).call(this),
            };
        if (t?.onMessage)
            K1({
                endpoint: 'dataPlane',
                url: '/db/{dbBranchName}/tables/{tableName}/ask/{sessionId}',
                method: 'POST',
                onMessage: (s) => {
                    t.onMessage?.({ answer: s.text, records: s.records });
                },
                ...i,
            });
        else return jp(i);
    }
}
ct = new WeakMap();
Vt = new WeakMap();
Sn = new WeakMap();
Ui = new WeakMap();
Ri = new WeakMap();
Zt = new WeakMap();
nt = new WeakSet();
ef = async function (o, e = ['*']) {
    const t = await st(this, nt, Gi).call(this, o),
        n = await Ip({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
                tableName: ke(this, ct),
            },
            queryParams: { columns: e },
            body: t,
            ...ke(this, Vt).call(this),
        }),
        i = await st(this, nt, Hn).call(this);
    return In(ke(this, Sn), i, ke(this, ct), n, e);
};
Es = async function (o, e, t = ['*'], { createOnly: n, ifVersion: i }) {
    if (!o) return null;
    const s = await st(this, nt, Gi).call(this, e),
        r = await Pp({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
                tableName: ke(this, ct),
                recordId: o,
            },
            body: s,
            queryParams: { createOnly: n, columns: t, ifVersion: i },
            ...ke(this, Vt).call(this),
        }),
        l = await st(this, nt, Hn).call(this);
    return In(ke(this, Sn), l, ke(this, ct), r, t);
};
bl = async function (o, { createOnly: e, ifVersion: t }) {
    const n = await oa(o, async (r) => {
            const l = await st(this, nt, Gi).call(this, r);
            return {
                insert: {
                    table: ke(this, ct),
                    record: l,
                    createOnly: e,
                    ifVersion: t,
                },
            };
        }),
        i = na(n, ca),
        s = [];
    for (const r of i) {
        const { results: l } = await Us({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
            },
            body: { operations: r },
            ...ke(this, Vt).call(this),
        });
        for (const a of l)
            a.operation === 'insert' ? s.push(a.id) : s.push(null);
    }
    return s;
};
wl = async function (o, e, t = ['*'], { ifVersion: n }) {
    if (!o) return null;
    const { id: i, ...s } = await st(this, nt, Gi).call(this, e);
    try {
        const r = await Np({
                pathParams: {
                    workspace: '{workspaceId}',
                    dbBranchName: '{dbBranch}',
                    region: '{region}',
                    tableName: ke(this, ct),
                    recordId: o,
                },
                queryParams: { columns: t, ifVersion: n },
                body: s,
                ...ke(this, Vt).call(this),
            }),
            l = await st(this, nt, Hn).call(this);
        return In(ke(this, Sn), l, ke(this, ct), r, t);
    } catch (r) {
        if (Ke(r) && r.status === 404) return null;
        throw r;
    }
};
yl = async function (o, { ifVersion: e, upsert: t }) {
    const n = await oa(o, async ({ id: r, ...l }) => {
            const a = await st(this, nt, Gi).call(this, l);
            return {
                update: {
                    table: ke(this, ct),
                    id: r,
                    ifVersion: e,
                    upsert: t,
                    fields: a,
                },
            };
        }),
        i = na(n, ca),
        s = [];
    for (const r of i) {
        const { results: l } = await Us({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
            },
            body: { operations: r },
            ...ke(this, Vt).call(this),
        });
        for (const a of l)
            a.operation === 'update' ? s.push(a.id) : s.push(null);
    }
    return s;
};
vl = async function (o, e, t = ['*'], { ifVersion: n }) {
    if (!o) return null;
    const i = await Rp({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
                tableName: ke(this, ct),
                recordId: o,
            },
            queryParams: { columns: t, ifVersion: n },
            body: e,
            ...ke(this, Vt).call(this),
        }),
        s = await st(this, nt, Hn).call(this);
    return In(ke(this, Sn), s, ke(this, ct), i, t);
};
kl = async function (o, e = ['*']) {
    if (!o) return null;
    try {
        const t = await Dp({
                pathParams: {
                    workspace: '{workspaceId}',
                    dbBranchName: '{dbBranch}',
                    region: '{region}',
                    tableName: ke(this, ct),
                    recordId: o,
                },
                queryParams: { columns: e },
                ...ke(this, Vt).call(this),
            }),
            n = await st(this, nt, Hn).call(this);
        return In(ke(this, Sn), n, ke(this, ct), t, e);
    } catch (t) {
        if (Ke(t) && t.status === 404) return null;
        throw t;
    }
};
tf = async function (o) {
    const e = na(
        vo(o).map((t) => ({ delete: { table: ke(this, ct), id: t } })),
        ca,
    );
    for (const t of e)
        await Us({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
            },
            body: { operations: t },
            ...ke(this, Vt).call(this),
        });
};
nf = async function (o, e, t) {
    await ke(this, Ui)?.set(`query_${ke(this, ct)}:${o.key()}`, {
        date: new Date(),
        meta: e,
        records: t,
    });
};
of = async function (o) {
    const e = `query_${ke(this, ct)}:${o.key()}`,
        t = await ke(this, Ui)?.get(e);
    if (!t) return null;
    const n = ke(this, Ui)?.defaultQueryTTL ?? -1,
        { cache: i = n } = o.getQueryOptions();
    return i < 0 || t.date.getTime() + i < Date.now() ? null : t;
};
Hn = async function () {
    if (ke(this, Ri)) return ke(this, Ri);
    const { schema: o } = await Bp({
        pathParams: {
            workspace: '{workspaceId}',
            dbBranchName: '{dbBranch}',
            region: '{region}',
        },
        ...ke(this, Vt).call(this),
    });
    return ni(this, Ri, o.tables), o.tables;
};
Gi = async function (o) {
    const t = (await st(this, nt, Hn).call(this)).find(
        (i) => i.name === ke(this, ct),
    );
    if (!t) throw new Error(`Table ${ke(this, ct)} not found in schema`);
    const n = {};
    for (const [i, s] of Object.entries(o)) {
        if (i === 'xata') continue;
        switch (t.columns.find((l) => l.name === i)?.type) {
            case 'link': {
                n[i] = cy(s) ? s.id : s;
                break;
            }
            case 'datetime': {
                n[i] = s instanceof Date ? s.toISOString() : s;
                break;
            }
            case 'file':
                n[i] = await uc(s);
                break;
            case 'file[]':
                n[i] = await oa(s, (l) => uc(l));
                break;
            case 'json':
                n[i] = ny(s);
                break;
            default:
                n[i] = s;
        }
    }
    return n;
};
const In = (o, e, t, n, i) => {
    const s = {},
        { xata: r, ...l } = n ?? {};
    Object.assign(s, l);
    const { columns: a } = e.find(({ name: u }) => u === t) ?? {};
    a || console.error(`Table ${t} not found in schema`);
    for (const u of a ?? []) {
        if (!py(i, u)) continue;
        const p = s[u.name];
        switch (u.type) {
            case 'datetime': {
                const b = p !== void 0 ? new Date(p) : null;
                b !== null && isNaN(b.getTime()) ?
                    console.error(
                        `Failed to parse date ${p} for field ${u.name}`,
                    )
                :   (s[u.name] = b);
                break;
            }
            case 'link': {
                const b = u.link?.table;
                if (!b)
                    console.error(`Failed to parse link for field ${u.name}`);
                else if (Ke(p)) {
                    const m = i.reduce((k, y) => {
                        if (y === u.name) return [...k, '*'];
                        if (rt(y) && y.startsWith(`${u.name}.`)) {
                            const [, ...w] = y.split('.');
                            return [...k, w.join('.')];
                        }
                        return k;
                    }, []);
                    s[u.name] = In(o, e, b, p, m);
                } else s[u.name] = null;
                break;
            }
            case 'file':
                s[u.name] = bt(p) ? new Ho(p) : null;
                break;
            case 'file[]':
                s[u.name] = p?.map((b) => new Ho(b)) ?? null;
                break;
            case 'json':
                s[u.name] = oy(p);
                break;
            default:
                (s[u.name] = p ?? null),
                    u.notNull === !0 &&
                        p === null &&
                        console.error(
                            `Parse error, column ${u.name} is non nullable and value resolves null`,
                        );
                break;
        }
    }
    const c = { ...s },
        h =
            r !== void 0 ?
                {
                    ...r,
                    createdAt: new Date(r.createdAt),
                    updatedAt: new Date(r.updatedAt),
                }
            :   void 0;
    (c.read = function (u) {
        return o[t].read(c.id, u);
    }),
        (c.update = function (u, p, b) {
            const m = Jt(p) ? p : ['*'],
                k = Li(p, b);
            return o[t].update(c.id, u, m, { ifVersion: k });
        }),
        (c.replace = function (u, p, b) {
            const m = Jt(p) ? p : ['*'],
                k = Li(p, b);
            return o[t].createOrReplace(c.id, u, m, { ifVersion: k });
        }),
        (c.delete = function () {
            return o[t].delete(c.id);
        }),
        h !== void 0 && (c.xata = Object.freeze(h)),
        (c.getMetadata = function () {
            return c.xata;
        }),
        (c.toSerializable = function () {
            return JSON.parse(JSON.stringify(c));
        }),
        (c.toString = function () {
            return JSON.stringify(c);
        });
    for (const u of [
        'read',
        'update',
        'replace',
        'delete',
        'getMetadata',
        'toSerializable',
        'toString',
    ])
        Object.defineProperty(c, u, { enumerable: !1 });
    return Object.freeze(c), c;
};
function Oo(o) {
    if (rt(o)) return o;
    if (Ke(o) && rt(o.id)) return o.id;
}
function py(o, e) {
    return o.includes('*') ? !0 : (
            o.filter((t) => rt(t) && t.startsWith(e.name)).length > 0
        );
}
function Li(...o) {
    for (const e of o) if (Ke(e) && yp(e.ifVersion)) return e.ifVersion;
}
var sf = (o) => {
        throw TypeError(o);
    },
    rf = (o, e, t) => e.has(o) || sf('Cannot ' + t),
    Jo = (o, e, t) => (rf(o, e, 'read from private field'), e.get(o)),
    fy = (o, e, t) =>
        e.has(o) ? sf('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    gy = (o, e, t, n) => (rf(o, e, 'write to private field'), e.set(o, t), t),
    eo;
class my {
    constructor(e = {}) {
        fy(this, eo),
            gy(this, eo, new Map()),
            (this.capacity = e.max ?? 500),
            (this.defaultQueryTTL = e.defaultQueryTTL ?? 60 * 1e3);
    }
    async getAll() {
        return Object.fromEntries(Jo(this, eo));
    }
    async get(e) {
        return Jo(this, eo).get(e) ?? null;
    }
    async set(e, t) {
        if (
            (await this.delete(e),
            Jo(this, eo).set(e, t),
            Jo(this, eo).size > this.capacity)
        ) {
            const n = Jo(this, eo).keys().next().value;
            await this.delete(n);
        }
    }
    async delete(e) {
        Jo(this, eo).delete(e);
    }
    async clear() {
        return Jo(this, eo).clear();
    }
}
eo = new WeakMap();
var lf = (o) => {
        throw TypeError(o);
    },
    by = (o, e, t) => e.has(o) || lf('Cannot ' + t),
    Kr = (o, e, t) => (
        by(o, e, 'read from private field'), t ? t.call(o) : e.get(o)
    ),
    wy = (o, e, t) =>
        e.has(o) ? lf('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    Ts;
class yy extends js {
    constructor() {
        super(), wy(this, Ts, {});
    }
    build(e) {
        const t = new Proxy(
                {},
                {
                    get: (i, s) => {
                        if (!rt(s)) throw new Error('Invalid table name');
                        return (
                            Kr(this, Ts)[s] === void 0 &&
                                (Kr(this, Ts)[s] = new mc({
                                    db: t,
                                    pluginOptions: e,
                                    table: s,
                                    schemaTables: e.tables,
                                })),
                            Kr(this, Ts)[s]
                        );
                    },
                },
            ),
            n = e.tables?.map(({ name: i }) => i) ?? [];
        for (const i of n)
            t[i] = new mc({
                db: t,
                pluginOptions: e,
                table: i,
                schemaTables: e.tables,
            });
        return t;
    }
}
Ts = new WeakMap();
class vy extends js {
    build(e) {
        return {
            download: async (t) => {
                const {
                    table: n,
                    record: i,
                    column: s,
                    fileId: r = '',
                } = t ?? {};
                return await Lp({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: n ?? '',
                        recordId: i ?? '',
                        columnName: s ?? '',
                        fileId: r,
                    },
                    ...e,
                    rawResponse: !0,
                });
            },
            upload: async (t, n, i) => {
                const {
                        table: s,
                        record: r,
                        column: l,
                        fileId: a = '',
                    } = t ?? {},
                    c = await n,
                    h = i?.mediaType || ky(c),
                    u = c instanceof Ho ? c.toBlob() : c;
                return await Ap({
                    ...e,
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: s ?? '',
                        recordId: r ?? '',
                        columnName: l ?? '',
                        fileId: a,
                    },
                    body: u,
                    headers: { 'Content-Type': h },
                });
            },
            delete: async (t) => {
                const {
                    table: n,
                    record: i,
                    column: s,
                    fileId: r = '',
                } = t ?? {};
                return await Op({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: n ?? '',
                        recordId: i ?? '',
                        columnName: s ?? '',
                        fileId: r,
                    },
                    ...e,
                });
            },
        };
    }
}
function ky(o) {
    if (typeof o == 'string') return 'text/plain';
    if ('mediaType' in o && o.mediaType !== void 0) return o.mediaType;
    if (ta(o)) return o.type;
    try {
        return o.type;
    } catch {}
    return 'application/octet-stream';
}
var af = (o) => {
        throw TypeError(o);
    },
    _y = (o, e, t) => e.has(o) || af('Cannot ' + t),
    xy = (o, e, t) =>
        e.has(o) ? af('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    bc = (o, e, t) => (_y(o, e, 'access private method'), t),
    or,
    _l;
class Cy extends js {
    constructor(e) {
        super(), (this.db = e), xy(this, or);
    }
    build(e) {
        return {
            all: async (t, n = {}) => {
                const { records: i, totalCount: s } = await bc(
                    this,
                    or,
                    _l,
                ).call(this, t, n, e);
                return {
                    totalCount: s,
                    records: i.map((r) => {
                        const { table: l = 'orphan' } = r.xata;
                        return {
                            table: l,
                            record: In(this.db, e.tables, l, r, ['*']),
                        };
                    }),
                };
            },
            byTable: async (t, n = {}) => {
                const { records: i, totalCount: s } = await bc(
                        this,
                        or,
                        _l,
                    ).call(this, t, n, e),
                    r = i.reduce((l, a) => {
                        const { table: c = 'orphan' } = a.xata,
                            h = l[c] ?? [],
                            u = In(this.db, e.tables, c, a, ['*']);
                        return { ...l, [c]: [...h, u] };
                    }, {});
                return { totalCount: s, records: r };
            },
        };
    }
}
or = new WeakSet();
_l = async function (o, e, t) {
    const {
            tables: n,
            fuzziness: i,
            highlight: s,
            prefix: r,
            page: l,
        } = e ?? {},
        { records: a, totalCount: c } = await Hp({
            pathParams: {
                workspace: '{workspaceId}',
                dbBranchName: '{dbBranch}',
                region: '{region}',
            },
            body: {
                tables: n,
                query: o,
                fuzziness: i,
                prefix: r,
                highlight: s,
                page: l,
            },
            ...t,
        });
    return { records: a, totalCount: c };
};
function Ey(o) {
    return '"' + o.replace(/\\/g, '\\\\').replace(/"/g, '\\"') + '"';
}
function cf(o) {
    let e = '{';
    for (let t = 0; t < o.length; t++)
        t > 0 && (e = e + ','),
            o[t] === null || typeof o[t] > 'u' ? (e = e + 'NULL')
            : Array.isArray(o[t]) ? (e = e + cf(o[t]))
            : o[t] instanceof le ? (e += '\\\\x' + o[t].toString('hex'))
            : (e += Ey(ir(o[t])));
    return (e = e + '}'), e;
}
function ir(o) {
    if (!bt(o)) return null;
    if (o instanceof Date) return o.toISOString();
    if (Array.isArray(o)) return cf(o);
    if (Ke(o)) return JSON.stringify(o);
    try {
        return o.toString();
    } catch {
        return o;
    }
}
function Ty(o, e) {
    if (rt(o)) return { statement: o, params: e?.map((t) => ir(t)) };
    if (wp(o))
        return {
            statement: o.reduce(
                (n, i, s) =>
                    n + i + (s < (e?.length ?? 0) ? '$' + (s + 1) : ''),
                '',
            ),
            params: e?.map((n) => ir(n)),
        };
    if (Ke(o)) {
        const { statement: t, params: n, consistency: i, responseType: s } = o;
        return {
            statement: t,
            params: n?.map((r) => ir(r)),
            consistency: i,
            responseType: s,
        };
    }
    throw new Error('Invalid query');
}
class Sy extends js {
    build(e) {
        const t = async (n, ...i) => {
            if (!Iy(n) && (!By(n) || !Array.isArray(i)))
                throw new Error(
                    'Invalid usage of `xata.sql`. Please use it as a tagged template or with an object.',
                );
            const {
                    statement: s,
                    params: r,
                    consistency: l,
                    responseType: a,
                } = Ty(n, i),
                {
                    warning: c,
                    columns: h,
                    ...u
                } = await Gp({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: {
                        statement: s,
                        params: r,
                        consistency: l,
                        responseType: a,
                    },
                    ...e,
                }),
                p = 'records' in u ? u.records : void 0,
                b = 'rows' in u ? u.rows : void 0;
            return { records: p, rows: b, warning: c, columns: h };
        };
        return (
            (t.connectionString = Ay(e)),
            (t.batch = async (n) => {
                const { results: i } = await qp({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: {
                        statements: n.statements.map(
                            ({ statement: s, params: r }) => ({
                                statement: s,
                                params: r,
                            }),
                        ),
                        consistency: n.consistency,
                        responseType: n.responseType,
                    },
                    ...e,
                });
                return { results: i };
            }),
            t
        );
    }
}
function By(o) {
    return Array.isArray(o) && 'raw' in o && Array.isArray(o.raw);
}
function Iy(o) {
    return Ke(o) && 'statement' in o;
}
function Ly(o, e) {
    switch (o) {
        case 'production':
            return `${e}.sql.xata.sh`;
        case 'staging':
            return `${e}.sql.staging-xata.dev`;
        case 'dev':
            return `${e}.sql.dev-xata.dev`;
        case 'local':
            return 'localhost:7654';
        default:
            throw new Error('Invalid host provider');
    }
}
function Ay({ apiKey: o, workspacesApiUrl: e, branch: t }) {
    const n = rt(e) ? e : e('', {}),
        i = Cp(n);
    if (!i) throw new Error('Invalid workspaces URL');
    const { workspace: s, region: r, database: l, host: a } = i,
        c = Ly(a, r),
        h = s.split('-').pop();
    if (!h || !r || !l || !o || !t)
        throw new Error('Unable to build xata connection string');
    return `postgresql://${h}:${o}@${c}/${l}:${t}?sslmode=require`;
}
class Oy extends js {
    build(e) {
        return {
            run: async (t) =>
                await Us({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: { operations: t },
                    ...e,
                }),
        };
    }
}
var hf = (o) => {
        throw TypeError(o);
    },
    ha = (o, e, t) => e.has(o) || hf('Cannot ' + t),
    wc = (o, e, t) => (
        ha(o, e, 'read from private field'), t ? t.call(o) : e.get(o)
    ),
    yc = (o, e, t) =>
        e.has(o) ? hf('Cannot add the same private member more than once')
        : e instanceof WeakSet ? e.add(o)
        : e.set(o, t),
    My = (o, e, t, n) => (ha(o, e, 'write to private field'), e.set(o, t), t),
    vc = (o, e, t) => (ha(o, e, 'access private method'), t);
const df = (o) => {
    var e, t, n, i, s;
    return (
        (s = class {
            constructor(r = {}, l) {
                yc(this, t), yc(this, e);
                const a = vc(this, t, n).call(this, r);
                My(this, e, a);
                const c = {
                        ...vc(this, t, i).call(this, a),
                        cache: a.cache,
                        host: a.host,
                        tables: l,
                        branch: a.branch,
                    },
                    h = new yy().build(c),
                    u = new Cy(h).build(c),
                    p = new Oy().build(c),
                    b = new Sy().build(c),
                    m = new vy().build(c);
                (this.schema = { tables: l }),
                    (this.db = h),
                    (this.search = u),
                    (this.transactions = p),
                    (this.sql = b),
                    (this.files = m);
                for (const [k, y] of Object.entries({}))
                    y !== void 0 && (this[k] = y.build(c));
            }
            async getConfig() {
                const r = wc(this, e).databaseURL,
                    l = wc(this, e).branch;
                return { databaseURL: r, branch: l };
            }
        }),
        (e = new WeakMap()),
        (t = new WeakSet()),
        (n = function (r) {
            const l = r?.enableBrowser ?? S1() ?? !1;
            if (typeof window < 'u' && typeof Deno > 'u' && !l)
                throw new Error(
                    'You are trying to use Xata from the browser, which is potentially a non-secure environment. How to fix: https://xata.io/docs/messages/api-key-browser-error',
                );
            const c = N1(r?.fetch),
                h = r?.databaseURL || B1(),
                u = r?.apiKey || I1(),
                p = r?.cache ?? new my({ defaultQueryTTL: 0 }),
                b = r?.trace ?? gp,
                m = r?.clientName,
                k = r?.host ?? 'production',
                y = r?.xataAgentExtra;
            if (!u) throw new Error('Option apiKey is required');
            if (!h) throw new Error('Option databaseURL is required');
            const w = L1(),
                E = O1(),
                _ = r?.branch || E || w || 'main';
            return (
                E && _ !== E ?
                    console.warn(
                        `Ignoring preview branch ${E} because branch option was passed to the client constructor with value ${_}`,
                    )
                : w && _ !== w ?
                    console.warn(
                        `Ignoring branch ${w} because branch option was passed to the client constructor with value ${_}`,
                    )
                : E && w && E !== w ?
                    console.warn(
                        `Ignoring preview branch ${E} and branch ${w} because branch option was passed to the client constructor with value ${_}`,
                    )
                :   !E &&
                    !w &&
                    r?.branch === void 0 &&
                    console.warn(
                        `No branch was passed to the client constructor. Using default branch ${_}. You can set the branch with the environment variable XATA_BRANCH or by passing the branch option to the client constructor.`,
                    ),
                {
                    fetch: c,
                    databaseURL: h,
                    apiKey: u,
                    branch: _,
                    cache: p,
                    trace: b,
                    host: k,
                    clientID: zs(),
                    enableBrowser: l,
                    clientName: m,
                    xataAgentExtra: y,
                }
            );
        }),
        (i = function ({
            fetch: r,
            apiKey: l,
            databaseURL: a,
            branch: c,
            trace: h,
            clientID: u,
            clientName: p,
            xataAgentExtra: b,
        }) {
            return {
                fetch: r,
                apiKey: l,
                apiUrl: '',
                workspacesApiUrl: (m, k) => {
                    const y = k.dbBranchName ?? k.branch,
                        w = m.replace(
                            /^\/db\/[^/]+/,
                            y !== void 0 ? `:${c}` : '',
                        );
                    return a + w;
                },
                trace: h,
                clientID: u,
                clientName: p,
                xataAgentExtra: b,
            };
        }),
        s
    );
};
class zk extends df() {}
const Py = [
        {
            name: 'Languages',
            columns: [
                { name: 'Name', type: 'string' },
                { name: 'Owner', type: 'string' },
                { name: 'File', type: 'json' },
            ],
        },
    ],
    Ny = df(),
    Ry = {
        databaseURL:
            'https://Saturnine-s-workspace-cvl2j3.us-east-1.xata.sh/db/Lexicanter',
    };
class Dy extends Ny {
    constructor(e) {
        super({ ...Ry, ...e }, Py);
    }
}
const sr = new Dy({
        branch: 'main',
        apiKey: 'xau_IXRLBDCqEyeSvgHvN5FmWsOvu26aWd1D2',
        enableBrowser: !0,
    }),
    { ipcRenderer: $s } = require('electron'),
    Rn = require('fs'),
    oi = require('path'),
    no = require('vex-js'),
    Fe = () => _t(q),
    Fy = _t(Wl);
async function No(o) {
    const e = await $s.invoke('getUserDataPath');
    o(e);
}
async function Ps(o, e) {
    const t = await $s.invoke('showOpenDialog', o);
    e(t);
}
async function xl() {
    return (
        console.log('No save function found for docs editor.', _t(Tr)),
        (Fe().Version = await $s.invoke('getVersion')),
        (Fe().FileVersion = (parseInt(Fe().FileVersion, 36) + 1).toString(36)),
        JSON.stringify(Fe())
    );
}
async function Cl(o, e) {
    const t = oi.resolve(
        `${await $s.invoke('getUserDataPath')}/GraphemyCache/`,
    );
    Rn.existsSync(t) || Rn.mkdirSync(t);
    const n = oi.resolve(t, `${Fe().Name}-${e}-${o}.svg`);
    return Rn.existsSync(n) ?
            Rn.readFileSync(n, { encoding: 'utf8', flag: 'r' })
        :   (console.log(`No SVG found at ${n}`), 'No SVG found.');
}
function uf(o) {
    try {
        if (o === 'No SVG found.') throw new Error(o);
        const e = /<svg (height="([0-9.]+)".*width="([0-9.]+)").*>/im,
            [t, n] = (([i, s], r) => [
                s < i ? (i / s) * r : r,
                s < i ? r : (s / i) * r,
            ])(
                (o.match(e) || ['null']).slice(2).map((i) => Number(i)),
                50,
            ).map((i) => `${i}`);
        return o.replace(e, (i, s, r, l) => i.replace(r, t).replace(l, n));
    } catch (e) {
        const t = e instanceof Error ? e : Error(String(e));
        return (
            t.message !== 'No SVG Found.' &&
                console.log(
                    `Error message:
`,
                    t,
                ),
            `<code>${e}</code>`
        );
    }
}
async function pi() {
    const o = async () => {
        const e = await xl();
        try {
            No((t) => {
                const n = `${t}${oi.sep}Lexicons${oi.sep}`,
                    i = `${t}${oi.sep}Backups${oi.sep}`,
                    s = new Date()
                        .toString()
                        .split(' GMT')[0]
                        .replaceAll(':', '꞉');
                Rn.existsSync(n) || Rn.mkdirSync(n),
                    Rn.existsSync(i) || Rn.mkdirSync(i),
                    Rn.writeFileSync(`${n}${Fe().Name}.lexc`, e, 'utf8'),
                    Rn.writeFileSync(`${i}${Fe().Name} @ ${s}.lexc`, e, 'utf8'),
                    Fe().SaveLocation !== '' &&
                        Rn.writeFileSync(
                            `${Fe().SaveLocation}${oi.sep}${Fe().Name}.lexc`,
                            e,
                            'utf8',
                        );
            }),
                _t(Ti) ?
                    new Notification(`The ${Fe().Name} file has been saved.`)
                :   no.dialog.alert(`The ${Fe().Name} file has been saved.`);
        } catch (t) {
            console.log(t),
                no.dialog.alert(
                    'There was a problem saving your file. The error has been printed to the console. Please contact the developer.',
                );
        }
        if (Fe().UploadToDatabase && _t(yo) !== '' && _t(Si) !== '') {
            const t = await sr.db.Languages.filter({
                Name: Fe().Name,
                Owner: _t(yo),
            }).getAll();
            t.length > 0 ?
                await sr.db.Languages.update({
                    id: t[0].id,
                    File: JSON.parse(e),
                })
            :   await sr.db.Languages.create({
                    Name: Fe().Name,
                    Owner: _t(yo),
                    File: JSON.parse(e),
                });
        }
    };
    Fe().Name.trim() ?
        o()
    :   no.dialog.prompt({
            message: 'Please enter a file name before saving.',
            callback: (e) => {
                e && ((Fe().Name = e.trim()), o());
            },
        });
}
const Qo = {
    lexc: async () => {
        const o = new Blob([await xl()]),
            e = await window.showSaveFilePicker({
                suggestedName: `${Fe().Name}.lexc`,
            });
        await e.requestPermission({ mode: 'readwrite' });
        const t = await e.createWritable();
        try {
            await t.write(o);
        } catch (n) {
            window.alert(
                'The file failed to save. Please contact the developer for assistance.',
            ),
                console.log(n),
                await t.close();
            return;
        }
        await t.close(), window.alert('The file saved successfully.');
    },
    txt: async () => {
        let o = '';
        const e = Fe().Lexicon;
        for (const s in e)
            (o += `${s}
`),
                e[s].Senses.forEach((r) => {
                    o +=
                        (r.tags ? `Tags: ${r.tags.join(', ')}` : '') +
                        `
` +
                        (r.lects.length > 1 || r.lects[0] !== 'General' ?
                            `Lects: ${r.lects.join(' ')}`
                        :   '') +
                        `
` +
                        r.definition +
                        `
`;
                });
        const t = new Blob([o]),
            n = await window.showSaveFilePicker({
                suggestedName: `${Fe().Name}.txt`,
            });
        await n.requestPermission({ mode: 'readwrite' });
        const i = await n.createWritable();
        try {
            await i.write(t);
        } catch {
            window.alert('The file failed to export.');
        }
        await i.close(), window.alert('The file exported successfully.');
    },
    csv: async () => {
        const o = Fe().Lexicon,
            e = (l) =>
                l.map((a) =>
                    a
                        .map(String)
                        .map((c) => c.replaceAll('"', '""'))
                        .map((c) => `"${c}"`)
                        .join(','),
                ).join(`\r
`),
            t = [['Word', 'Pronunciations', 'Definitions']];
        for (const l in o)
            t.push([
                l,
                Object.entries(o[l].pronunciations)
                    .map(([a, { ipa: c }]) => a + ': ' + c)
                    .join(' — '),
                o[l].Senses.map((a) => a.definition).join(' — '),
            ]);
        const n = e(t),
            i = new Blob([n]),
            s = await window.showSaveFilePicker({
                suggestedName: `${Fe().Name}.csv`,
            });
        await s.requestPermission({ mode: 'readwrite' });
        const r = await s.createWritable();
        try {
            await r.write(i);
        } catch (l) {
            window.alert(
                'The file failed to export. Please contact the developer for assistance.',
            ),
                console.log(l);
        }
        await r.close(), window.alert('The file exported successfully.');
    },
    json: async () => {
        const o = new Blob([await xl()]),
            e = await window.showSaveFilePicker({
                suggestedName: `${Fe().Name}.json`,
            });
        await e.requestPermission({ mode: 'readwrite' });
        const t = await e.createWritable();
        try {
            await t.write(o);
        } catch {
            window.alert('The file failed to export.');
        }
        await t.close(), window.alert('The file exported successfully.');
    },
    html: {
        lexicon: async () => {
            const o = document.createElement('html'),
                e = document.createElement('head');
            e.innerHTML = `
                <meta charset="UTF-8" />
                <title>${Fe().Name}</title>
                <link rel="preconnect" href="https://fonts.googleapis.com">
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                <link href="https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
            `;
            const t = document.createElement('style');
            t.innerHTML = Zr;
            const n = document.createElement('style');
            n.innerHTML = Xr;
            const i = document.createElement('body');
            i.innerHTML += `<h1>${Fe().Name}</h1>`;
            const s = Ms(Fe().Lexicon);
            (i.innerHTML += '<hr/><h2>Lexicon</h2>'),
                i.append(kc(s)),
                e.append(t, n),
                o.append(e, i);
            const r = o.outerHTML,
                l = new Blob(['\uFEFF', r], {
                    type: 'tex/html; charset=utf-8;',
                }),
                a = await window.showSaveFilePicker({
                    suggestedName: `${Fe().Name}_Lexicon.html`,
                });
            await a.requestPermission({ mode: 'readwrite' });
            const c = await a.createWritable();
            try {
                await c.write(l);
            } catch (h) {
                no.dialog.alert(
                    'The file failed to export. Please contact the developer for assistance.',
                ),
                    console.log(h),
                    await c.close();
                return;
            }
            await c.close(), no.dialog.alert('The file exported successfully.');
        },
        all: async () => {
            const o = document.createElement('html'),
                e = document.createElement('head');
            e.innerHTML = `
                <meta charset="UTF-8" />
                <title>${Fe().Name}</title>
                <link rel="preconnect" href="https://fonts.googleapis.com">
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                <link href="https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
            `;
            const t = document.createElement('style');
            t.innerHTML = Zr;
            const n = document.createElement('style');
            n.innerHTML = Xr;
            let i = document.createElement('div');
            const s = document.createElement('body');
            (s.innerHTML += `<h1>${Fe().Name}</h1>`),
                (s.innerHTML += i.outerHTML);
            const r = Ms(Fe().Lexicon);
            (s.innerHTML += '<hr/><h2>Lexicon</h2>'),
                s.append(kc(r)),
                e.append(t, n),
                o.append(e, s);
            const l = o.outerHTML,
                a = new Blob(['\uFEFF', l], {
                    type: 'tex/html; charset=utf-8;',
                }),
                c = await window.showSaveFilePicker({
                    suggestedName: `${Fe().Name}.html`,
                });
            await c.requestPermission({ mode: 'readwrite' });
            const h = await c.createWritable();
            try {
                await h.write(a);
            } catch (u) {
                no.dialog.alert(
                    'The file failed to export. Please contact the developer for assistance.',
                ),
                    console.log(u),
                    await h.close();
                return;
            }
            await h.close(), no.dialog.alert('The file exported successfully.');
        },
        docs: async () => {
            const o = document.createElement('html'),
                e = document.createElement('head');
            e.innerHTML = `
                <meta charset="UTF-8" />
                <title>${Fe().Name} Docs</title>
                <link rel="preconnect" href="https://fonts.googleapis.com">
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
                <link href="https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
            `;
            const t = document.createElement('style');
            t.innerHTML = Zr;
            const n = document.createElement('style');
            (n.innerHTML = Xr), e.append(t, n), o.appendChild(e);
            let i = document.createElement('body');
            (i.style.padding = '12em'),
                i.classList.add('container'),
                o.appendChild(i);
            const s = o.outerHTML,
                r = new Blob(['\uFEFF', s], {
                    type: 'tex/html; charset=utf-8;',
                }),
                l = await window.showSaveFilePicker({
                    suggestedName: `${Fe().Name}_Docs.html`,
                });
            await l.requestPermission({ mode: 'readwrite' });
            const a = await l.createWritable();
            try {
                await a.write(r);
            } catch (c) {
                no.dialog.alert(
                    'The file failed to export. Please contact the developer.',
                ),
                    console.log(c),
                    await a.close();
                return;
            }
            await a.close(), no.dialog.alert('The file exported successfully.');
        },
    },
};
function kc(o) {
    const e = document.createElement('div');
    e.classList.add('row');
    const t = document.createElement('div');
    t.classList.add('column');
    const n = document.createElement('div');
    n.classList.add('column');
    let i = !1;
    return (
        o.forEach((s) => {
            let r = '';
            const l = Fe().Lexicon[s].pronunciations;
            Object.entries(l).forEach(([c, h]) => {
                r += `<p class="lect">${Fe().UseLects ? c + ': ' : ''}<span class='pronunciation'>${h.ipa}</span></p>`;
            }),
                Fe().Lexicon[s].Senses.forEach(
                    ({ lects: c, definition: h, tags: u }, p) => {
                        Fe().UseLects &&
                            (r += `<p class="lect">${c.join(', ')}</p>`),
                            (r += `<div class='sense'>${p + 1}.</div>`),
                            u.forEach((b) => {
                                r += `<div class='tag-item'>${b}</div>`;
                            }),
                            (r += `<p>${Co(h)}</p>`);
                    },
                ),
                i ?
                    (n.innerHTML += `<div class="lex-entry"><p>${s}</p>${r}</div>`)
                :   (t.innerHTML += `<div class="lex-entry"><p>${s}</p>${r}</div>`),
                (i = !i);
        }),
        e.append(t, n),
        e
    );
}
const Hy = {
        1.9: (o) => {
            q.set(Fy);
            try {
                for (const e in o.Lexicon)
                    Fe().Lexicon[e] = {
                        pronunciations: {
                            General: {
                                ipa: o.Lexicon[e][0],
                                irregular: o.Lexicon[e][2],
                            },
                        },
                        Senses: [
                            {
                                definition: o.Lexicon[e][1],
                                lects: ['General'],
                                tags: o.Lexicon[e][3],
                            },
                        ],
                    };
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert(
                    'There was a problem loading the contents of the lexicon. Please contact the developer.',
                ),
                    to('Attempted to load a version 1.9 lexicon.', t);
            }
            try {
                Fe().Alphabet = o.Alphabet;
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert(
                    'There was a problem loading the alphabetical order. Please contact the developer for assistance.',
                ),
                    to('Attempted to load a version 1.9 alphabet.', t);
            }
            try {
                (Fe().Pronunciations.General = o.Romanization), Gl('General');
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert(
                    'There was a problem loading the romanizations. Please contact the developer for assistance.',
                ),
                    to('Attempted to load version 1.9 romanizations.', t);
            }
            try {
                for (const e in o.Phrasebook)
                    Fe().Phrasebook[e] = (() => {
                        const t = {};
                        for (const n in o.Phrasebook[e])
                            t[n] = {
                                description: o.Phrasebook[e][n].description,
                                lects: ['General'],
                                pronunciations: {
                                    General: {
                                        ipa: o.Phrasebook[e][n].pronunciation,
                                        irregular: !1,
                                    },
                                },
                                variants: (() => {
                                    const i = {};
                                    for (const s in o.Phrasebook[e][n].variants)
                                        i[s] = {
                                            description:
                                                o.Phrasebook[e][n].variants[s]
                                                    .description,
                                            pronunciations: {
                                                General: {
                                                    ipa: o.Phrasebook[e][n]
                                                        .variants[s]
                                                        .pronunciation,
                                                    irregular: !1,
                                                },
                                            },
                                        };
                                    return i;
                                })(),
                                tags: [],
                            };
                        return t;
                    })();
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert(
                    'There was a problem loading the phrasebook. Please contact the developer for assistance.',
                ),
                    to('Attempted to load a version 1.9 phrasebook.', t);
            }
            try {
                (Fe().Phonotactics.General.Onsets =
                    o.Phonotactics.Initial.join(' ')),
                    (Fe().Phonotactics.General.Medials =
                        o.Phonotactics.Middle.join(' ')),
                    (Fe().Phonotactics.General.Codas =
                        o.Phonotactics.Final.join(' ')),
                    (Fe().Phonotactics.General.Vowels =
                        o.Phonotactics.Vowel.join(' ')),
                    (Fe().Phonotactics.General.Illegals =
                        o.Phonotactics.Illegal.join(' '));
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert(
                    'There was a problem loading the phonotactics data. Please contact the developer for assistance.',
                ),
                    to('Attempted to load version 1.9 phonotactics.', t);
            }
            try {
                zi(o.Docs);
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert(
                    'There was a problem loading the documentation data. Please contact the developer for assistance.',
                ),
                    to('Attempted to load version 1.9 documentation.', t);
            }
            try {
                Fe().HeaderTags = o.HeaderTags;
            } catch (e) {
                const t = e instanceof Error ? e : Error(String(e));
                window.alert('There was a problem loading the header tags.'),
                    to('Attempted to load version 1.9 header tags.', t);
            }
            (Fe().IgnoreDiacritics = o.IgnoreDiacritics),
                (Fe().CaseSensitive = o.CaseSensitive);
        },
    },
    zy = require('csv-parser');
async function Uy(o, e, t, n, i) {
    const s = [];
    let r;
    (e -= 1),
        (t -= 1),
        n && (n -= 1),
        i && (i -= 1),
        Ps({ title: 'Open CSV File', properties: ['openFile'] }, (l) => {
            if (l !== void 0) {
                if (l[0].split('.').pop() !== 'csv') {
                    no.dialog.alert('A CSV file was not selected.');
                    return;
                }
                (r = l),
                    Rn.createReadStream(l[0])
                        .pipe(zy({ headers: !1, skipLines: o ? 1 : 0 }))
                        .on('data', (a) => {
                            s.push(a);
                        })
                        .on('end', () => {
                            console.log(s);
                            const a = {};
                            s.forEach((c) => {
                                a[c[e]] = {
                                    pronunciations: {
                                        General: {
                                            ipa:
                                                n ?
                                                    c[n]
                                                :   en(c[e], Fe().Lects[0]),
                                            irregular: !1,
                                        },
                                    },
                                    Senses: [
                                        {
                                            definition: c[t],
                                            lects: [Fe().Lects[0]],
                                            tags:
                                                i ?
                                                    c[i]
                                                        .split(/\s+/)
                                                        .map((h) => h.trim())
                                                :   [],
                                        },
                                    ],
                                };
                            }),
                                console.log(a),
                                (_t(q).Lexicon = a),
                                (_t(q).Name = r[0]
                                    .split('/')
                                    [r[0].split('/').length - 1].split('.')[0]),
                                $s.emit('update-lexicon-for-gods-sake-please');
                        });
            }
        });
}
async function El(o = Fe().Name) {
    const e = await sr.db.Languages.filter({ Name: o, Owner: _t(yo) }).getAll();
    return e.length > 0 ? e[0].File : !1;
}
const Xr = `
    @import url("https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,4000,7001,4001,700&display=swap");
    body {
        overflow-y: auto;
        text-align: center;
        margin-left: 15vw;
        margin-right: 15vw;
        background-color: #333;
        color: #ccc;
    }
    
    .container {
        overflow-x: clip;
        overflow-y: auto;
    }
    
    .lex-body {
        font-family: "Gentium Book Plus", serif;
    }
    
    .tag-item {
        font-family: serif;
    }
    
    .search {
        font-family: "Gentium Book Plus", serif;
    }
    
    .phonology, .pronunciation {
        font-family: "Gentium Book Plus", serif !important;
    }
    
    [id=entry-counter] {
        font-family: serif;
    }
    
    td {
        text-align: center;
        border: 2px solid #ccc;
    }
    
    tr {
        background-color: transparent !important;
    }
    
    table {
        border-collapse: collapse;
        margin: auto;
    }
    
    .table-container, .table-title {
        font-family: "Gentium Book Plus", serif;
        align-items: center;
    }
    
    button {
        display: none;
    }
    
    .info {
        display: none;
    }
    
    .search-row {
        display: inline-flex;
    }
    
    @media only screen and (min-device-width: 601px) {
        .sidebar {
            max-width: 18% !important;
        }
    }
    @media only screen and (max-device-width: 600px) {
        body {
            width: 100vw !important;
            font-size: 12pt;
            padding: 2vw;
        }
        body > h1 {
            font-size: 36pt;
        }
        div.container {
            height: 60vh !important;
        }
        div.column {
            display: block;
        }
        div.sidebar {
            max-height: 18vh;
        }
        div.row {
            display: block;
            min-width: 96vw !important;
            margin-bottom: 36vh;
        }
        div.variants {
            margin-bottom: 4rem;
        }
        .lex-entry, .lex-body {
            font-size: 16pt !important;
        }
        .capitalize {
            font-size: 24pt !important;
        }
        .tag-item, [id=entry-counter] {
            font-size: 16pt;
        }
        .search, .sidebar p {
            font-size: 24pt;
        }
        td {
            font-size: 18pt !important;
        }
    }
`,
    Zr = `
    @charset "UTF-8";
    html, body {
        align-items: center;
    }
    
    body {
        font-family: serif;
        font-size: 11pt;
        min-width: 400px;
        min-height: 400px;
        margin: 0px;
        overflow: hidden;
        -webkit-app-region: drag;
    }
    
    button {
        font-family: serif;
        font-size: 11pt;
        transition-duration: 0.33s;
        cursor: pointer;
        -webkit-app-region: no-drag;
        -webkit-user-select: none;
    }
    button[id=overwrite] {
        font-weight: bold;
    }
    button.collapser {
        max-width: 1em;
        height: 100%;
        border-color: transparent !important;
        background-color: rgba(17, 17, 17, 0.0666666667);
        display: flex;
        float: right;
        margin: 0px;
        padding: 0px;
    }
    button.collapser:hover {
        border-color: rgba(255, 255, 255, 0.2666666667) !important;
        background-color: rgba(0, 0, 0, 0.2);
    }
    button.collapser::after {
        content: "‖";
        margin: auto;
    }
    button.collapser-h {
        max-height: 1.33em;
        width: 100% !important;
        border-color: transparent !important;
        background-color: rgba(17, 17, 17, 0.0666666667);
        display: flex;
        margin: 0px;
        padding: 0px;
    }
    button.collapser-h:hover {
        border-color: rgba(255, 255, 255, 0.2666666667) !important;
        background-color: rgba(0, 0, 0, 0.2);
    }
    button.collapser-h::after {
        content: "═";
        margin: auto;
    }
    
    .tab-container {
        width: 100vw;
        height: 100vh;
        -webkit-user-select: none;
    }
    .tab-container .button-container {
        width: 100%;
        text-align: center;
    }
    .tab-container .button-container button {
        border: none;
        outline: none;
        padding: 4px;
        height: 100%;
        width: fit-content;
    }
    .tab-container .window-control {
        text-align: left;
        height: 0px;
        overflow: visible;
    }
    .tab-container .window-control button {
        border: none;
        outline: none;
        background-color: transparent;
    }
    .tab-container .window-control button.close:hover {
        background-color: #9e0f0f;
    }
    .tab-container .window-control button.minimize:hover {
        background-color: #c9c911;
    }
    .tab-container .window-control button.maximize:hover {
        background-color: #4eb94e;
    }
    .tab-container .tab-pane {
        height: 80%;
        box-sizing: border-box;
        -webkit-app-region: no-drag;
        -webkit-user-select: text;
    }
    
    .row {
        display: flex;
        margin: auto;
    }
    .row:has(~ .collapsible-row .collapsed) {
        height: 90vh !important;
    }
    
    .column {
        width: 100%;
    }
    
    .collapsible-column {
        min-width: 2%;
        width: fit-content;
    }
    
    .collapsible-row:has(.collapsed) {
        height: 3vh !important;
    }
    
    .collapsed {
        display: none;
    }
    
    .text-left {
        text-align: left;
    }
    .text-right {
        text-align: right;
    }
    .text-center {
        text-align: center;
    }
    
    .prelined {
        white-space: pre-line;
        /* This is solely to make the 
 character work from the JS side */
    }
    
    p {
        margin: 0px;
    }
    
    div[id=tables-pane] {
        font-family: Gentium;
        font-size: 11pt;
    }
    
    h1, h2, h3, h4, h5, h6 {
        font-style: italic;
        padding-top: 1em !important;
    }
    
    .info {
        font-family: serif;
        font-size: 11pt;
        font-style: italic;
        line-height: 1.5em;
        -webkit-user-select: none;
    }
    
    .phonology {
        font-family: Gentium;
        font-size: 11pt;
        width: 95%;
    }
    
    .version-info {
        font-family: serif;
        font-size: 7pt;
        text-align: left;
        display: inline;
        float: right;
        -webkit-user-select: none;
    }
    
    .lex-body {
        white-space: pre-line;
    }
    .lex-entry {
        font-family: Gentium;
        font-size: 11pt;
        transition: 0.3s;
        padding: 1em;
    }
    
    .variants {
        font-family: Gentium;
        font-size: 11pt;
    }
    .variants div.column {
        margin: 0.6em;
    }
    
    .capitalize {
        text-transform: capitalize;
    }
    
    .tag-item {
        font-family: serif;
        font-size: 7pt;
        border-radius: 7%;
        width: fit-content;
        padding: 0.2em;
        margin: 0.2em;
        text-transform: uppercase;
        display: inline-block;
    }
    
    .sense {
        font-family: Gentium;
        font-size: 9pt;
        border-radius: 7%;
        width: fit-content;
        padding: 0.2em;
        margin: 0.2em;
        font-weight: bold;
        font-style: italic;
        display: inline-block;
        background-color: transparent;
        margin-top: 1em;
    }
    
    .lect {
        font-family: serif;
        font-size: 9pt;
        font-style: italic;
        margin-top: 0.1em;
    }
    
    [id=entry-counter] {
        font-family: serif;
        font-size: 7pt;
        border-radius: 7%;
        width: fit-content;
        padding: 0.2em;
        margin: 0.2em;
        text-transform: uppercase;
        font-weight: bold;
        margin: auto;
    }
    
    .scrolled {
        overflow-y: auto;
        overflow-x: wrap;
    }
    
    .container {
        border-radius: 6px;
        text-align: center;
        margin: 6px;
        padding: 6px;
    }
    
    .row button {
        padding: 2px 10px 2px 10px;
        margin: 4px auto 4px auto;
        display: flex;
        width: fit-content;
        border: 1px solid black;
        border-radius: 8px;
    }
    
    label {
        font-family: serif;
        font-size: 11pt;
        -webkit-user-select: none;
    }
    
    .pronunciation {
        font-family: Gentium;
        font-size: 9pt;
    }
    
    textarea, input {
        font-family: Gentium;
        font-size: 11pt;
        display: flex;
        text-align: center;
        padding: 4px;
        margin: 1px auto 1px auto;
        border: none;
        border-radius: 3px;
        width: 80%;
        resize: vertical;
        transition: 0.2s;
    }
    textarea .pronunciation, input .pronunciation {
        font-family: Gentium;
        font-size: 9pt;
    }
    textarea[type=number], input[type=number] {
        padding: 1px;
        width: 4em;
    }
    textarea[type=checkbox], input[type=checkbox] {
        appearance: none;
        margin: auto;
        font: inherit;
        width: 1rem;
        height: 1rem;
        border-radius: 0.15em;
        transform: translateY(-0.075em);
        display: grid;
        place-content: center;
    }
    textarea[type=checkbox]::before, input[type=checkbox]::before {
        content: "";
        width: 0.65em;
        height: 0.65em;
        transform: scale(0);
        transition: 120ms transform ease-in-out;
    }
    textarea[type=checkbox]:checked::before, input[type=checkbox]:checked::before {
        transform: scale(1);
        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    }
    
    .header input {
        width: 70%;
    }
    
    .narrow {
        width: 50%;
        margin: auto;
    }
    .narrow-col {
        width: 15%;
    }
    
    .search {
        text-align: left;
        width: 100%;
        margin: 2px auto 2px auto;
    }
    
    .search-container {
        padding: 0 0.5em 0 0.5em;
        position: relative;
    }
    
    table {
        border-collapse: collapse;
        width: 95%;
    }
    table-container {
        font-family: Gentium;
        font-size: 11pt;
        margin: auto;
        padding: 30px 5%;
    }
    table-title {
        font-family: Gentium;
        font-size: 14pt;
        font-style: italic;
    }
    
    td {
        padding: 2px 6px 2px 6px;
        text-align: center;
        user-select: none;
    }
    
    .inflection {
        font-family: Gentium;
        font-size: 7pt;
    }
    .inflection h1, .inflection h2, .inflection h3, .inflection h4, .inflection h5, .inflection h6 {
        padding-top: 0.2em;
    }
    .inflection h1 {
        font-size: 1.5em;
    }
    .inflection h2 {
        font-size: 1.3em;
    }
    .inflection h3 {
        font-size: 1.1em;
    }
    .inflection h4 {
        font-size: 1em;
    }
    .inflection h5 {
        font-size: 0.9em;
    }
    .inflection h6 {
        font-size: 0.8em;
    }
    
    ::-webkit-scrollbar {
        width: 9px;
    }
    ::-webkit-scrollbar-thumb {
        border-radius: 6px;
        transition: 0.2s;
    }
    ::-webkit-scrollbar-button {
        display: none;
    }
    ::-webkit-scrollbar-corner {
        border-radius: 6px 0px 0px 0px;
    }
    ::-webkit-resizer {
        border-radius: 6px 0px 0px 0px;
    }
    
    hr {
        margin-bottom: 0.2em;
        margin-top: 0.2em;
        max-width: 66.66%;
        padding: 0px;
    }
    
    .milkyWay {
        width: 100px;
        height: 100px;
        background: transparent;
        margin: auto;
        position: relative;
        border-radius: 50%;
    }
    .milkyWay .planet {
        border: 1px solid white;
        animation-name: orbit;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
        animation-play-state: paused;
    }
    .milkyWay .planet::before, .milkyWay .planet::after {
        position: absolute;
        content: "";
        display: block;
        border-radius: 50%;
    }
    .milkyWay > div {
        position: absolute;
        border-radius: 50%;
    }
    
    .sun {
        background: #faca09;
        width: 10%;
        height: 10%;
        top: 45%;
        left: 45%;
    }
    
    .mercury {
        width: 20%;
        height: 20%;
        top: calc(40% - 1px);
        left: calc(40% - 1px);
        animation-duration: 2s;
    }
    .mercury::before {
        background: #9fb5b6;
        width: 16%;
        height: 16%;
        top: -8%;
        left: 42%;
    }
    
    .venus {
        width: 30%;
        height: 30%;
        top: calc(35% - 1px);
        left: calc(35% - 1px);
        animation-duration: 3s;
    }
    .venus::before {
        background: #ECC98E;
        width: 10%;
        height: 10%;
        top: -5%;
        left: 45%;
    }
    
    .earth {
        width: 40%;
        height: 40%;
        top: calc(30% - 1px);
        left: calc(30% - 1px);
        animation-duration: 4s;
    }
    .earth::before {
        background: #208fd8;
        width: 10%;
        height: 10%;
        top: -5%;
        left: 45%;
    }
    .earth::after {
        background: #33c470;
        width: 10%;
        height: 6%;
        top: -3%;
        left: 45%;
        transform: rotate(45deg);
    }
    
    .mars {
        width: 50%;
        height: 50%;
        top: calc(25% - 1px);
        left: calc(25% - 1px);
        animation-duration: 5s;
    }
    .mars::before {
        background: #d35400;
        width: 6%;
        height: 6%;
        top: -3%;
        left: 47%;
    }
    
    .jupiter {
        width: 60%;
        height: 60%;
        top: calc(20% - 1px);
        left: calc(20% - 1px);
        animation-duration: 6s;
    }
    .jupiter::before {
        background: #d4975a;
        width: 10%;
        height: 10%;
        top: -5%;
        left: 45%;
    }
    
    .saturn {
        width: 70%;
        height: 70%;
        top: calc(15% - 1px);
        left: calc(15% - 1px);
        animation-duration: 7s;
    }
    .saturn::before {
        background: #E4D191;
        width: 7%;
        height: 7%;
        top: -4%;
        left: 48%;
    }
    .saturn::after {
        background: #F0E4C1;
        width: 12%;
        height: 1%;
        top: -1%;
        left: 45.5%;
        transform: rotate(-15deg);
    }
    
    .uranus {
        width: 80%;
        height: 80%;
        top: calc(10% - 1px);
        left: calc(10% - 1px);
        animation-duration: 8s;
    }
    .uranus::before {
        background: #3498db;
        width: 5%;
        height: 5%;
        top: -2%;
        left: 48%;
    }
    .uranus::after {
        background: #b0d0e5;
        width: 8%;
        height: 0.5%;
        top: 0%;
        left: 46.25%;
        transform: rotate(-15deg);
    }
    
    .neptune {
        width: 90%;
        height: 90%;
        top: calc(5% - 1px);
        left: calc(5% - 1px);
        animation-duration: 9s;
    }
    .neptune::before {
        background: #1269a3;
        width: 4%;
        height: 4%;
        top: -1%;
        left: 49%;
    }
    .neptune::after {
        background: #91cbf2;
        width: 6%;
        height: 0.5%;
        top: 0.5%;
        left: 48%;
        transform: rotate(-15deg);
    }
    
    .pluto {
        width: 100%;
        height: 100%;
        top: calc(0% - 1px);
        left: calc(0% - 1px);
        animation-duration: 10s;
    }
    .pluto::before {
        background: #b78c7a;
        width: 1%;
        height: 1%;
        top: -0.5%;
        left: 49.5%;
    }
    
    @keyframes orbit {
        0% {
            transform: rotate(-180deg);
        }
        100% {
            transform: rotate(180deg);
        }
    }
    /* EditorJS Overrides */
    .ce-toolbar__plus {
        transition: 0.33s;
    }
    .ce-toolbar__content {
        max-width: 90% !important;
    }
    .ce-block__content {
        max-width: 80% !important;
    }
    .ce-block--selected .ce-block__content {
        background-color: rgba(255, 255, 255, 0.3333333333) !important;
    }
    
    ::selection {
        background-color: rgba(255, 255, 255, 0.3333333333) !important;
    }
    
    /*# sourceMappingURL=index.css.map */
`,
    jy = require,
    Yt = jy('path');
Yt.resolve;
Yt.normalize;
Yt.isAbsolute;
Yt.join;
Yt.relative;
Yt.toNamespacedPath;
Yt.dirname;
Yt.basename;
Yt.extname;
Yt.format;
Yt.parse;
Yt.matchesGlob;
Yt.sep;
Yt.delimiter;
Yt.win32;
Yt.posix;
Yt._makeLong;
const xt = Yt.default || Yt,
    { ipcRenderer: Tl } = require('electron'),
    $y = () => _t(q);
async function Wy(o, ...e) {
    return await Tl.invoke('ffi', o, ...e);
}
async function pf(o, e, t) {
    const n = `${await Tl.invoke('getUserDataPath')}/GraphemyCache/${$y().Name}-${t}-${e}.svg`,
        s =
            (await Tl.invoke('isDev')) ?
                './src/app/utils/interop/library/src/graphemy'
            :   xt.resolve(process.resourcesPath, 'graphemy');
    return Wy('graphemify', o, e, n, s);
}
function _c(o, e, t) {
    const n = o.slice();
    return (n[5] = e[t]), n;
}
function xc(o) {
    let e, t;
    return {
        c() {
            (e = f('p')), (t = Y(o[0])), Z(e, 'font-style', 'italic');
        },
        m(n, i) {
            C(n, e, i), d(e, t);
        },
        p(n, i) {
            i & 1 && Ee(t, n[0]);
        },
        d(n) {
            n && x(e);
        },
    };
}
function Cc(o) {
    let e;
    function t(s, r) {
        return s[5].typesetter === 'graphemy' ? qy : Gy;
    }
    let n = t(o),
        i = n(o);
    return {
        c() {
            i.c(), (e = yt());
        },
        m(s, r) {
            i.m(s, r), C(s, e, r);
        },
        p(s, r) {
            n === (n = t(s)) && i ?
                i.p(s, r)
            :   (i.d(1), (i = n(s)), i && (i.c(), i.m(e.parentNode, e)));
        },
        d(s) {
            s && x(e), i.d(s);
        },
    };
}
function Gy(o) {
    let e,
        t = s() + '',
        n,
        i;
    function s() {
        return o[4](o[5]);
    }
    return {
        c() {
            (e = f('p')), (n = Y(t)), (i = v()), Z(e, 'font-family', o[5].font);
        },
        m(r, l) {
            C(r, e, l), d(e, n), d(e, i);
        },
        p(r, l) {
            (o = r),
                l & 7 && t !== (t = s() + '') && Ee(n, t),
                l & 4 && Z(e, 'font-family', o[5].font);
        },
        d(r) {
            r && x(e);
        },
    };
}
function qy(o) {
    let e,
        t,
        n = {
            ctx: o,
            current: null,
            token: null,
            hasCatch: !0,
            pending: Ky,
            then: Yy,
            catch: Vy,
            value: 8,
            error: 9,
        };
    return (
        ma((t = o[3](o[0], o[5].font, o[5].name)), n),
        {
            c() {
                (e = yt()), n.block.c();
            },
            m(i, s) {
                C(i, e, s),
                    n.block.m(i, (n.anchor = s)),
                    (n.mount = () => e.parentNode),
                    (n.anchor = e);
            },
            p(i, s) {
                (o = i),
                    (n.ctx = o),
                    (s & 5 &&
                        t !== (t = o[3](o[0], o[5].font, o[5].name)) &&
                        ma(t, n)) ||
                        Df(n, o, s);
            },
            d(i) {
                i && x(e), n.block.d(i), (n.token = null), (n = null);
            },
        }
    );
}
function Vy(o) {
    let e,
        t,
        n,
        i = o[9] + '',
        s,
        r;
    return {
        c() {
            (e = f('p')),
                (e.textContent =
                    'An error occurred while generating the SVG. The error is printed below. Please contact the developer for assistance.'),
                (t = v()),
                (n = f('code')),
                (s = Y(i)),
                (r = v());
        },
        m(l, a) {
            C(l, e, a), C(l, t, a), C(l, n, a), d(n, s), C(l, r, a);
        },
        p(l, a) {
            a & 5 && i !== (i = l[9] + '') && Ee(s, i);
        },
        d(l) {
            l && (x(e), x(t), x(n), x(r));
        },
    };
}
function Yy(o) {
    let e,
        t = o[8] + '',
        n;
    return {
        c() {
            (e = f('div')), (n = v());
        },
        m(i, s) {
            C(i, e, s), (e.innerHTML = t), C(i, n, s);
        },
        p(i, s) {
            s & 5 && t !== (t = i[8] + '') && (e.innerHTML = t);
        },
        d(i) {
            i && (x(e), x(n));
        },
    };
}
function Ky(o) {
    let e, t;
    return {
        c() {
            (e = f('p')),
                (e.innerHTML = '<i>generating...</i>'),
                (t = v()),
                g(e, 'class', 'info');
        },
        m(n, i) {
            C(n, e, i), C(n, t, i);
        },
        p: Le,
        d(n) {
            n && (x(e), x(t));
        },
    };
}
function Ec(o) {
    let e,
        t =
            o[5].name !== 'Romanization' &&
            o[5].display &&
            (o[5].root === 'rom' || o[5].lect in o[1].pronunciations) &&
            Cc(o);
    return {
        c() {
            t && t.c(), (e = yt());
        },
        m(n, i) {
            t && t.m(n, i), C(n, e, i);
        },
        p(n, i) {
            (
                n[5].name !== 'Romanization' &&
                n[5].display &&
                (n[5].root === 'rom' || n[5].lect in n[1].pronunciations)
            ) ?
                t ? t.p(n, i)
                :   ((t = Cc(n)), t.c(), t.m(e.parentNode, e))
            :   t && (t.d(1), (t = null));
        },
        d(n) {
            n && x(e), t && t.d(n);
        },
    };
}
function Xy(o) {
    let e = (o[2].Orthographies.find(Tc) || { display: !1 }).display,
        t,
        n,
        i = e && xc(o),
        s = he(o[2].Orthographies),
        r = [];
    for (let l = 0; l < s.length; l += 1) r[l] = Ec(_c(o, s, l));
    return {
        c() {
            i && i.c(), (t = v());
            for (let l = 0; l < r.length; l += 1) r[l].c();
            n = yt();
        },
        m(l, a) {
            i && i.m(l, a), C(l, t, a);
            for (let c = 0; c < r.length; c += 1) r[c] && r[c].m(l, a);
            C(l, n, a);
        },
        p(l, [a]) {
            if (
                (a & 4 &&
                    (e = (l[2].Orthographies.find(Tc) || { display: !1 })
                        .display),
                e ?
                    i ? i.p(l, a)
                    :   ((i = xc(l)), i.c(), i.m(t.parentNode, t))
                :   i && (i.d(1), (i = null)),
                a & 15)
            ) {
                s = he(l[2].Orthographies);
                let c;
                for (c = 0; c < s.length; c += 1) {
                    const h = _c(l, s, c);
                    r[c] ?
                        r[c].p(h, a)
                    :   ((r[c] = Ec(h)), r[c].c(), r[c].m(n.parentNode, n));
                }
                for (; c < r.length; c += 1) r[c].d(1);
                r.length = s.length;
            }
        },
        i: Le,
        o: Le,
        d(l) {
            l && (x(t), x(n)), i && i.d(l), He(r, l);
        },
    };
}
const Tc = (o) => o.name === 'Romanization';
function Zy(o, e, t) {
    let n;
    $e(o, q, (a) => t(2, (n = a)));
    let { word: i } = e,
        { source: s } = e;
    async function r(a, c, h) {
        let u = await Cl(a, h);
        return (
            u === 'No SVG found.' && (await pf(c, a, h), (u = await Cl(a, h))),
            uf(u)
        );
    }
    const l = (a) => {
        const c = di(a.rules);
        return Hi(
            c.rules,
            a.root === 'rom' ? i : s.pronunciations[a.lect].ipa,
            c.categories,
        );
    };
    return (
        (o.$$set = (a) => {
            'word' in a && t(0, (i = a.word)),
                'source' in a && t(1, (s = a.source));
        }),
        [i, s, n, r, l]
    );
}
class da extends Rt {
    constructor(e) {
        super(), Nt(this, e, Zy, Xy, Ct, { word: 0, source: 1 });
    }
}
function Sc(o, e, t) {
    const n = o.slice();
    return (n[9] = e[t]), (n[11] = t), n;
}
function Bc(o, e, t) {
    const n = o.slice();
    return (n[12] = e[t]), n;
}
function Ic(o) {
    let e;
    return {
        c() {
            (e = f('div')),
                (e.textContent = `${o[11] + 1}.`),
                g(e, 'class', 'sense');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Lc(o) {
    let e,
        t = o[12] + '',
        n;
    return {
        c() {
            (e = f('div')), (n = Y(t)), g(e, 'class', 'tag-item');
        },
        m(i, s) {
            C(i, e, s), d(e, n);
        },
        p(i, s) {
            s & 2 && t !== (t = i[12] + '') && Ee(n, t);
        },
        d(i) {
            i && x(e);
        },
    };
}
function Ac(o) {
    let e,
        t = !!o[12] && Lc(o);
    return {
        c() {
            t && t.c(), (e = yt());
        },
        m(n, i) {
            t && t.m(n, i), C(n, e, i);
        },
        p(n, i) {
            n[12] ?
                t ? t.p(n, i)
                :   ((t = Lc(n)), t.c(), t.m(e.parentNode, e))
            :   t && (t.d(1), (t = null));
        },
        d(n) {
            n && x(e), t && t.d(n);
        },
    };
}
function Oc(o) {
    let e,
        t = o[9].lects.join(', ') + '',
        n;
    return {
        c() {
            (e = f('p')), (n = Y(t)), g(e, 'class', 'lect');
        },
        m(i, s) {
            C(i, e, s), d(e, n);
        },
        p(i, s) {
            s & 2 && t !== (t = i[9].lects.join(', ') + '') && Ee(n, t);
        },
        d(i) {
            i && x(e);
        },
    };
}
function Mc(o) {
    let e, t;
    return (
        (e = new pb({ props: { word: o[0], tags: o[9].tags } })),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(n, i) {
                jt(e, n, i), (t = !0);
            },
            p(n, i) {
                const s = {};
                i & 1 && (s.word = n[0]),
                    i & 2 && (s.tags = n[9].tags),
                    e.$set(s);
            },
            i(n) {
                t || (Ce(e.$$.fragment, n), (t = !0));
            },
            o(n) {
                Oe(e.$$.fragment, n), (t = !1);
            },
            d(n) {
                $t(e, n);
            },
        }
    );
}
function Pc(o) {
    let e, t, n, i, s;
    return {
        c() {
            (e = f('div')),
                (e.textContent = 'etymology'),
                (t = v()),
                (n = f('p')),
                (i = f('i')),
                (s = Y(o[5])),
                g(e, 'class', 'tag-item'),
                g(n, 'class', 'lex-body');
        },
        m(r, l) {
            C(r, e, l), C(r, t, l), C(r, n, l), d(n, i), d(i, s);
        },
        p(r, l) {
            l & 32 && Ee(s, r[5]);
        },
        d(r) {
            r && (x(e), x(t), x(n));
        },
    };
}
function Nc(o) {
    let e,
        t,
        n =
            o[4].UseLects &&
            !Rc(o[9].lects, Array.from(Object.keys(o[1].pronunciations))),
        i,
        s,
        r = Co(o[9].definition) + '',
        l,
        a,
        c,
        h,
        u = o[1].Senses.length > 1 && Ic(o),
        p = he(o[9].tags),
        b = [];
    for (let w = 0; w < p.length; w += 1) b[w] = Ac(Bc(o, p, w));
    let m = n && Oc(o),
        k = (o[4].ShowInflection || o[3]) && Mc(o),
        y = o[4].ShowEtymology && !!o[5] && o[2] && Pc(o);
    return {
        c() {
            u && u.c(), (e = v());
            for (let w = 0; w < b.length; w += 1) b[w].c();
            (t = v()),
                m && m.c(),
                (i = v()),
                (s = f('p')),
                (l = v()),
                k && k.c(),
                (a = v()),
                y && y.c(),
                (c = yt()),
                Z(s, 'margin-bottom', '-1em');
        },
        m(w, E) {
            u && u.m(w, E), C(w, e, E);
            for (let _ = 0; _ < b.length; _ += 1) b[_] && b[_].m(w, E);
            C(w, t, E),
                m && m.m(w, E),
                C(w, i, E),
                C(w, s, E),
                (s.innerHTML = r),
                C(w, l, E),
                k && k.m(w, E),
                C(w, a, E),
                y && y.m(w, E),
                C(w, c, E),
                (h = !0);
        },
        p(w, E) {
            if (
                (w[1].Senses.length > 1 ?
                    u || ((u = Ic(w)), u.c(), u.m(e.parentNode, e))
                :   u && (u.d(1), (u = null)),
                E & 2)
            ) {
                p = he(w[9].tags);
                let _;
                for (_ = 0; _ < p.length; _ += 1) {
                    const B = Bc(w, p, _);
                    b[_] ?
                        b[_].p(B, E)
                    :   ((b[_] = Ac(B)), b[_].c(), b[_].m(t.parentNode, t));
                }
                for (; _ < b.length; _ += 1) b[_].d(1);
                b.length = p.length;
            }
            E & 18 &&
                (n =
                    w[4].UseLects &&
                    !Rc(
                        w[9].lects,
                        Array.from(Object.keys(w[1].pronunciations)),
                    )),
                n ?
                    m ? m.p(w, E)
                    :   ((m = Oc(w)), m.c(), m.m(i.parentNode, i))
                :   m && (m.d(1), (m = null)),
                (!h || E & 2) &&
                    r !== (r = Co(w[9].definition) + '') &&
                    (s.innerHTML = r),
                w[4].ShowInflection || w[3] ?
                    k ? (k.p(w, E), E & 24 && Ce(k, 1))
                    :   ((k = Mc(w)), k.c(), Ce(k, 1), k.m(a.parentNode, a))
                :   k &&
                    (Wt(),
                    Oe(k, 1, 1, () => {
                        k = null;
                    }),
                    Gt()),
                w[4].ShowEtymology && w[5] && w[2] ?
                    y ? y.p(w, E)
                    :   ((y = Pc(w)), y.c(), y.m(c.parentNode, c))
                :   y && (y.d(1), (y = null));
        },
        i(w) {
            h || (Ce(k), (h = !0));
        },
        o(w) {
            Oe(k), (h = !1);
        },
        d(w) {
            w && (x(e), x(t), x(i), x(s), x(l), x(a), x(c)),
                u && u.d(w),
                He(b, w),
                m && m.d(w),
                k && k.d(w),
                y && y.d(w);
        },
    };
}
function Jy(o) {
    let e, t, n, i, s, r;
    (t = new da({ props: { word: o[0], source: o[1] } })),
        (i = new ql({ props: { pronunciations: o[1].pronunciations } }));
    let l = he(o[1].Senses),
        a = [];
    for (let h = 0; h < l.length; h += 1) a[h] = Nc(Sc(o, l, h));
    const c = (h) =>
        Oe(a[h], 1, 1, () => {
            a[h] = null;
        });
    return {
        c() {
            (e = f('div')),
                qt(t.$$.fragment),
                (n = v()),
                qt(i.$$.fragment),
                (s = v());
            for (let h = 0; h < a.length; h += 1) a[h].c();
            g(e, 'id', o[0]),
                g(e, 'class', 'lex-entry prelined'),
                g(e, 'oncontextmenu', o[6]);
        },
        m(h, u) {
            C(h, e, u), jt(t, e, null), d(e, n), jt(i, e, null), d(e, s);
            for (let p = 0; p < a.length; p += 1) a[p] && a[p].m(e, null);
            r = !0;
        },
        p(h, [u]) {
            const p = {};
            u & 1 && (p.word = h[0]), u & 2 && (p.source = h[1]), t.$set(p);
            const b = {};
            if (
                (u & 2 && (b.pronunciations = h[1].pronunciations),
                i.$set(b),
                u & 63)
            ) {
                l = he(h[1].Senses);
                let m;
                for (m = 0; m < l.length; m += 1) {
                    const k = Sc(h, l, m);
                    a[m] ?
                        (a[m].p(k, u), Ce(a[m], 1))
                    :   ((a[m] = Nc(k)),
                        a[m].c(),
                        Ce(a[m], 1),
                        a[m].m(e, null));
                }
                for (Wt(), m = l.length; m < a.length; m += 1) c(m);
                Gt();
            }
            (!r || u & 1) && g(e, 'id', h[0]);
        },
        i(h) {
            if (!r) {
                Ce(t.$$.fragment, h), Ce(i.$$.fragment, h);
                for (let u = 0; u < l.length; u += 1) Ce(a[u]);
                r = !0;
            }
        },
        o(h) {
            Oe(t.$$.fragment, h), Oe(i.$$.fragment, h), (a = a.filter(Boolean));
            for (let u = 0; u < a.length; u += 1) Oe(a[u]);
            r = !1;
        },
        d(h) {
            h && x(e), $t(t), $t(i), He(a, h);
        },
    };
}
function Rc(o, e) {
    return o.length !== e.length ? !1 : o.every((t, n) => e.includes(t));
}
function Qy(o, e, t) {
    let n;
    $e(o, q, (p) => t(4, (n = p)));
    const i = ji(),
        s = () => i('edit');
    let { word: r } = e,
        { source: l } = e,
        { showEtymology: a } = e,
        { showInflections: c = !1 } = e;
    function h() {
        const p = [];
        let b = [r],
            m = 6;
        for (
            ;
            Object.keys(n.Etymologies).some((w) =>
                n.Etymologies[w].descendants.some((E) => b.includes(E.name)),
            ) && m;

        )
            m--,
                p.push(
                    Object.keys(n.Etymologies).filter((w) => {
                        const E = n.Etymologies[w].descendants.some((_) =>
                            b.includes(_.name),
                        );
                        return (
                            (p.flat().includes(r) || (w === r && E)) && (m = 0),
                            E
                        );
                    }),
                ),
                (b = p[p.length - 1]);
        p.reverse();
        let k = '',
            y = '';
        return (
            p.forEach((w) => {
                let E = w.join(', ');
                E !== y && (k += E + ' → '), (y = E);
            }),
            (k = k ? k + r : ''),
            k
        );
    }
    let u = '';
    return (
        (o.$$set = (p) => {
            'word' in p && t(0, (r = p.word)),
                'source' in p && t(1, (l = p.source)),
                'showEtymology' in p && t(2, (a = p.showEtymology)),
                'showInflections' in p && t(3, (c = p.showInflections));
        }),
        (o.$$.update = () => {
            o.$$.dirty & 19 && (n.Etymologies, n.Lexicon, t(5, (u = h())));
        }),
        [r, l, a, c, n, u, s]
    );
}
class ua extends Rt {
    constructor(e) {
        super(),
            Nt(this, e, Qy, Jy, Ct, {
                word: 0,
                source: 1,
                showEtymology: 2,
                showInflections: 3,
            });
    }
}
function Dc(o, e, t) {
    const n = o.slice();
    return (n[2] = e[t]), n;
}
function Fc(o) {
    let e,
        t = o[2] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[2]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r & 2 && t !== (t = s[2] + '') && Ee(n, t),
                r & 2 && i !== (i = s[2]) && ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function ev(o) {
    let e,
        t,
        n,
        i,
        s = he(
            Array.from(
                new Set(
                    Object.keys(o[1].Lexicon)
                        .map(o[4])
                        .flat(1 / 0),
                ),
            ).sort(),
        ),
        r = [];
    for (let l = 0; l < s.length; l += 1) r[l] = Fc(Dc(o, s, l));
    return {
        c() {
            (e = f('select')),
                (t = f('option')),
                (t.textContent = 'Choose Tags');
            for (let l = 0; l < r.length; l += 1) r[l].c();
            (t.__value = 'existing tags'),
                j(t, t.__value),
                o[0] === void 0 && Pt(() => o[5].call(e));
        },
        m(l, a) {
            C(l, e, a), d(e, t);
            for (let c = 0; c < r.length; c += 1) r[c] && r[c].m(e, null);
            Bt(e, o[0], !0),
                n ||
                    ((i = [R(e, 'change', o[5]), R(e, 'change', o[6])]),
                    (n = !0));
        },
        p(l, [a]) {
            if (a & 2) {
                s = he(
                    Array.from(
                        new Set(
                            Object.keys(l[1].Lexicon)
                                .map(l[4])
                                .flat(1 / 0),
                        ),
                    ).sort(),
                );
                let c;
                for (c = 0; c < s.length; c += 1) {
                    const h = Dc(l, s, c);
                    r[c] ?
                        r[c].p(h, a)
                    :   ((r[c] = Fc(h)), r[c].c(), r[c].m(e, null));
                }
                for (; c < r.length; c += 1) r[c].d(1);
                r.length = s.length;
            }
            a & 3 && Bt(e, l[0]);
        },
        i: Le,
        o: Le,
        d(l) {
            l && x(e), He(r, l), (n = !1), ot(i);
        },
    };
}
function tv(o, e, t) {
    let n;
    $e(o, q, (u) => t(1, (n = u)));
    const i = ji();
    let { tagSelector: s = 'existing tags' } = e,
        r = '';
    const l = () => i('select', r),
        a = (u) => n.Lexicon[u].Senses.map((p) => p.tags);
    function c() {
        (s = zn(this)), t(0, s);
    }
    const h = () => {
        t(2, (r = s === 'existing tags' ? '' : `${s}`)),
            l(),
            t(0, (s = 'existing tags'));
    };
    return (
        (o.$$set = (u) => {
            'tagSelector' in u && t(0, (s = u.tagSelector));
        }),
        [s, n, r, l, a, c, h]
    );
}
class ff extends Rt {
    constructor(e) {
        super(), Nt(this, e, tv, ev, Ct, { tagSelector: 0 });
    }
}
function Hc(o, e, t) {
    const n = o.slice();
    return (n[16] = e[t]), n;
}
function zc(o) {
    let e,
        t,
        n = o[3] + 1 + '',
        i,
        s,
        r;
    return {
        c() {
            (e = f('i')),
                (t = Y('Sense ')),
                (i = Y(n)),
                (s = v()),
                (r = f('br'));
        },
        m(l, a) {
            C(l, e, a), d(e, t), d(e, i), C(l, s, a), C(l, r, a);
        },
        p(l, a) {
            a & 8 && n !== (n = l[3] + 1 + '') && Ee(i, n);
        },
        d(l) {
            l && (x(e), x(s), x(r));
        },
    };
}
function Uc(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l = he(o[4].Lects),
        a = [];
    for (let c = 0; c < l.length; c += 1) a[c] = jc(Hc(o, l, c));
    return {
        c() {
            (e = f('label')), (t = Y('Lects')), (n = f('br')), (i = v());
            for (let c = 0; c < a.length; c += 1) a[c].c();
            (s = v()), (r = f('br'));
        },
        m(c, h) {
            C(c, e, h), d(e, t), d(e, n), d(e, i);
            for (let u = 0; u < a.length; u += 1) a[u] && a[u].m(e, null);
            C(c, s, h), C(c, r, h);
        },
        p(c, h) {
            if (h & 146) {
                l = he(c[4].Lects);
                let u;
                for (u = 0; u < l.length; u += 1) {
                    const p = Hc(c, l, u);
                    a[u] ?
                        a[u].p(p, h)
                    :   ((a[u] = jc(p)), a[u].c(), a[u].m(e, null));
                }
                for (; u < a.length; u += 1) a[u].d(1);
                a.length = l.length;
            }
        },
        d(c) {
            c && (x(e), x(s), x(r)), He(a, c);
        },
    };
}
function jc(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a = o[16] + '',
        c,
        h,
        u,
        p,
        b;
    function m() {
        return o[12](o[16]);
    }
    return {
        c() {
            (e = f('label')),
                (t = f('div')),
                (n = f('input')),
                (r = v()),
                (l = f('span')),
                (c = Y(a)),
                (h = v()),
                (u = f('br')),
                g(n, 'id', (i = o[16])),
                g(n, 'type', 'checkbox'),
                (n.checked = s = o[1].includes(o[16])),
                Z(t, 'display', 'inline-block'),
                Z(l, 'display', 'inline-block');
        },
        m(k, y) {
            C(k, e, y),
                d(e, t),
                d(t, n),
                d(e, r),
                d(e, l),
                d(l, c),
                d(e, h),
                C(k, u, y),
                p || ((b = R(n, 'change', m)), (p = !0));
        },
        p(k, y) {
            (o = k),
                y & 16 && i !== (i = o[16]) && g(n, 'id', i),
                y & 18 && s !== (s = o[1].includes(o[16])) && (n.checked = s),
                y & 16 && a !== (a = o[16] + '') && Ee(c, a);
        },
        d(k) {
            k && (x(e), x(u)), (p = !1), b();
        },
    };
}
function $c(o) {
    let e,
        t,
        n = o[3] + 1 + '',
        i,
        s,
        r;
    return {
        c() {
            (e = f('button')),
                (t = Y('Remove Sense ')),
                (i = Y(n)),
                g(e, 'class', 'hover-highlight hover-shadow');
        },
        m(l, a) {
            C(l, e, a),
                d(e, t),
                d(e, i),
                s || ((r = R(e, 'click', o[5])), (s = !0));
        },
        p(l, a) {
            a & 8 && n !== (n = l[3] + 1 + '') && Ee(i, n);
        },
        d(l) {
            l && x(e), (s = !1), r();
        },
    };
}
function nv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T = o[3] !== 'hide' && zc(o);
    (m = new ff({})), m.$on('select', o[11]);
    let S = o[4].UseLects && Uc(o),
        A = !!o[3] && o[3] !== 'hide' && $c(o);
    return {
        c() {
            (e = f('label')),
                T && T.c(),
                (t = v()),
                (n = f('label')),
                (i = Y(`Definition
        `)),
                (s = f('textarea')),
                (r = v()),
                (l = f('br')),
                (a = v()),
                (c = f('label')),
                (h = Y(`Tags
        `)),
                (u = f('div')),
                (p = f('textarea')),
                (b = v()),
                qt(m.$$.fragment),
                (k = v()),
                (y = f('br')),
                (w = v()),
                S && S.c(),
                (E = v()),
                A && A.c(),
                (_ = v()),
                (B = f('br')),
                g(s, 'rows', '4'),
                g(p, 'rows', '1');
        },
        m($, K) {
            C($, e, K),
                T && T.m(e, null),
                d(e, t),
                d(e, n),
                d(n, i),
                d(n, s),
                j(s, o[2]),
                d(e, r),
                d(e, l),
                d(e, a),
                d(e, c),
                d(c, h),
                d(c, u),
                d(u, p),
                j(p, o[0]),
                d(u, b),
                jt(m, u, null),
                d(e, k),
                d(e, y),
                d(e, w),
                S && S.m(e, null),
                d(e, E),
                A && A.m(e, null),
                d(e, _),
                d(e, B),
                (O = !0),
                P ||
                    ((H = [
                        R(s, 'input', o[8]),
                        R(s, 'keydown', o[9]),
                        R(p, 'input', o[10]),
                    ]),
                    (P = !0));
        },
        p($, [K]) {
            $[3] !== 'hide' ?
                T ? T.p($, K)
                :   ((T = zc($)), T.c(), T.m(e, t))
            :   T && (T.d(1), (T = null)),
                K & 4 && j(s, $[2]),
                K & 1 && j(p, $[0]),
                $[4].UseLects ?
                    S ? S.p($, K)
                    :   ((S = Uc($)), S.c(), S.m(e, E))
                :   S && (S.d(1), (S = null)),
                $[3] && $[3] !== 'hide' ?
                    A ? A.p($, K)
                    :   ((A = $c($)), A.c(), A.m(e, _))
                :   A && (A.d(1), (A = null));
        },
        i($) {
            O || (Ce(m.$$.fragment, $), (O = !0));
        },
        o($) {
            Oe(m.$$.fragment, $), (O = !1);
        },
        d($) {
            $ && x(e),
                T && T.d(),
                $t(m),
                S && S.d(),
                A && A.d(),
                (P = !1),
                ot(H);
        },
    };
}
function ov(o, e, t) {
    let n, i, s;
    $e(o, si, (_) => t(13, (n = _))),
        $e(o, yn, (_) => t(14, (i = _))),
        $e(o, q, (_) => t(4, (s = _)));
    let { definition: r = '' } = e,
        { tags: l } = e,
        { index: a } = e;
    const c = ji(),
        h = () => c('remove'),
        u = () => c('commit');
    let { lects: p } = e;
    function b(_) {
        p.includes(_) ?
            t(1, (p = p.filter((B) => B !== _)))
        :   (t(1, (p = [...p, _])), ee(yn, (i[_] = en(n, _)), i));
    }
    function m() {
        (r = this.value), t(2, r);
    }
    const k = (_) => {
        _.key === 'Enter' && _.altKey && u();
    };
    function y() {
        (l = this.value), t(0, l);
    }
    const w = (_) =>
            t(
                0,
                (l +=
                    _.detail ?
                        l ? ' ' + _.detail
                        :   _.detail
                    :   ''),
            ),
        E = (_) => b(_);
    return (
        (o.$$set = (_) => {
            'definition' in _ && t(2, (r = _.definition)),
                'tags' in _ && t(0, (l = _.tags)),
                'index' in _ && t(3, (a = _.index)),
                'lects' in _ && t(1, (p = _.lects));
        }),
        (o.$$.update = () => {
            o.$$.dirty & 1,
                o.$$.dirty & 18 &&
                    p.filter((_) => !s.Lects.includes(_)).length > 0 &&
                    p
                        .filter((_) => !s.Lects.includes(_))
                        .forEach((_) => {
                            t(1, (p = p.filter((B) => B !== _)));
                        });
        }),
        [l, p, r, a, s, h, u, b, m, k, y, w, E]
    );
}
class gf extends Rt {
    constructor(e) {
        super(),
            Nt(this, e, ov, nv, Ct, {
                definition: 2,
                tags: 0,
                index: 3,
                lects: 1,
            });
    }
}
function Wc(o, e, t) {
    const n = o.slice();
    return (n[45] = e[t]), n;
}
function Gc(o, e, t) {
    const n = o.slice();
    return (n[48] = e[t]), n;
}
function qc(o, e, t) {
    const n = o.slice();
    return (n[51] = e[t]), (n[52] = e), (n[53] = t), n;
}
function Vc(o, e, t) {
    const n = o.slice();
    return (n[48] = e[t]), (n[54] = e), (n[55] = t), n;
}
function iv(o) {
    let e, t, n, i;
    return {
        c() {
            (e = f('span')),
                (t = f('input')),
                g(t, 'type', 'text'),
                g(t, 'class', 'pronunciation'),
                g(
                    e,
                    'title',
                    'This field is for the pronunciation of your word. It will auto-populate based on rules you set in the Phonology tab.',
                );
        },
        m(s, r) {
            C(s, e, r),
                d(e, t),
                j(t, o[11].General),
                n ||
                    ((i = [
                        R(t, 'input', o[23]),
                        ht(dt.call(null, e, { position: 'bottom' })),
                    ]),
                    (n = !0));
        },
        p(s, r) {
            r[0] & 2048 && t.value !== s[11].General && j(t, s[11].General);
        },
        d(s) {
            s && x(e), (n = !1), ot(i);
        },
    };
}
function sv(o) {
    let e,
        t = he(o[9]),
        n = [];
    for (let i = 0; i < t.length; i += 1) n[i] = Yc(Vc(o, t, i));
    return {
        c() {
            for (let i = 0; i < n.length; i += 1) n[i].c();
            e = yt();
        },
        m(i, s) {
            for (let r = 0; r < n.length; r += 1) n[r] && n[r].m(i, s);
            C(i, e, s);
        },
        p(i, s) {
            if (s[0] & 2560) {
                t = he(i[9]);
                let r;
                for (r = 0; r < t.length; r += 1) {
                    const l = Vc(i, t, r);
                    n[r] ?
                        n[r].p(l, s)
                    :   ((n[r] = Yc(l)), n[r].c(), n[r].m(e.parentNode, e));
                }
                for (; r < n.length; r += 1) n[r].d(1);
                n.length = t.length;
            }
        },
        d(i) {
            i && x(e), He(n, i);
        },
    };
}
function Yc(o) {
    let e,
        t,
        n,
        i = o[48] + '',
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b;
    function m() {
        o[22].call(c, o[48]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('p')),
                (s = Y(i)),
                (r = v()),
                (l = f('div')),
                (a = f('span')),
                (c = f('input')),
                (u = v()),
                g(n, 'class', 'lect'),
                g(t, 'class', 'column text-right'),
                g(c, 'type', 'text'),
                g(c, 'class', 'pronunciation text-left'),
                g(
                    a,
                    'title',
                    (h = `This field is for the pronunciation of your word in your ${o[48]} lect. It will auto-populate based on rules you set in the Phonology tab for this lect.`),
                ),
                g(l, 'class', 'column text-left'),
                g(e, 'class', 'row narrow');
        },
        m(k, y) {
            C(k, e, y),
                d(e, t),
                d(t, n),
                d(n, s),
                d(e, r),
                d(e, l),
                d(l, a),
                d(a, c),
                j(c, o[11][o[48]]),
                d(e, u),
                p ||
                    ((b = [
                        R(c, 'input', m),
                        ht(dt.call(null, a, { position: 'bottom' })),
                    ]),
                    (p = !0));
        },
        p(k, y) {
            (o = k),
                y[0] & 512 && i !== (i = o[48] + '') && Ee(s, i),
                y[0] & 2560 && c.value !== o[11][o[48]] && j(c, o[11][o[48]]),
                y[0] & 512 &&
                    h !==
                        (h = `This field is for the pronunciation of your word in your ${o[48]} lect. It will auto-populate based on rules you set in the Phonology tab for this lect.`) &&
                    g(a, 'title', h);
        },
        d(k) {
            k && x(e), (p = !1), ot(b);
        },
    };
}
function Kc(o) {
    let e, t, n, i, s;
    function r(u) {
        o[24](u, o[51]);
    }
    function l(u) {
        o[25](u, o[51]);
    }
    function a(u) {
        o[26](u, o[51]);
    }
    function c() {
        return o[27](o[53]);
    }
    let h = { index: o[53] };
    return (
        o[51].definition !== void 0 && (h.definition = o[51].definition),
        o[51].tags !== void 0 && (h.tags = o[51].tags),
        o[51].lects !== void 0 && (h.lects = o[51].lects),
        (e = new gf({ props: h })),
        Un.push(() => _o(e, 'definition', r)),
        Un.push(() => _o(e, 'tags', l)),
        Un.push(() => _o(e, 'lects', a)),
        e.$on('remove', c),
        e.$on('commit', o[28]),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(u, p) {
                jt(e, u, p), (s = !0);
            },
            p(u, p) {
                o = u;
                const b = {};
                !t &&
                    p[0] & 32 &&
                    ((t = !0),
                    (b.definition = o[51].definition),
                    ko(() => (t = !1))),
                    !n &&
                        p[0] & 32 &&
                        ((n = !0), (b.tags = o[51].tags), ko(() => (n = !1))),
                    !i &&
                        p[0] & 32 &&
                        ((i = !0), (b.lects = o[51].lects), ko(() => (i = !1))),
                    e.$set(b);
            },
            i(u) {
                s || (Ce(e.$$.fragment, u), (s = !0));
            },
            o(u) {
                Oe(e.$$.fragment, u), (s = !1);
            },
            d(u) {
                $t(e, u);
            },
        }
    );
}
function rv(o) {
    let e, t, n, i, s, r;
    return {
        c() {
            (e = f('div')),
                (t = f('button')),
                (t.textContent = 'Overwrite Entry'),
                (n = v()),
                (i = f('button')),
                (i.textContent = 'Append Definition'),
                g(t, 'id', 'overwrite'),
                g(t, 'class', 'hover-shadow'),
                g(
                    t,
                    'title',
                    'If you want to replace an existing entry with a new one, you can use this button to overwrite it.',
                ),
                g(i, 'id', 'append'),
                g(i, 'class', 'hover-shadow hover-highlight'),
                g(
                    i,
                    'title',
                    'If you want to add new sense(s) to an existing word, you can use this button to append your work to the existing entry.',
                ),
                g(e, 'class', 'row'),
                g(e, 'id', 'definition-exists');
        },
        m(l, a) {
            C(l, e, a),
                d(e, t),
                d(e, n),
                d(e, i),
                s ||
                    ((r = [
                        ht(dt.call(null, t, { position: 'bottom' })),
                        R(t, 'click', o[31]),
                        ht(dt.call(null, i, { position: 'bottom' })),
                        R(i, 'click', o[32]),
                    ]),
                    (s = !0));
        },
        p: Le,
        d(l) {
            l && x(e), (s = !1), ot(r);
        },
    };
}
function lv(o) {
    let e, t, n;
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Add Word'),
                g(e, 'class', 'hover-highlight hover-shadow'),
                g(e, 'id', 'add-word-button');
        },
        m(i, s) {
            C(i, e, s), t || ((n = R(e, 'click', o[30])), (t = !0));
        },
        p: Le,
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function Xc(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search by word…'),
                g(e, 'for', 'search-wrd'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '0.5em'),
                Z(e, 'left', '1em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Zc(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search by tags…'),
                g(e, 'for', 'search-tag'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '0.5em'),
                Z(e, 'left', '1em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Jc(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search definitions…'),
                g(e, 'for', 'search-def'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '0.33em'),
                Z(e, 'left', '1em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Qc(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a = he(o[6].Lects),
        c = [];
    for (let h = 0; h < a.length; h += 1) c[h] = eh(Gc(o, a, h));
    return {
        c() {
            (e = f('div')),
                (t = f('label')),
                (n = Y(`Filter by lect: 
                            `)),
                (i = f('select')),
                (s = f('option')),
                (s.textContent = 'All');
            for (let h = 0; h < c.length; h += 1) c[h].c();
            (s.__value = ''),
                j(s, s.__value),
                o[3] === void 0 && Pt(() => o[36].call(i)),
                g(e, 'class', 'column');
        },
        m(h, u) {
            C(h, e, u), d(e, t), d(t, n), d(t, i), d(i, s);
            for (let p = 0; p < c.length; p += 1) c[p] && c[p].m(i, null);
            Bt(i, o[3], !0), r || ((l = R(i, 'change', o[36])), (r = !0));
        },
        p(h, u) {
            if (u[0] & 64) {
                a = he(h[6].Lects);
                let p;
                for (p = 0; p < a.length; p += 1) {
                    const b = Gc(h, a, p);
                    c[p] ?
                        c[p].p(b, u)
                    :   ((c[p] = eh(b)), c[p].c(), c[p].m(i, null));
                }
                for (; p < c.length; p += 1) c[p].d(1);
                c.length = a.length;
            }
            u[0] & 72 && Bt(i, h[3]);
        },
        d(h) {
            h && x(e), He(c, h), (r = !1), l();
        },
    };
}
function eh(o) {
    let e,
        t = o[48] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[48]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 64 && t !== (t = s[48] + '') && Ee(n, t),
                r[0] & 64 &&
                    i !== (i = s[48]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function th(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent = 'Add new words on the left'),
                g(e, 'class', 'info'),
                g(e, 'id', 'lex-body');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function nh(o) {
    let e, t;
    function n() {
        return o[37](o[45]);
    }
    return (
        (e = new ua({
            props: {
                word: o[45],
                source: o[6].Lexicon[o[45]],
                showEtymology: !0,
            },
        })),
        e.$on('edit', n),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(i, s) {
                jt(e, i, s), (t = !0);
            },
            p(i, s) {
                o = i;
                const r = {};
                s[0] & 128 && (r.word = o[45]),
                    s[0] & 192 && (r.source = o[6].Lexicon[o[45]]),
                    e.$set(r);
            },
            i(i) {
                t || (Ce(e.$$.fragment, i), (t = !0));
            },
            o(i) {
                Oe(e.$$.fragment, i), (t = !1);
            },
            d(i) {
                $t(e, i);
            },
        }
    );
}
function av(o) {
    let e = Object.keys(o[6].Lexicon).length + '',
        t,
        n,
        i = Object.keys(o[6].Lexicon).length === 1 ? 'Entry' : 'Entries',
        s;
    return {
        c() {
            (t = Y(e)), (n = v()), (s = Y(i));
        },
        m(r, l) {
            C(r, t, l), C(r, n, l), C(r, s, l);
        },
        p(r, l) {
            l[0] & 64 &&
                e !== (e = Object.keys(r[6].Lexicon).length + '') &&
                Ee(t, e),
                l[0] & 64 &&
                    i !==
                        (i =
                            Object.keys(r[6].Lexicon).length === 1 ?
                                'Entry'
                            :   'Entries') &&
                    Ee(s, i);
        },
        d(r) {
            r && (x(t), x(n), x(s));
        },
    };
}
function cv(o) {
    let e = (o[4][0] ? o[4].length : '0') + '',
        t,
        n,
        i = o[4].length === 1 && o[4][0] ? 'Match' : 'Matches',
        s;
    return {
        c() {
            (t = Y(e)), (n = v()), (s = Y(i));
        },
        m(r, l) {
            C(r, t, l), C(r, n, l), C(r, s, l);
        },
        p(r, l) {
            l[0] & 16 &&
                e !== (e = (r[4][0] ? r[4].length : '0') + '') &&
                Ee(t, e),
                l[0] & 16 &&
                    i !==
                        (i =
                            r[4].length === 1 && r[4][0] ?
                                'Match'
                            :   'Matches') &&
                    Ee(s, i);
        },
        d(r) {
            r && (x(t), x(n), x(s));
        },
    };
}
function hv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I,
        z,
        se,
        ze,
        Qe,
        ne,
        me,
        Te,
        we,
        pe;
    function Se(ce, je) {
        return ce[6].UseLects ? sv : iv;
    }
    let ye = Se(o),
        Ze = ye(o),
        U = he(o[5]),
        Q = [];
    for (let ce = 0; ce < U.length; ce += 1) Q[ce] = Kc(qc(o, U, ce));
    const ge = (ce) =>
        Oe(Q[ce], 1, 1, () => {
            Q[ce] = null;
        });
    function _e(ce, je) {
        return ce[10] in ce[6].Lexicon ? rv : lv;
    }
    let Ie = _e(o),
        Pe = Ie(o),
        ve = !o[0] && Xc(),
        Me = !o[2] && Zc(),
        Je = !o[1] && Jc(),
        Ge = o[6].UseLects && Qc(o),
        et = he(o[7]),
        Ue = [];
    for (let ce = 0; ce < et.length; ce += 1) Ue[ce] = nh(Wc(o, et, ce));
    const It = (ce) =>
        Oe(Ue[ce], 1, 1, () => {
            Ue[ce] = null;
        });
    let ut = null;
    et.length || (ut = th());
    function Lt(ce, je) {
        return ce[4][0] ? cv : av;
    }
    let vt = Lt(o),
        qe = vt(o);
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('label')),
                (i.textContent = 'Case Sensitivity'),
                (s = v()),
                (r = f('input')),
                (l = v()),
                (a = f('div')),
                (c = f('label')),
                (c.textContent = 'Ignore Diacritics'),
                (h = v()),
                (u = f('input')),
                (p = v()),
                (b = f('input')),
                (m = v()),
                (k = f('div')),
                (y = f('div')),
                (w = f('button')),
                (E = v()),
                (_ = f('div')),
                (B = f('label')),
                (B.textContent = 'New Word'),
                (O = v()),
                (P = f('input')),
                (H = v()),
                Ze.c(),
                (T = v());
            for (let ce = 0; ce < Q.length; ce += 1) Q[ce].c();
            (S = v()),
                (A = f('button')),
                (A.textContent = 'Add Sense'),
                ($ = v()),
                Pe.c(),
                (K = v()),
                (W = f('div')),
                (G = v()),
                (L = f('div')),
                (D = f('div')),
                (X = f('div')),
                ve && ve.c(),
                (te = v()),
                (M = f('input')),
                (N = v()),
                (F = f('div')),
                Me && Me.c(),
                (V = v()),
                (ue = f('input')),
                (fe = v()),
                (J = f('div')),
                (ae = f('div')),
                Je && Je.c(),
                (I = v()),
                (z = f('input')),
                (se = v()),
                Ge && Ge.c(),
                (ze = v()),
                (Qe = f('div'));
            for (let ce = 0; ce < Ue.length; ce += 1) Ue[ce].c();
            ut && ut.c(),
                (ne = v()),
                (me = f('p')),
                qe.c(),
                g(i, 'for', 'case-sensitive'),
                Z(i, 'margin', 'auto'),
                g(
                    i,
                    'title',
                    'This setting determines whether or not alphabetization is case sensitive.',
                ),
                g(r, 'type', 'checkbox'),
                Z(r, 'width', '15px'),
                Z(r, 'margin', 'auto'),
                g(r, 'id', 'case-sensitive'),
                g(n, 'class', 'narrow-col'),
                g(c, 'for', 'ignore-diacritic'),
                Z(c, 'margin', 'auto'),
                Z(c, 'text-align', 'right'),
                g(
                    c,
                    'title',
                    'This setting determines whether or not diacritics are taken into account during alphabetization.',
                ),
                g(u, 'type', 'checkbox'),
                Z(u, 'width', '15px'),
                Z(u, 'margin', 'auto'),
                g(u, 'id', 'ignore-diacritic'),
                g(a, 'class', 'narrow-col'),
                g(b, 'id', 'alph-input'),
                g(b, 'type', 'text'),
                g(t, 'class', 'container row text-center header'),
                g(w, 'class', 'collapser'),
                g(B, 'for', 'wrd-input'),
                g(
                    B,
                    'title',
                    'Write your new word here in its romanized form.',
                ),
                g(P, 'id', 'wrd-input'),
                g(P, 'type', 'text'),
                g(A, 'class', 'hover-highlight hover-shadow'),
                g(A, 'id', 'add-sense-button'),
                g(
                    A,
                    'title',
                    'If this word has unrelated definitions, adding multiple senses is a good way to separate them visually and give them separate sets of tags.',
                ),
                Z(W, 'width', '100vw'),
                g(_, 'class', 'text-center scrolled'),
                Z(_, 'height', '100%'),
                Z(_, 'overflow-x', 'hidden'),
                St(_, 'collapsed', o[8]),
                g(y, 'class', 'container collapsible-column'),
                Z(y, 'height', '100%'),
                g(M, 'id', 'search-wrd'),
                g(M, 'type', 'text'),
                g(M, 'class', 'search'),
                g(X, 'class', 'column search-container'),
                g(ue, 'id', 'search-tag'),
                g(ue, 'type', 'text'),
                g(ue, 'class', 'search'),
                g(F, 'class', 'column search-container'),
                g(D, 'class', 'row'),
                g(z, 'id', 'search-def'),
                g(z, 'type', 'text'),
                g(z, 'class', 'search'),
                g(ae, 'class', 'search-container column'),
                g(J, 'class', 'row'),
                g(Qe, 'class', 'scrolled'),
                Z(Qe, 'height', '88%'),
                g(me, 'id', 'entry-counter'),
                g(L, 'class', 'container column text-center'),
                Z(L, 'height', '100%'),
                g(k, 'class', 'row'),
                Z(k, 'height', '84vh'),
                g(e, 'class', 'tab-pane');
        },
        m(ce, je) {
            C(ce, e, je),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                (r.checked = o[6].CaseSensitive),
                d(t, l),
                d(t, a),
                d(a, c),
                d(a, h),
                d(a, u),
                (u.checked = o[6].IgnoreDiacritics),
                d(t, p),
                d(t, b),
                j(b, o[6].Alphabet),
                d(e, m),
                d(e, k),
                d(k, y),
                d(y, w),
                d(y, E),
                d(y, _),
                d(_, B),
                d(_, O),
                d(_, P),
                j(P, o[10]),
                d(_, H),
                Ze.m(_, null),
                d(_, T);
            for (let Ne = 0; Ne < Q.length; Ne += 1) Q[Ne] && Q[Ne].m(_, null);
            d(_, S),
                d(_, A),
                d(_, $),
                Pe.m(_, null),
                d(_, K),
                d(_, W),
                d(k, G),
                d(k, L),
                d(L, D),
                d(D, X),
                ve && ve.m(X, null),
                d(X, te),
                d(X, M),
                j(M, o[0]),
                d(D, N),
                d(D, F),
                Me && Me.m(F, null),
                d(F, V),
                d(F, ue),
                j(ue, o[2]),
                d(L, fe),
                d(L, J),
                d(J, ae),
                Je && Je.m(ae, null),
                d(ae, I),
                d(ae, z),
                j(z, o[1]),
                d(J, se),
                Ge && Ge.m(J, null),
                d(L, ze),
                d(L, Qe);
            for (let Ne = 0; Ne < Ue.length; Ne += 1)
                Ue[Ne] && Ue[Ne].m(Qe, null);
            ut && ut.m(Qe, null),
                d(L, ne),
                d(L, me),
                qe.m(me, null),
                (Te = !0),
                we ||
                    ((pe = [
                        ht(dt.call(null, i, { position: 'bottom' })),
                        R(r, 'change', o[16]),
                        ht(dt.call(null, c, { position: 'bottom' })),
                        R(u, 'change', o[17]),
                        R(b, 'input', o[18]),
                        R(w, 'click', o[19]),
                        ht(dt.call(null, B, { position: 'bottom' })),
                        R(P, 'input', o[20]),
                        R(P, 'input', o[21]),
                        ht(dt.call(null, A, { position: 'right' })),
                        R(A, 'click', o[29]),
                        R(M, 'input', o[33]),
                        R(M, 'input', o[14]),
                        R(ue, 'input', o[34]),
                        R(ue, 'input', o[14]),
                        R(z, 'input', o[35]),
                        R(z, 'input', o[14]),
                    ]),
                    (we = !0));
        },
        p(ce, je) {
            if (
                (je[0] & 64 && (r.checked = ce[6].CaseSensitive),
                je[0] & 64 && (u.checked = ce[6].IgnoreDiacritics),
                je[0] & 64 &&
                    b.value !== ce[6].Alphabet &&
                    j(b, ce[6].Alphabet),
                je[0] & 1024 && P.value !== ce[10] && j(P, ce[10]),
                ye === (ye = Se(ce)) && Ze ?
                    Ze.p(ce, je)
                :   (Ze.d(1), (Ze = ye(ce)), Ze && (Ze.c(), Ze.m(_, T))),
                je[0] & 8224)
            ) {
                U = he(ce[5]);
                let Ne;
                for (Ne = 0; Ne < U.length; Ne += 1) {
                    const at = qc(ce, U, Ne);
                    Q[Ne] ?
                        (Q[Ne].p(at, je), Ce(Q[Ne], 1))
                    :   ((Q[Ne] = Kc(at)),
                        Q[Ne].c(),
                        Ce(Q[Ne], 1),
                        Q[Ne].m(_, S));
                }
                for (Wt(), Ne = U.length; Ne < Q.length; Ne += 1) ge(Ne);
                Gt();
            }
            if (
                (Ie === (Ie = _e(ce)) && Pe ?
                    Pe.p(ce, je)
                :   (Pe.d(1), (Pe = Ie(ce)), Pe && (Pe.c(), Pe.m(_, K))),
                (!Te || je[0] & 256) && St(_, 'collapsed', ce[8]),
                ce[0] ?
                    ve && (ve.d(1), (ve = null))
                :   ve || ((ve = Xc()), ve.c(), ve.m(X, te)),
                je[0] & 1 && M.value !== ce[0] && j(M, ce[0]),
                ce[2] ?
                    Me && (Me.d(1), (Me = null))
                :   Me || ((Me = Zc()), Me.c(), Me.m(F, V)),
                je[0] & 4 && ue.value !== ce[2] && j(ue, ce[2]),
                ce[1] ?
                    Je && (Je.d(1), (Je = null))
                :   Je || ((Je = Jc()), Je.c(), Je.m(ae, I)),
                je[0] & 2 && z.value !== ce[1] && j(z, ce[1]),
                ce[6].UseLects ?
                    Ge ? Ge.p(ce, je)
                    :   ((Ge = Qc(ce)), Ge.c(), Ge.m(J, null))
                :   Ge && (Ge.d(1), (Ge = null)),
                je[0] & 4288)
            ) {
                et = he(ce[7]);
                let Ne;
                for (Ne = 0; Ne < et.length; Ne += 1) {
                    const at = Wc(ce, et, Ne);
                    Ue[Ne] ?
                        (Ue[Ne].p(at, je), Ce(Ue[Ne], 1))
                    :   ((Ue[Ne] = nh(at)),
                        Ue[Ne].c(),
                        Ce(Ue[Ne], 1),
                        Ue[Ne].m(Qe, null));
                }
                for (Wt(), Ne = et.length; Ne < Ue.length; Ne += 1) It(Ne);
                Gt(),
                    !et.length && ut ? ut.p(ce, je)
                    : et.length ? ut && (ut.d(1), (ut = null))
                    : ((ut = th()), ut.c(), ut.m(Qe, null));
            }
            vt === (vt = Lt(ce)) && qe ?
                qe.p(ce, je)
            :   (qe.d(1), (qe = vt(ce)), qe && (qe.c(), qe.m(me, null)));
        },
        i(ce) {
            if (!Te) {
                for (let je = 0; je < U.length; je += 1) Ce(Q[je]);
                for (let je = 0; je < et.length; je += 1) Ce(Ue[je]);
                Te = !0;
            }
        },
        o(ce) {
            Q = Q.filter(Boolean);
            for (let je = 0; je < Q.length; je += 1) Oe(Q[je]);
            Ue = Ue.filter(Boolean);
            for (let je = 0; je < Ue.length; je += 1) Oe(Ue[je]);
            Te = !1;
        },
        d(ce) {
            ce && x(e),
                Ze.d(),
                He(Q, ce),
                Pe.d(),
                ve && ve.d(),
                Me && Me.d(),
                Je && Je.d(),
                Ge && Ge.d(),
                He(Ue, ce),
                ut && ut.d(),
                qe.d(),
                (we = !1),
                ot(pe);
        },
    };
}
function dv(o, e, t) {
    let n, i, s, r, l;
    $e(o, q, (ne) => t(6, (n = ne))),
        $e(o, si, (ne) => t(10, (i = ne))),
        $e(o, yn, (ne) => t(11, (s = ne))),
        $e(o, er, (ne) => t(38, (r = ne))),
        $e(o, mr, (ne) => t(39, (l = ne)));
    const { ipcRenderer: a } = require('electron'),
        c = require('vex-js');
    a.on('update-lexicon-for-gods-sake-please', () => {
        ee(q, (n.Lexicon = { ...n.Lexicon }), n);
    });
    let h = [''],
        u = '',
        p = '',
        b = '',
        m = '',
        k = [],
        y,
        w,
        E = !1,
        _ = [{ definition: '', tags: '', lects: [...n.Lects] }],
        B;
    function O(ne) {
        const me = document.getElementById(ne);
        me &&
            (l && ee(mr, (l = 0), l),
            t(1, (p = '')),
            t(2, (b = '')),
            t(0, (u = '')),
            t(3, (m = '')),
            me.scrollIntoView({ behavior: 'smooth', block: 'center' }));
    }
    a.on('lexicon link', (ne, me) => {
        console.log('link:', me), O(me);
    });
    function P(ne) {
        let me = !0;
        (i || h[0]) &&
            (me = confirm(
                'There is text in the word entry fields. Are you sure you want to overwrite it?',
            )),
            me &&
                (ee(si, (i = ne), i),
                ee(yn, (s = {}), s),
                Object.keys(n.Lexicon[ne].pronunciations).forEach((Te) => {
                    ee(yn, (s[Te] = n.Lexicon[ne].pronunciations[Te].ipa), s);
                }),
                t(
                    5,
                    (_ = [...n.Lexicon[ne].Senses].map((Te) => ({
                        definition: Te.definition,
                        tags: Te.tags.join(' '),
                        lects: Te.lects,
                    }))),
                ),
                ee(er, (r = !0), r),
                window.setTimeout(() => {
                    let { [ne]: Te, ...we } = n.Lexicon;
                    ee(q, (n.Lexicon = we), n), ee(er, (r = !1), r);
                }, 100));
    }
    function H(ne, me) {
        const Te = (pe) => _[''] !== pe && !!pe.definition,
            we = (pe) => ({
                definition: pe.definition,
                tags: pe.tags.split(/\s+/g),
                lects: pe.lects,
            });
        me ?
            n.Lexicon[ne].Senses.push(..._.filter(Te).map(we))
        :   ee(
                q,
                (n.Lexicon[ne] = {
                    pronunciations: (() => {
                        const pe = {};
                        return (
                            Object.keys(s)
                                .filter((Se) =>
                                    _.map((ye) => ye.lects)
                                        .flat()
                                        .includes(Se),
                                )
                                .forEach((Se) => {
                                    pe[Se] = {
                                        ipa: s[Se].trim(),
                                        irregular: s[Se].trim() !== en(ne, Se),
                                    };
                                }),
                            pe
                        );
                    })(),
                    Senses: _.filter(Te).map(we),
                    Timestamp: Date.now(),
                }),
                n,
            ),
            ee(q, (n.Lexicon = { ...n.Lexicon }), n),
            ee(si, (i = ''), i),
            ee(
                yn,
                (s = (() => {
                    const pe = {};
                    return (
                        n.Lects.forEach((Se) => {
                            pe[Se] = '';
                        }),
                        pe
                    );
                })()),
                s,
            ),
            t(5, (_ = [{ definition: '', tags: '', lects: [...n.Lects] }]));
    }
    function T(ne) {
        let me = i.trim();
        me &&
            _[0].definition &&
            _.map((Te) => Te.lects).flat().length &&
            (Ym(me) ?
                (H(me, ne), window.setTimeout(() => O(me), 50))
            :   c.dialog.confirm({
                    message:
                        'The word contains characters not present in the alphabet. Are you sure you want to add it?',
                    callback: (Te) => {
                        Te && (H(me, ne), window.setTimeout(() => O(me), 50));
                    },
                }));
    }
    function S() {
        let ne = n.CaseSensitive ? u.trim() : u.toLowerCase().trim(),
            me = p.toLowerCase().trim(),
            Te = b.toLowerCase().trim();
        if ((t(4, (k = [])), ne || me || Te || m)) {
            for (let we in n.Lexicon) {
                let pe = n.Lexicon[we],
                    Se = !0;
                if (m && !pe.Senses.some((ye) => ye.lects.includes(m))) {
                    Se = !1;
                    continue;
                }
                if (ne) {
                    let ye = n.CaseSensitive ? we : we.toLowerCase();
                    if (ne[0] === '!') {
                        if (ye !== ne.split('!')[1]) {
                            Se = !1;
                            continue;
                        }
                    } else if (
                        !('^' + ye.replaceAll(/\s+/g, '^') + '^').includes(
                            ne.replaceAll(/\s+/g, '^'),
                        )
                    ) {
                        Se = !1;
                        continue;
                    }
                }
                if (me) {
                    if (me[0] === '!') {
                        if (
                            !pe.Senses.some(
                                (ye) => ye.definition === me.split('!')[1],
                            )
                        ) {
                            Se = !1;
                            continue;
                        }
                    } else if (
                        !pe.Senses.some((ye) =>
                            ['^', ye.definition, '^']
                                .join()
                                .replaceAll(/\s+/g, '^')
                                .toLowerCase()
                                .includes(me.replaceAll(/\s+/g, '^')),
                        )
                    ) {
                        Se = !1;
                        continue;
                    }
                }
                if (Te) {
                    let ye = Te.split(/\s+/);
                    for (let Ze of ye)
                        if (Ze[0] === '!') {
                            if (
                                !pe.Senses.some((U) =>
                                    U.tags.some(
                                        (Q) =>
                                            Q.toLowerCase() ===
                                            Ze.split('!')[1],
                                    ),
                                )
                            ) {
                                Se = !1;
                                continue;
                            }
                        } else if (
                            !pe.Senses.some((U) =>
                                U.tags.some((Q) =>
                                    `^${Q.toLowerCase()}^`.includes(Ze),
                                ),
                            )
                        ) {
                            Se = !1;
                            continue;
                        }
                }
                Se && t(4, (k = [...k, we]));
            }
            k.length || t(4, (k = [null]));
        }
    }
    function A() {
        (n.CaseSensitive = this.checked), q.set(n);
    }
    function $() {
        (n.IgnoreDiacritics = this.checked), q.set(n);
    }
    function K() {
        (n.Alphabet = this.value), q.set(n);
    }
    const W = () => t(8, (E = !E));
    function G() {
        (i = this.value), si.set(i);
    }
    const L = () => {
        B.forEach((ne) => {
            ee(yn, (s[ne] = en(i, ne)), s);
        });
    };
    function D(ne) {
        (s[ne] = this.value), yn.set(s);
    }
    function X() {
        (s.General = this.value), yn.set(s);
    }
    function te(ne, me) {
        o.$$.not_equal(me.definition, ne) && ((me.definition = ne), t(5, _));
    }
    function M(ne, me) {
        o.$$.not_equal(me.tags, ne) && ((me.tags = ne), t(5, _));
    }
    function N(ne, me) {
        o.$$.not_equal(me.lects, ne) && ((me.lects = ne), t(5, _));
    }
    const F = (ne) => {
            t(5, (_ = _.filter((me, Te) => Te !== ne)));
        },
        V = () => {
            T(!1);
        },
        ue = () => {
            t(
                5,
                (_ = [..._, { definition: '', tags: '', lects: [...n.Lects] }]),
            );
        },
        fe = () => T(!1),
        J = () => T(!1),
        ae = () => T(!0);
    function I() {
        (u = this.value), t(0, u);
    }
    function z() {
        (b = this.value), t(2, b);
    }
    function se() {
        (p = this.value), t(1, p);
    }
    function ze() {
        (m = zn(this)), t(3, m);
    }
    const Qe = (ne) => P(ne);
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 15,
                o.$$.dirty[0] & 80 &&
                    t(
                        15,
                        (y = k.reduce(
                            (ne, me) => (
                                me in n.Lexicon && (ne[me] = n.Lexicon[me]), ne
                            ),
                            {},
                        )),
                    ),
                o.$$.dirty[0] & 32848 &&
                    (n.Lexicon,
                    n.Pronunciations,
                    n.ShowEtymology,
                    n.Etymologies,
                    n.ShowInflection,
                    n.Inflections,
                    n.Alphabet,
                    n.Orthographies,
                    t(7, (w = Ms(k.length ? y : n.Lexicon)))),
                o.$$.dirty[0] & 96 &&
                    (n.Lects,
                    n.UseLects,
                    t(
                        9,
                        (B = Array.from(
                            new Set(
                                _.map((ne) => [...ne.lects])
                                    .flat()
                                    .filter((ne) => n.Lects.includes(ne)),
                            ),
                        )),
                    ));
        }),
        [
            u,
            p,
            b,
            m,
            k,
            _,
            n,
            w,
            E,
            B,
            i,
            s,
            P,
            T,
            S,
            y,
            A,
            $,
            K,
            W,
            G,
            L,
            D,
            X,
            te,
            M,
            N,
            F,
            V,
            ue,
            fe,
            J,
            ae,
            I,
            z,
            se,
            ze,
            Qe,
        ]
    );
}
class uv extends Rt {
    constructor(e) {
        super(), Nt(this, e, dv, hv, Ct, {}, null, [-1, -1]);
    }
}
function oh(o, e, t) {
    const n = o.slice();
    return (n[9] = e[t]), (n[11] = t), n;
}
function ih(o, e, t) {
    const n = o.slice();
    return (n[12] = e[t]), (n[11] = t), n;
}
function sh(o) {
    let e,
        t,
        n,
        i,
        s,
        r = o[12].name + '',
        l,
        a,
        c,
        h,
        u,
        p = o[12].source + '',
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P;
    function H() {
        return o[6](o[12]);
    }
    return {
        c() {
            (e = cn('g')),
                (t = cn('rect')),
                (s = cn('text')),
                (l = Y(r)),
                (u = cn('text')),
                (b = Y(p)),
                (w = cn('path')),
                g(t, 'class', 'lex'),
                g(
                    t,
                    'x',
                    (n = (o[0] / (o[2].parents.length + 1)) * (o[11] + 1) - 60),
                ),
                g(
                    t,
                    'y',
                    (i = o[1] / 9 - o[3][o[11]] - 15 + Math.max(...o[3])),
                ),
                g(t, 'width', '120'),
                g(s, 'class', 'lex-entry'),
                g(
                    s,
                    'x',
                    (a = (o[0] / (o[2].parents.length + 1)) * (o[11] + 1)),
                ),
                g(s, 'y', (c = o[1] / 9 - o[3][o[11]] + Math.max(...o[3]))),
                g(s, 'text-anchor', 'middle'),
                g(s, 'dominant-baseline', 'middle'),
                g(u, 'class', 'tag-item'),
                g(
                    u,
                    'x',
                    (m = (o[0] / (o[2].parents.length + 1)) * (o[11] + 1)),
                ),
                g(
                    u,
                    'y',
                    (k = o[1] / 9 - o[3][o[11]] + 15 + Math.max(...o[3])),
                ),
                g(u, 'text-anchor', 'middle'),
                g(u, 'dominant-baseline', 'middle'),
                g(
                    w,
                    'd',
                    (E = `M ${(o[0] / (o[2].parents.length + 1)) * (o[11] + 1)}, ${o[1] / 9 - o[3][o[11]] + 20 + Math.max(...o[3])} C ${(o[0] / (o[2].parents.length + 1)) * (o[11] + 1)}, ${o[1] / 9 - o[3][o[11]] + 50 + Math.max(...o[3])}  ${o[0] / 2}, ${o[1] / 2 - 40}  ${o[0] / 2}, ${o[1] / 2 - 10}`),
                ),
                g(w, 'fill', 'none');
        },
        m(T, S) {
            C(T, e, S),
                d(e, t),
                d(e, s),
                d(s, l),
                d(e, u),
                d(u, b),
                d(e, w),
                (B = !0),
                O || ((P = R(e, 'mousedown', H)), (O = !0));
        },
        p(T, S) {
            (o = T),
                (!B ||
                    (S & 5 &&
                        n !==
                            (n =
                                (o[0] / (o[2].parents.length + 1)) *
                                    (o[11] + 1) -
                                60))) &&
                    g(t, 'x', n),
                (!B ||
                    (S & 10 &&
                        i !==
                            (i =
                                o[1] / 9 -
                                o[3][o[11]] -
                                15 +
                                Math.max(...o[3])))) &&
                    g(t, 'y', i),
                (!B || S & 4) && r !== (r = o[12].name + '') && Ee(l, r),
                (!B ||
                    (S & 5 &&
                        a !==
                            (a =
                                (o[0] / (o[2].parents.length + 1)) *
                                (o[11] + 1)))) &&
                    g(s, 'x', a),
                (!B ||
                    (S & 10 &&
                        c !==
                            (c =
                                o[1] / 9 - o[3][o[11]] + Math.max(...o[3])))) &&
                    g(s, 'y', c),
                (!B || S & 4) && p !== (p = o[12].source + '') && Ee(b, p),
                (!B ||
                    (S & 5 &&
                        m !==
                            (m =
                                (o[0] / (o[2].parents.length + 1)) *
                                (o[11] + 1)))) &&
                    g(u, 'x', m),
                (!B ||
                    (S & 10 &&
                        k !==
                            (k =
                                o[1] / 9 -
                                o[3][o[11]] +
                                15 +
                                Math.max(...o[3])))) &&
                    g(u, 'y', k),
                (!B ||
                    (S & 15 &&
                        E !==
                            (E = `M ${(o[0] / (o[2].parents.length + 1)) * (o[11] + 1)}, ${o[1] / 9 - o[3][o[11]] + 20 + Math.max(...o[3])} C ${(o[0] / (o[2].parents.length + 1)) * (o[11] + 1)}, ${o[1] / 9 - o[3][o[11]] + 50 + Math.max(...o[3])}  ${o[0] / 2}, ${o[1] / 2 - 40}  ${o[0] / 2}, ${o[1] / 2 - 10}`))) &&
                    g(w, 'd', E);
        },
        i(T) {
            B ||
                (T &&
                    Pt(() => {
                        B &&
                            (h ||
                                (h = vn(
                                    s,
                                    so,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            h.run(1));
                    }),
                T &&
                    Pt(() => {
                        B &&
                            (y ||
                                (y = vn(
                                    u,
                                    so,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            y.run(1));
                    }),
                T &&
                    Pt(() => {
                        B &&
                            (_ || (_ = vn(w, br, { duration: 999 }, !0)),
                            _.run(1));
                    }),
                (B = !0));
        },
        o(T) {
            T &&
                (h || (h = vn(s, so, { amount: 10, duration: 999 }, !1)),
                h.run(0)),
                T &&
                    (y || (y = vn(u, so, { amount: 10, duration: 999 }, !1)),
                    y.run(0)),
                T && (_ || (_ = vn(w, br, { duration: 999 }, !1)), _.run(0)),
                (B = !1);
        },
        d(T) {
            T && x(e),
                T && h && h.end(),
                T && y && y.end(),
                T && _ && _.end(),
                (O = !1),
                P();
        },
    };
}
function rh(o) {
    let e,
        t,
        n,
        i,
        s,
        r = o[9].name + '',
        l,
        a,
        c,
        h,
        u,
        p = o[9].source + '',
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P;
    function H() {
        return o[7](o[9]);
    }
    return {
        c() {
            (e = cn('g')),
                (t = cn('rect')),
                (s = cn('text')),
                (l = Y(r)),
                (u = cn('text')),
                (b = Y(p)),
                (w = cn('path')),
                g(t, 'class', 'lex'),
                g(
                    t,
                    'x',
                    (n =
                        (o[0] / (o[2].children.length + 1)) * (o[11] + 1) - 60),
                ),
                g(
                    t,
                    'y',
                    (i =
                        o[1] + o[4][o[11]] - o[1] / 9 - 15 - Math.max(...o[4])),
                ),
                g(t, 'width', '120'),
                g(s, 'class', 'lex-entry'),
                g(
                    s,
                    'x',
                    (a = (o[0] / (o[2].children.length + 1)) * (o[11] + 1)),
                ),
                g(
                    s,
                    'y',
                    (c = o[1] + o[4][o[11]] - o[1] / 9 - Math.max(...o[4])),
                ),
                g(s, 'text-anchor', 'middle'),
                g(s, 'dominant-baseline', 'middle'),
                g(u, 'class', 'tag-item'),
                g(
                    u,
                    'x',
                    (m = (o[0] / (o[2].children.length + 1)) * (o[11] + 1)),
                ),
                g(
                    u,
                    'y',
                    (k =
                        o[1] + o[4][o[11]] - o[1] / 9 + 15 - Math.max(...o[4])),
                ),
                g(u, 'text-anchor', 'middle'),
                g(u, 'dominant-baseline', 'middle'),
                g(
                    w,
                    'd',
                    (E = `M ${o[0] / 2}, ${o[1] / 2 + 10} C ${o[0] / 2}, ${o[1] / 2 + 40}  ${(o[0] / (o[2].children.length + 1)) * (o[11] + 1)}, ${o[1] + o[4][o[11]] - o[1] / 9 - 40 - Math.max(...o[4])}  ${(o[0] / (o[2].children.length + 1)) * (o[11] + 1)}, ${o[1] + o[4][o[11]] - o[1] / 9 - 10 - Math.max(...o[4])}`),
                ),
                g(w, 'fill', 'none');
        },
        m(T, S) {
            C(T, e, S),
                d(e, t),
                d(e, s),
                d(s, l),
                d(e, u),
                d(u, b),
                d(e, w),
                (B = !0),
                O || ((P = R(e, 'mousedown', H)), (O = !0));
        },
        p(T, S) {
            (o = T),
                (!B ||
                    (S & 5 &&
                        n !==
                            (n =
                                (o[0] / (o[2].children.length + 1)) *
                                    (o[11] + 1) -
                                60))) &&
                    g(t, 'x', n),
                (!B ||
                    (S & 18 &&
                        i !==
                            (i =
                                o[1] +
                                o[4][o[11]] -
                                o[1] / 9 -
                                15 -
                                Math.max(...o[4])))) &&
                    g(t, 'y', i),
                (!B || S & 4) && r !== (r = o[9].name + '') && Ee(l, r),
                (!B ||
                    (S & 5 &&
                        a !==
                            (a =
                                (o[0] / (o[2].children.length + 1)) *
                                (o[11] + 1)))) &&
                    g(s, 'x', a),
                (!B ||
                    (S & 18 &&
                        c !==
                            (c =
                                o[1] +
                                o[4][o[11]] -
                                o[1] / 9 -
                                Math.max(...o[4])))) &&
                    g(s, 'y', c),
                (!B || S & 4) && p !== (p = o[9].source + '') && Ee(b, p),
                (!B ||
                    (S & 5 &&
                        m !==
                            (m =
                                (o[0] / (o[2].children.length + 1)) *
                                (o[11] + 1)))) &&
                    g(u, 'x', m),
                (!B ||
                    (S & 18 &&
                        k !==
                            (k =
                                o[1] +
                                o[4][o[11]] -
                                o[1] / 9 +
                                15 -
                                Math.max(...o[4])))) &&
                    g(u, 'y', k),
                (!B ||
                    (S & 23 &&
                        E !==
                            (E = `M ${o[0] / 2}, ${o[1] / 2 + 10} C ${o[0] / 2}, ${o[1] / 2 + 40}  ${(o[0] / (o[2].children.length + 1)) * (o[11] + 1)}, ${o[1] + o[4][o[11]] - o[1] / 9 - 40 - Math.max(...o[4])}  ${(o[0] / (o[2].children.length + 1)) * (o[11] + 1)}, ${o[1] + o[4][o[11]] - o[1] / 9 - 10 - Math.max(...o[4])}`))) &&
                    g(w, 'd', E);
        },
        i(T) {
            B ||
                (T &&
                    Pt(() => {
                        B &&
                            (h ||
                                (h = vn(
                                    s,
                                    so,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            h.run(1));
                    }),
                T &&
                    Pt(() => {
                        B &&
                            (y ||
                                (y = vn(
                                    u,
                                    so,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            y.run(1));
                    }),
                T &&
                    Pt(() => {
                        B &&
                            (_ || (_ = vn(w, br, { duration: 999 }, !0)),
                            _.run(1));
                    }),
                (B = !0));
        },
        o(T) {
            T &&
                (h || (h = vn(s, so, { amount: 10, duration: 999 }, !1)),
                h.run(0)),
                T &&
                    (y || (y = vn(u, so, { amount: 10, duration: 999 }, !1)),
                    y.run(0)),
                T && (_ || (_ = vn(w, br, { duration: 999 }, !1)), _.run(0)),
                (B = !1);
        },
        d(T) {
            T && x(e),
                T && h && h.end(),
                T && y && y.end(),
                T && _ && _.end(),
                (O = !1),
                P();
        },
    };
}
function pv(o) {
    let e,
        t,
        n,
        i,
        s = o[2].name + '',
        r,
        l,
        a,
        c,
        h = he(o[2].parents),
        u = [];
    for (let y = 0; y < h.length; y += 1) u[y] = sh(ih(o, h, y));
    const p = (y) =>
        Oe(u[y], 1, 1, () => {
            u[y] = null;
        });
    let b = he(o[2].children),
        m = [];
    for (let y = 0; y < b.length; y += 1) m[y] = rh(oh(o, b, y));
    const k = (y) =>
        Oe(m[y], 1, 1, () => {
            m[y] = null;
        });
    return {
        c() {
            (e = cn('svg')), (t = cn('g'));
            for (let y = 0; y < u.length; y += 1) u[y].c();
            (n = cn('g')), (i = cn('text')), (r = Y(s));
            for (let y = 0; y < m.length; y += 1) m[y].c();
            g(i, 'class', 'lex-entry'),
                g(i, 'x', (l = o[0] / 2)),
                g(i, 'y', (a = o[1] / 2)),
                g(i, 'text-anchor', 'middle'),
                g(i, 'dominant-baseline', 'middle'),
                g(e, 'width', o[0]),
                g(e, 'height', o[1]);
        },
        m(y, w) {
            C(y, e, w), d(e, t);
            for (let E = 0; E < u.length; E += 1) u[E] && u[E].m(t, null);
            d(t, n), d(n, i), d(i, r);
            for (let E = 0; E < m.length; E += 1) m[E] && m[E].m(t, null);
            c = !0;
        },
        p(y, [w]) {
            if (w & 47) {
                h = he(y[2].parents);
                let E;
                for (E = 0; E < h.length; E += 1) {
                    const _ = ih(y, h, E);
                    u[E] ?
                        (u[E].p(_, w), Ce(u[E], 1))
                    :   ((u[E] = sh(_)), u[E].c(), Ce(u[E], 1), u[E].m(t, n));
                }
                for (Wt(), E = h.length; E < u.length; E += 1) p(E);
                Gt();
            }
            if (
                ((!c || w & 4) && s !== (s = y[2].name + '') && Ee(r, s),
                (!c || (w & 1 && l !== (l = y[0] / 2))) && g(i, 'x', l),
                (!c || (w & 2 && a !== (a = y[1] / 2))) && g(i, 'y', a),
                w & 55)
            ) {
                b = he(y[2].children);
                let E;
                for (E = 0; E < b.length; E += 1) {
                    const _ = oh(y, b, E);
                    m[E] ?
                        (m[E].p(_, w), Ce(m[E], 1))
                    :   ((m[E] = rh(_)),
                        m[E].c(),
                        Ce(m[E], 1),
                        m[E].m(t, null));
                }
                for (Wt(), E = b.length; E < m.length; E += 1) k(E);
                Gt();
            }
            (!c || w & 1) && g(e, 'width', y[0]),
                (!c || w & 2) && g(e, 'height', y[1]);
        },
        i(y) {
            if (!c) {
                for (let w = 0; w < h.length; w += 1) Ce(u[w]);
                for (let w = 0; w < b.length; w += 1) Ce(m[w]);
                c = !0;
            }
        },
        o(y) {
            u = u.filter(Boolean);
            for (let w = 0; w < u.length; w += 1) Oe(u[w]);
            m = m.filter(Boolean);
            for (let w = 0; w < m.length; w += 1) Oe(m[w]);
            c = !1;
        },
        d(y) {
            y && x(e), He(u, y), He(m, y);
        },
    };
}
function lh(o) {
    const e = o.length;
    if (e === 0) return [];
    const t = [];
    for (let n = 0; n < e; n++) {
        const i = (n + 0.5) / e,
            s = 1 - 4 * Math.pow(i - 0.5, 2);
        t.push(Math.round(s * Math.pow(e, 2)));
    }
    return t;
}
function fv(o, e, t) {
    const n = ji(),
        i = (p) => {
            n('select', p);
        };
    let { width: s } = e,
        { height: r } = e,
        { tree: l } = e,
        a,
        c;
    const h = (p) => {
            i(p.name);
        },
        u = (p) => {
            i(p.name);
        };
    return (
        (o.$$set = (p) => {
            'width' in p && t(0, (s = p.width)),
                'height' in p && t(1, (r = p.height)),
                'tree' in p && t(2, (l = p.tree));
        }),
        (o.$$.update = () => {
            o.$$.dirty & 4 &&
                (t(3, (a = lh(l.parents))), t(4, (c = lh(l.children))));
        }),
        [s, r, l, a, c, i, h, u]
    );
}
class gv extends Rt {
    constructor(e) {
        super(), Nt(this, e, fv, pv, Ct, { width: 0, height: 1, tree: 2 });
    }
}
function ah(o, e, t) {
    const n = o.slice();
    return (n[39] = e[t]), n;
}
function ch(o, e, t) {
    const n = o.slice();
    return (n[42] = e[t]), n;
}
function hh(o, e, t) {
    const n = o.slice();
    return (n[42] = e[t]), n;
}
function dh(o, e, t) {
    const n = o.slice();
    return (n[47] = e[t]), n;
}
function uh(o, e, t) {
    const n = o.slice();
    return (n[42] = e[t]), n;
}
function ph(o, e, t) {
    const n = o.slice();
    return (n[42] = e[t]), n;
}
function Jr(o) {
    const e = o.slice(),
        t = Object.entries(e[1].Relatives).find(([n, i]) =>
            Object.keys(i).includes(e[0]),
        );
    return (e[54] = t), e;
}
function fh(o, e, t) {
    const n = o.slice();
    return (n[42] = e[t]), n;
}
function gh(o, e, t) {
    const n = o.slice();
    return (n[42] = e[t]), n;
}
function mh(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search…'),
                g(e, 'for', 'search'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '0.333em'),
                Z(e, 'left', '1.2em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function bh(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent = 'Lexicon entries will appear here.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function wh(o) {
    let e,
        t = o[42] + '',
        n,
        i,
        s,
        r;
    function l() {
        return o[19](o[42]);
    }
    return {
        c() {
            (e = f('div')),
                (n = Y(t)),
                (i = v()),
                g(e, 'class', 'lex-entry'),
                St(e, 'selected', o[42] === o[0]);
        },
        m(a, c) {
            C(a, e, c),
                d(e, n),
                d(e, i),
                s || ((r = R(e, 'mousedown', l)), (s = !0));
        },
        p(a, c) {
            (o = a),
                c[0] & 64 && t !== (t = o[42] + '') && Ee(n, t),
                c[0] & 65 && St(e, 'selected', o[42] === o[0]);
        },
        d(a) {
            a && x(e), (s = !1), r();
        },
    };
}
function yh(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent =
                    'External-source etymology entries will appear here.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function vh(o) {
    let e,
        t = o[42] + '',
        n,
        i,
        s,
        r;
    function l() {
        return o[20](o[42]);
    }
    return {
        c() {
            (e = f('div')),
                (n = Y(t)),
                (i = v()),
                g(e, 'class', 'lex-entry'),
                St(e, 'selected', o[42] === o[0]);
        },
        m(a, c) {
            C(a, e, c),
                d(e, n),
                d(e, i),
                s || ((r = R(e, 'mousedown', l)), (s = !0));
        },
        p(a, c) {
            (o = a),
                c[0] & 128 && t !== (t = o[42] + '') && Ee(n, t),
                c[0] & 129 && St(e, 'selected', o[42] === o[0]);
        },
        d(a) {
            a && x(e), (s = !1), r();
        },
    };
}
function mv(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent =
                    'Select an entry from the left to view and edit its etymology.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        i: Le,
        o: Le,
        d(t) {
            t && x(e);
        },
    };
}
function bv(o) {
    let e, t, n, i, s, r, l;
    (e = new gv({ props: { tree: o[9], width: o[10], height: o[11] } })),
        e.$on('select', o[21]);
    const a = [yv, wv],
        c = [];
    function h(u, p) {
        return (
            p[0] & 3 && (n = null),
            u[0] in u[1].Lexicon ?
                0
            :   (n == null &&
                    (n = !!Object.entries(u[1].Relatives).some(u[16])),
                n ? 1 : -1)
        );
    }
    return (
        ~(i = h(o, [-1, -1])) && (s = c[i] = a[i](o)),
        {
            c() {
                qt(e.$$.fragment), (t = v()), s && s.c(), (r = yt());
            },
            m(u, p) {
                jt(e, u, p),
                    C(u, t, p),
                    ~i && c[i].m(u, p),
                    C(u, r, p),
                    (l = !0);
            },
            p(u, p) {
                const b = {};
                p[0] & 512 && (b.tree = u[9]),
                    p[0] & 1024 && (b.width = u[10]),
                    p[0] & 2048 && (b.height = u[11]),
                    e.$set(b);
                let m = i;
                (i = h(u, p)),
                    i === m ?
                        ~i && c[i].p(u, p)
                    :   (s &&
                            (Wt(),
                            Oe(c[m], 1, 1, () => {
                                c[m] = null;
                            }),
                            Gt()),
                        ~i ?
                            ((s = c[i]),
                            s ? s.p(u, p) : ((s = c[i] = a[i](u)), s.c()),
                            Ce(s, 1),
                            s.m(r.parentNode, r))
                        :   (s = null));
            },
            i(u) {
                l || (Ce(e.$$.fragment, u), Ce(s), (l = !0));
            },
            o(u) {
                Oe(e.$$.fragment, u), Oe(s), (l = !1);
            },
            d(u) {
                u && (x(t), x(r)), $t(e, u), ~i && c[i].d(u);
            },
        }
    );
}
function wv(o) {
    let e = Object.entries(o[1].Relatives).some(o[17]),
        t,
        n,
        i = e && kh(Jr(o));
    return {
        c() {
            i && i.c(), (t = yt());
        },
        m(s, r) {
            i && i.m(s, r), C(s, t, r), (n = !0);
        },
        p(s, r) {
            r[0] & 3 && (e = Object.entries(s[1].Relatives).some(s[17])),
                e ?
                    i ? (i.p(Jr(s), r), r[0] & 3 && Ce(i, 1))
                    :   ((i = kh(Jr(s))), i.c(), Ce(i, 1), i.m(t.parentNode, t))
                :   i &&
                    (Wt(),
                    Oe(i, 1, 1, () => {
                        i = null;
                    }),
                    Gt());
        },
        i(s) {
            n || (Ce(i), (n = !0));
        },
        o(s) {
            Oe(i), (n = !1);
        },
        d(s) {
            s && x(t), i && i.d(s);
        },
    };
}
function yv(o) {
    let e, t;
    return (
        (e = new ua({
            props: {
                word: o[0],
                source: o[1].Lexicon[o[0]],
                showEtymology: !1,
            },
        })),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(n, i) {
                jt(e, n, i), (t = !0);
            },
            p(n, i) {
                const s = {};
                i[0] & 1 && (s.word = n[0]),
                    i[0] & 3 && (s.source = n[1].Lexicon[n[0]]),
                    e.$set(s);
            },
            i(n) {
                t || (Ce(e.$$.fragment, n), (t = !0));
            },
            o(n) {
                Oe(e.$$.fragment, n), (t = !1);
            },
            d(n) {
                $t(e, n);
            },
        }
    );
}
function kh(o) {
    let e,
        t,
        n = o[54] && _h(o);
    return {
        c() {
            n && n.c(), (e = yt());
        },
        m(i, s) {
            n && n.m(i, s), C(i, e, s), (t = !0);
        },
        p(i, s) {
            i[54] ?
                n ? (n.p(i, s), s[0] & 3 && Ce(n, 1))
                :   ((n = _h(i)), n.c(), Ce(n, 1), n.m(e.parentNode, e))
            :   n &&
                (Wt(),
                Oe(n, 1, 1, () => {
                    n = null;
                }),
                Gt());
        },
        i(i) {
            t || (Ce(n), (t = !0));
        },
        o(i) {
            Oe(n), (t = !1);
        },
        d(i) {
            i && x(e), n && n.d(i);
        },
    };
}
function _h(o) {
    let e, t;
    return (
        (e = new ua({
            props: {
                word: o[0],
                source: o[1].Relatives[o[54][0]][o[0]],
                showEtymology: !1,
            },
        })),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(n, i) {
                jt(e, n, i), (t = !0);
            },
            p(n, i) {
                const s = {};
                i[0] & 1 && (s.word = n[0]),
                    i[0] & 3 && (s.source = n[1].Relatives[n[54][0]][n[0]]),
                    e.$set(s);
            },
            i(n) {
                t || (Ce(e.$$.fragment, n), (t = !0));
            },
            o(n) {
                Oe(e.$$.fragment, n), (t = !1);
            },
            d(n) {
                $t(e, n);
            },
        }
    );
}
function xh(o) {
    let e, t, n;
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Delete Empty Etymology'),
                g(e, 'class', 'hover-highlight hover-shadow');
        },
        m(i, s) {
            C(i, e, s), t || ((n = R(e, 'click', o[22])), (t = !0));
        },
        p: Le,
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function vv(o) {
    let e, t, n, i, s, r, l, a, c;
    return {
        c() {
            (e = f('label')),
                (t = Y(`New Ancestor
                                `)),
                (n = f('input')),
                (i = v()),
                (s = f('label')),
                (r = Y(`Source Language
                                `)),
                (l = f('input')),
                g(n, 'type', 'text'),
                g(l, 'type', 'text');
        },
        m(h, u) {
            C(h, e, u),
                d(e, t),
                d(e, n),
                j(n, o[2][0]),
                C(h, i, u),
                C(h, s, u),
                d(s, r),
                d(s, l),
                j(l, o[2][1]),
                a ||
                    ((c = [R(n, 'input', o[26]), R(l, 'input', o[27])]),
                    (a = !0));
        },
        p(h, u) {
            u[0] & 196 && n.value !== h[2][0] && j(n, h[2][0]),
                u[0] & 196 && l.value !== h[2][1] && j(l, h[2][1]);
        },
        d(h) {
            h && (x(e), x(i), x(s)), (a = !1), ot(c);
        },
    };
}
function kv(o) {
    let e,
        t,
        n,
        i,
        s,
        r = he(o[6]),
        l = [];
    for (let h = 0; h < r.length; h += 1) l[h] = Ch(ph(o, r, h));
    let a = he(o[7]),
        c = [];
    for (let h = 0; h < a.length; h += 1) c[h] = Eh(uh(o, a, h));
    return {
        c() {
            (e = f('select')), (t = f('optgroup'));
            for (let h = 0; h < l.length; h += 1) l[h].c();
            n = f('optgroup');
            for (let h = 0; h < c.length; h += 1) c[h].c();
            g(t, 'label', 'Internal'),
                g(n, 'label', 'External'),
                o[2][0] === void 0 && Pt(() => o[24].call(e));
        },
        m(h, u) {
            C(h, e, u), d(e, t);
            for (let p = 0; p < l.length; p += 1) l[p] && l[p].m(t, null);
            d(e, n);
            for (let p = 0; p < c.length; p += 1) c[p] && c[p].m(n, null);
            Bt(e, o[2][0], !0),
                i ||
                    ((s = [R(e, 'change', o[24]), R(e, 'change', o[25])]),
                    (i = !0));
        },
        p(h, u) {
            if (u[0] & 64) {
                r = he(h[6]);
                let p;
                for (p = 0; p < r.length; p += 1) {
                    const b = ph(h, r, p);
                    l[p] ?
                        l[p].p(b, u)
                    :   ((l[p] = Ch(b)), l[p].c(), l[p].m(t, null));
                }
                for (; p < l.length; p += 1) l[p].d(1);
                l.length = r.length;
            }
            if (u[0] & 128) {
                a = he(h[7]);
                let p;
                for (p = 0; p < a.length; p += 1) {
                    const b = uh(h, a, p);
                    c[p] ?
                        c[p].p(b, u)
                    :   ((c[p] = Eh(b)), c[p].c(), c[p].m(n, null));
                }
                for (; p < c.length; p += 1) c[p].d(1);
                c.length = a.length;
            }
            u[0] & 196 && Bt(e, h[2][0]);
        },
        d(h) {
            h && x(e), He(l, h), He(c, h), (i = !1), ot(s);
        },
    };
}
function Ch(o) {
    let e,
        t = o[42] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[42]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 64 && t !== (t = s[42] + '') && Ee(n, t),
                r[0] & 64 &&
                    i !== (i = s[42]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Eh(o) {
    let e,
        t = o[42] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[42]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 128 && t !== (t = s[42] + '') && Ee(n, t),
                r[0] & 128 &&
                    i !== (i = s[42]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Th(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent = 'This entry has no ancestors.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function Sh(o) {
    let e,
        t,
        n,
        i = o[47].name + '',
        s,
        r,
        l,
        a = o[47].source + '',
        c,
        h,
        u,
        p,
        b,
        m,
        k;
    function y() {
        return o[29](o[47]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('p')),
                (s = Y(i)),
                (r = v()),
                (l = f('p')),
                (c = Y(a)),
                (h = v()),
                (u = f('div')),
                (p = f('button')),
                (p.textContent = 'Sever'),
                (b = v()),
                g(n, 'class', 'lex-body'),
                g(l, 'class', 'tag-item'),
                g(t, 'class', 'column'),
                g(p, 'class', 'hover-highlight hover-shadow'),
                g(u, 'class', 'column'),
                g(e, 'class', 'row');
        },
        m(w, E) {
            C(w, e, E),
                d(e, t),
                d(t, n),
                d(n, s),
                d(t, r),
                d(t, l),
                d(l, c),
                d(e, h),
                d(e, u),
                d(u, p),
                d(e, b),
                m || ((k = R(p, 'click', y)), (m = !0));
        },
        p(w, E) {
            (o = w),
                E[0] & 512 && i !== (i = o[47].name + '') && Ee(s, i),
                E[0] & 512 && a !== (a = o[47].source + '') && Ee(c, a);
        },
        d(w) {
            w && x(e), (m = !1), k();
        },
    };
}
function _v(o) {
    let e, t, n, i, s, r, l, a, c;
    return {
        c() {
            (e = f('label')),
                (t = Y(`New Descendant
                                `)),
                (n = f('input')),
                (i = v()),
                (s = f('label')),
                (r = Y(`Source Language
                                `)),
                (l = f('input')),
                g(n, 'type', 'text'),
                g(l, 'type', 'text');
        },
        m(h, u) {
            C(h, e, u),
                d(e, t),
                d(e, n),
                j(n, o[3][0]),
                C(h, i, u),
                C(h, s, u),
                d(s, r),
                d(s, l),
                j(l, o[3][1]),
                a ||
                    ((c = [R(n, 'input', o[33]), R(l, 'input', o[34])]),
                    (a = !0));
        },
        p(h, u) {
            u[0] & 200 && n.value !== h[3][0] && j(n, h[3][0]),
                u[0] & 200 && l.value !== h[3][1] && j(l, h[3][1]);
        },
        d(h) {
            h && (x(e), x(i), x(s)), (a = !1), ot(c);
        },
    };
}
function xv(o) {
    let e,
        t,
        n,
        i,
        s,
        r = he(o[6]),
        l = [];
    for (let h = 0; h < r.length; h += 1) l[h] = Bh(hh(o, r, h));
    let a = he(o[7]),
        c = [];
    for (let h = 0; h < a.length; h += 1) c[h] = Ih(ch(o, a, h));
    return {
        c() {
            (e = f('select')), (t = f('optgroup'));
            for (let h = 0; h < l.length; h += 1) l[h].c();
            n = f('optgroup');
            for (let h = 0; h < c.length; h += 1) c[h].c();
            g(t, 'label', 'Internal'),
                g(n, 'label', 'External'),
                o[3][0] === void 0 && Pt(() => o[31].call(e));
        },
        m(h, u) {
            C(h, e, u), d(e, t);
            for (let p = 0; p < l.length; p += 1) l[p] && l[p].m(t, null);
            d(e, n);
            for (let p = 0; p < c.length; p += 1) c[p] && c[p].m(n, null);
            Bt(e, o[3][0], !0),
                i ||
                    ((s = [R(e, 'change', o[31]), R(e, 'change', o[32])]),
                    (i = !0));
        },
        p(h, u) {
            if (u[0] & 64) {
                r = he(h[6]);
                let p;
                for (p = 0; p < r.length; p += 1) {
                    const b = hh(h, r, p);
                    l[p] ?
                        l[p].p(b, u)
                    :   ((l[p] = Bh(b)), l[p].c(), l[p].m(t, null));
                }
                for (; p < l.length; p += 1) l[p].d(1);
                l.length = r.length;
            }
            if (u[0] & 128) {
                a = he(h[7]);
                let p;
                for (p = 0; p < a.length; p += 1) {
                    const b = ch(h, a, p);
                    c[p] ?
                        c[p].p(b, u)
                    :   ((c[p] = Ih(b)), c[p].c(), c[p].m(n, null));
                }
                for (; p < c.length; p += 1) c[p].d(1);
                c.length = a.length;
            }
            u[0] & 200 && Bt(e, h[3][0]);
        },
        d(h) {
            h && x(e), He(l, h), He(c, h), (i = !1), ot(s);
        },
    };
}
function Bh(o) {
    let e,
        t = o[42] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[42]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 64 && t !== (t = s[42] + '') && Ee(n, t),
                r[0] & 64 &&
                    i !== (i = s[42]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Ih(o) {
    let e,
        t = o[42] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[42]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 128 && t !== (t = s[42] + '') && Ee(n, t),
                r[0] & 128 &&
                    i !== (i = s[42]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Cv(o) {
    let e = o[37]() + '',
        t;
    return {
        c() {
            t = Y(e);
        },
        m(n, i) {
            C(n, t, i);
        },
        p(n, i) {
            i[0] & 512 && e !== (e = n[37]() + '') && Ee(t, e);
        },
        d(n) {
            n && x(t);
        },
    };
}
function Ev(o) {
    let e,
        t = he(o[9].children),
        n = [];
    for (let s = 0; s < t.length; s += 1) n[s] = Ah(ah(o, t, s));
    let i = null;
    return (
        t.length || (i = Lh()),
        {
            c() {
                for (let s = 0; s < n.length; s += 1) n[s].c();
                (e = yt()), i && i.c();
            },
            m(s, r) {
                for (let l = 0; l < n.length; l += 1) n[l] && n[l].m(s, r);
                C(s, e, r), i && i.m(s, r);
            },
            p(s, r) {
                if (r[0] & 515) {
                    t = he(s[9].children);
                    let l;
                    for (l = 0; l < t.length; l += 1) {
                        const a = ah(s, t, l);
                        n[l] ?
                            n[l].p(a, r)
                        :   ((n[l] = Ah(a)), n[l].c(), n[l].m(e.parentNode, e));
                    }
                    for (; l < n.length; l += 1) n[l].d(1);
                    (n.length = t.length),
                        !t.length && i ? i.p(s, r)
                        : t.length ? i && (i.d(1), (i = null))
                        : ((i = Lh()), i.c(), i.m(e.parentNode, e));
                }
            },
            d(s) {
                s && x(e), He(n, s), i && i.d(s);
            },
        }
    );
}
function Lh(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent = 'This entry has no descendants.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function Ah(o) {
    let e,
        t,
        n,
        i = o[39].name + '',
        s,
        r,
        l,
        a = o[39].source + '',
        c,
        h,
        u,
        p,
        b,
        m,
        k;
    function y() {
        return o[36](o[39]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('p')),
                (s = Y(i)),
                (r = v()),
                (l = f('p')),
                (c = Y(a)),
                (h = v()),
                (u = f('div')),
                (p = f('button')),
                (p.textContent = 'Sever'),
                (b = v()),
                g(n, 'class', 'lex-body'),
                g(l, 'class', 'tag-item'),
                g(t, 'class', 'column'),
                g(p, 'class', 'hover-highlight hover-shadow'),
                g(u, 'class', 'column'),
                g(e, 'class', 'row');
        },
        m(w, E) {
            C(w, e, E),
                d(e, t),
                d(t, n),
                d(n, s),
                d(t, r),
                d(t, l),
                d(l, c),
                d(e, h),
                d(e, u),
                d(u, p),
                d(e, b),
                m || ((k = R(p, 'click', y)), (m = !0));
        },
        p(w, E) {
            (o = w),
                E[0] & 512 && i !== (i = o[39].name + '') && Ee(s, i),
                E[0] & 512 && a !== (a = o[39].source + '') && Ee(c, a);
        },
        d(w) {
            w && x(e), (m = !1), k();
        },
    };
}
function Tv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I,
        z,
        se,
        ze,
        Qe,
        ne,
        me,
        Te,
        we,
        pe,
        Se,
        ye,
        Ze,
        U,
        Q = !o[8] && mh(),
        ge = he(o[6]),
        _e = [];
    for (let de = 0; de < ge.length; de += 1) _e[de] = wh(gh(o, ge, de));
    let Ie = null;
    ge.length || (Ie = bh());
    let Pe = he(o[7]),
        ve = [];
    for (let de = 0; de < Pe.length; de += 1) ve[de] = vh(fh(o, Pe, de));
    let Me = null;
    Pe.length || (Me = yh());
    const Je = [bv, mv],
        Ge = [];
    function et(de, ie) {
        return de[0] ? 0 : 1;
    }
    (T = et(o)), (S = Ge[T] = Je[T](o));
    let Ue =
        !(o[9]?.parents && o[9].parents[0]) &&
        !(o[9]?.children && o[9].children[0]) &&
        !!o[0] &&
        xh(o);
    function It(de, ie) {
        return de[4] ? vv : kv;
    }
    let ut = It(o),
        Lt = ut(o),
        vt = he(o[9].parents),
        qe = [];
    for (let de = 0; de < vt.length; de += 1) qe[de] = Sh(dh(o, vt, de));
    let ce = null;
    vt.length || (ce = Th());
    function je(de, ie) {
        return de[5] ? _v : xv;
    }
    let Ne = je(o),
        at = Ne(o);
    function At(de, ie) {
        return de[9] ? Ev : Cv;
    }
    let tt = At(o),
        kt = tt(o);
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('p')),
                (i.textContent = 'Entries'),
                (s = v()),
                (r = f('hr')),
                (l = v()),
                (a = f('div')),
                Q && Q.c(),
                (c = v()),
                (h = f('input')),
                (u = v()),
                (p = f('p')),
                (p.innerHTML = '⦓ <i>Internal</i> ⦔'),
                (b = v()),
                (m = f('div'));
            for (let de = 0; de < _e.length; de += 1) _e[de].c();
            Ie && Ie.c(),
                (k = v()),
                (y = f('br')),
                (w = v()),
                (E = f('p')),
                (E.innerHTML = '⦔ <i>External</i> ⦓'),
                (_ = v()),
                (B = f('div'));
            for (let de = 0; de < ve.length; de += 1) ve[de].c();
            Me && Me.c(),
                (O = v()),
                (P = f('div')),
                (H = f('div')),
                S.c(),
                (A = v()),
                ($ = f('hr')),
                (K = v()),
                Ue && Ue.c(),
                (W = v()),
                (G = f('div')),
                (L = f('div')),
                (D = f('p')),
                (D.textContent = 'Ancestors'),
                (X = v()),
                (te = f('label')),
                (M = Y(`Manual Entry
                            `)),
                (N = f('input')),
                (F = v()),
                Lt.c(),
                (V = v()),
                (ue = f('button')),
                (ue.textContent = 'Link'),
                (fe = v()),
                (J = f('div'));
            for (let de = 0; de < qe.length; de += 1) qe[de].c();
            ce && ce.c(),
                (ae = v()),
                (I = f('div')),
                (z = f('p')),
                (z.textContent = 'Descendants'),
                (se = v()),
                (ze = f('label')),
                (Qe = Y(`Manual Entry
                            `)),
                (ne = f('input')),
                (me = v()),
                at.c(),
                (Te = v()),
                (we = f('button')),
                (we.textContent = 'Link'),
                (pe = v()),
                (Se = f('div')),
                kt.c(),
                g(h, 'id', 'search'),
                g(h, 'type', 'text'),
                g(h, 'class', 'search'),
                Z(h, 'margin', 'auto'),
                Z(h, 'width', '90%'),
                g(a, 'class', 'search-container'),
                g(m, 'class', 'column scrolled'),
                Z(m, 'max-height', '40%'),
                g(B, 'class', 'column scrolled'),
                Z(B, 'max-height', '40%'),
                g(n, 'class', 'container column'),
                Z(n, 'max-width', '18%'),
                g(N, 'type', 'checkbox'),
                g(ue, 'class', 'hover-highlight hover-shadow'),
                g(J, 'class', 'column scrolled'),
                g(L, 'class', 'column'),
                g(ne, 'type', 'checkbox'),
                g(we, 'class', 'hover-highlight hover-shadow'),
                g(Se, 'class', 'column scrolled'),
                g(I, 'class', 'column'),
                g(G, 'class', 'row'),
                g(H, 'class', 'scrolled'),
                Z(H, 'max-height', '100%'),
                g(P, 'class', 'container column'),
                Z(P, 'height', '94vh'),
                g(t, 'class', 'row'),
                Z(t, 'height', '94vh'),
                g(e, 'class', 'tab-pane');
        },
        m(de, ie) {
            C(de, e, ie),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                d(n, l),
                d(n, a),
                Q && Q.m(a, null),
                d(a, c),
                d(a, h),
                j(h, o[8]),
                d(n, u),
                d(n, p),
                d(n, b),
                d(n, m);
            for (let Ae = 0; Ae < _e.length; Ae += 1)
                _e[Ae] && _e[Ae].m(m, null);
            Ie && Ie.m(m, null),
                d(n, k),
                d(n, y),
                d(n, w),
                d(n, E),
                d(n, _),
                d(n, B);
            for (let Ae = 0; Ae < ve.length; Ae += 1)
                ve[Ae] && ve[Ae].m(B, null);
            Me && Me.m(B, null),
                d(t, O),
                d(t, P),
                d(P, H),
                Ge[T].m(H, null),
                d(H, A),
                d(H, $),
                d(H, K),
                Ue && Ue.m(H, null),
                d(H, W),
                d(H, G),
                d(G, L),
                d(L, D),
                d(L, X),
                d(L, te),
                d(te, M),
                d(te, N),
                (N.checked = o[4]),
                d(L, F),
                Lt.m(L, null),
                d(L, V),
                d(L, ue),
                d(L, fe),
                d(L, J);
            for (let Ae = 0; Ae < qe.length; Ae += 1)
                qe[Ae] && qe[Ae].m(J, null);
            ce && ce.m(J, null),
                d(G, ae),
                d(G, I),
                d(I, z),
                d(I, se),
                d(I, ze),
                d(ze, Qe),
                d(ze, ne),
                (ne.checked = o[5]),
                d(I, me),
                at.m(I, null),
                d(I, Te),
                d(I, we),
                d(I, pe),
                d(I, Se),
                kt.m(Se, null),
                (ye = !0),
                Ze ||
                    ((U = [
                        R(h, 'input', o[18]),
                        R(h, 'input', o[12]),
                        R(N, 'change', o[23]),
                        R(ue, 'click', o[28]),
                        R(ne, 'change', o[30]),
                        R(we, 'click', o[35]),
                    ]),
                    (Ze = !0));
        },
        p(de, ie) {
            if (
                (de[8] ?
                    Q && (Q.d(1), (Q = null))
                :   Q || ((Q = mh()), Q.c(), Q.m(a, c)),
                ie[0] & 256 && h.value !== de[8] && j(h, de[8]),
                ie[0] & 67)
            ) {
                ge = he(de[6]);
                let Be;
                for (Be = 0; Be < ge.length; Be += 1) {
                    const Dt = gh(de, ge, Be);
                    _e[Be] ?
                        _e[Be].p(Dt, ie)
                    :   ((_e[Be] = wh(Dt)), _e[Be].c(), _e[Be].m(m, null));
                }
                for (; Be < _e.length; Be += 1) _e[Be].d(1);
                (_e.length = ge.length),
                    !ge.length && Ie ? Ie.p(de, ie)
                    : ge.length ? Ie && (Ie.d(1), (Ie = null))
                    : ((Ie = bh()), Ie.c(), Ie.m(m, null));
            }
            if (ie[0] & 129) {
                Pe = he(de[7]);
                let Be;
                for (Be = 0; Be < Pe.length; Be += 1) {
                    const Dt = fh(de, Pe, Be);
                    ve[Be] ?
                        ve[Be].p(Dt, ie)
                    :   ((ve[Be] = vh(Dt)), ve[Be].c(), ve[Be].m(B, null));
                }
                for (; Be < ve.length; Be += 1) ve[Be].d(1);
                (ve.length = Pe.length),
                    !Pe.length && Me ? Me.p(de, ie)
                    : Pe.length ? Me && (Me.d(1), (Me = null))
                    : ((Me = yh()), Me.c(), Me.m(B, null));
            }
            let Ae = T;
            if (
                ((T = et(de)),
                T === Ae ?
                    Ge[T].p(de, ie)
                :   (Wt(),
                    Oe(Ge[Ae], 1, 1, () => {
                        Ge[Ae] = null;
                    }),
                    Gt(),
                    (S = Ge[T]),
                    S ? S.p(de, ie) : ((S = Ge[T] = Je[T](de)), S.c()),
                    Ce(S, 1),
                    S.m(H, A)),
                (
                    !(de[9]?.parents && de[9].parents[0]) &&
                    !(de[9]?.children && de[9].children[0]) &&
                    de[0]
                ) ?
                    Ue ? Ue.p(de, ie)
                    :   ((Ue = xh(de)), Ue.c(), Ue.m(H, W))
                :   Ue && (Ue.d(1), (Ue = null)),
                ie[0] & 16 && (N.checked = de[4]),
                ut === (ut = It(de)) && Lt ?
                    Lt.p(de, ie)
                :   (Lt.d(1), (Lt = ut(de)), Lt && (Lt.c(), Lt.m(L, V))),
                ie[0] & 515)
            ) {
                vt = he(de[9].parents);
                let Be;
                for (Be = 0; Be < vt.length; Be += 1) {
                    const Dt = dh(de, vt, Be);
                    qe[Be] ?
                        qe[Be].p(Dt, ie)
                    :   ((qe[Be] = Sh(Dt)), qe[Be].c(), qe[Be].m(J, null));
                }
                for (; Be < qe.length; Be += 1) qe[Be].d(1);
                (qe.length = vt.length),
                    !vt.length && ce ? ce.p(de, ie)
                    : vt.length ? ce && (ce.d(1), (ce = null))
                    : ((ce = Th()), ce.c(), ce.m(J, null));
            }
            ie[0] & 32 && (ne.checked = de[5]),
                Ne === (Ne = je(de)) && at ?
                    at.p(de, ie)
                :   (at.d(1), (at = Ne(de)), at && (at.c(), at.m(I, Te))),
                tt === (tt = At(de)) && kt ?
                    kt.p(de, ie)
                :   (kt.d(1), (kt = tt(de)), kt && (kt.c(), kt.m(Se, null)));
        },
        i(de) {
            ye || (Ce(S), (ye = !0));
        },
        o(de) {
            Oe(S), (ye = !1);
        },
        d(de) {
            de && x(e),
                Q && Q.d(),
                He(_e, de),
                Ie && Ie.d(),
                He(ve, de),
                Me && Me.d(),
                Ge[T].d(),
                Ue && Ue.d(),
                Lt.d(),
                He(qe, de),
                ce && ce.d(),
                at.d(),
                kt.d(),
                (Ze = !1),
                ot(U);
        },
    };
}
function Sv(o, e, t) {
    let n;
    $e(o, q, (ae) => t(1, (n = ae)));
    let i = ['', ''],
        s = ['', ''],
        r = !1,
        l = !1,
        a = '',
        c = [],
        h,
        u,
        p,
        b,
        m = '';
    function k() {
        let ae = {};
        for (const I in n.Relatives) ae = { ...ae, ...n.Relatives[I] };
        (ae = { ...ae, ...n.Lexicon }),
            t(
                13,
                (c = Object.keys(ae).filter((I) => {
                    let z;
                    (z = n.CaseSensitive ? I : I.toLowerCase()),
                        (z = n.IgnoreDiacritics ? I.normalize('NFD') : I);
                    let se;
                    return (
                        (se = n.CaseSensitive ? m : m.toLowerCase()),
                        (se = n.IgnoreDiacritics ? se.normalize('NFD') : se),
                        `^${z.replaceAll(/\s+/g, '^')}^`.includes(se)
                    );
                })),
            );
    }
    function y() {
        const ae = [];
        Object.keys(n.Etymologies).forEach((z) => {
            if (
                z !== a &&
                n.Etymologies[z].descendants.some((se) => se.name === a)
            ) {
                const se =
                    n.Etymologies[z].source === '<< THIS LANGUAGE >>' ?
                        n.Name
                    :   n.Etymologies[z].source;
                ae.push([z, se]);
            }
        });
        const I = [];
        return (
            a in n.Etymologies &&
                n.Etymologies[a].descendants.forEach((z) => {
                    I.push([
                        z.name,
                        z.source === '<< THIS LANGUAGE >>' ? n.Name : z.source,
                    ]);
                }),
            {
                name: a,
                children: I.map((z) => ({ name: z[0], source: z[1] })),
                parents: ae.map((z) => ({ name: z[0], source: z[1] })),
            }
        );
    }
    let w, E, _;
    const B = ([ae, I]) => Object.keys(I).includes(a),
        O = ([ae, I]) => Object.keys(I).includes(a);
    function P() {
        (m = this.value), t(8, m);
    }
    const H = (ae) => {
            t(0, (a = ae)),
                ae in n.Etymologies ||
                    ee(
                        q,
                        (n.Etymologies[ae] = {
                            descendants: [],
                            source: '<< THIS LANGUAGE >>',
                        }),
                        n,
                    );
        },
        T = (ae) => {
            t(0, (a = ae));
        },
        S = (ae) => t(0, (a = ae.detail)),
        A = () => {
            const { [a]: ae, ...I } = n.Etymologies;
            ee(q, (n.Etymologies = I), n), t(0, (a = ''));
        };
    function $() {
        (r = this.checked), t(4, r);
    }
    function K() {
        (i[0] = zn(this)),
            t(2, i),
            t(7, p),
            t(1, n),
            t(13, c),
            t(15, b),
            t(6, u),
            t(1, n),
            t(13, c),
            t(14, h);
    }
    const W = () => t(2, (i[1] = n.Name), i);
    function G() {
        (i[0] = this.value),
            t(2, i),
            t(7, p),
            t(1, n),
            t(13, c),
            t(15, b),
            t(6, u),
            t(1, n),
            t(13, c),
            t(14, h);
    }
    function L() {
        (i[1] = this.value),
            t(2, i),
            t(7, p),
            t(1, n),
            t(13, c),
            t(15, b),
            t(6, u),
            t(1, n),
            t(13, c),
            t(14, h);
    }
    const D = () => {
            i[0] &&
                (i[0] in n.Etymologies ||
                    ee(
                        q,
                        (n.Etymologies[i[0]] = {
                            source:
                                i[1] === n.Name ? '<< THIS LANGUAGE >>' : i[1],
                            descendants: [],
                        }),
                        n,
                    ),
                n.Etymologies[i[0]].descendants.push({
                    name: a,
                    source: n.Etymologies[a].source,
                }),
                ee(q, (n.Etymologies = { ...n.Etymologies }), n),
                t(2, (i = ['', ''])));
        },
        X = (ae) => {
            ee(
                q,
                (n.Etymologies[ae.name].descendants = n.Etymologies[
                    ae.name
                ].descendants.filter((I) => I.name !== a)),
                n,
            ),
                ee(q, (n.Etymologies = { ...n.Etymologies }), n);
        };
    function te() {
        (l = this.checked), t(5, l);
    }
    function M() {
        (s[0] = zn(this)),
            t(3, s),
            t(7, p),
            t(1, n),
            t(13, c),
            t(15, b),
            t(6, u),
            t(1, n),
            t(13, c),
            t(14, h);
    }
    const N = () => t(3, (s[1] = n.Name), s);
    function F() {
        (s[0] = this.value),
            t(3, s),
            t(7, p),
            t(1, n),
            t(13, c),
            t(15, b),
            t(6, u),
            t(1, n),
            t(13, c),
            t(14, h);
    }
    function V() {
        (s[1] = this.value),
            t(3, s),
            t(7, p),
            t(1, n),
            t(13, c),
            t(15, b),
            t(6, u),
            t(1, n),
            t(13, c),
            t(14, h);
    }
    const ue = () => {
            s[0] &&
                (s[0] in n.Etymologies ||
                    ee(
                        q,
                        (n.Etymologies[s[0]] = {
                            source: s[1],
                            descendants: [],
                        }),
                        n,
                    ),
                n.Etymologies[a].descendants.push({
                    name: s[0],
                    source: s[1] === n.Name ? '<< THIS LANGUAGE >>' : s[1],
                }),
                ee(q, (n.Etymologies = { ...n.Etymologies }), n),
                t(3, (s = ['', ''])));
        },
        fe = (ae) => {
            ee(
                q,
                (n.Etymologies[a].descendants = n.Etymologies[
                    a
                ].descendants.filter((I) => I.name !== ae.name)),
                n,
            ),
                ee(q, (n.Etymologies = { ...n.Etymologies }), n);
        },
        J = () => (console.log(w), '');
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 8194 &&
                t(
                    14,
                    (h = c.reduce(
                        (ae, I) => (
                            I in n.Lexicon && (ae[I] = n.Lexicon[I]), ae
                        ),
                        {},
                    )),
                ),
                o.$$.dirty[0] & 24578 &&
                    (n.Alphabet, t(6, (u = Ms(c.length ? h : n.Lexicon)))),
                o.$$.dirty[0] & 40962 &&
                    (n.Alphabet,
                    n.Relatives,
                    n.Etymologies,
                    (() => {
                        const ae = {};
                        Object.keys(n.Relatives).forEach((I) => {
                            Object.keys(n.Relatives[I]).forEach((z) => {
                                z in n.Lexicon || (ae[z] = n.Relatives[I][z]);
                            });
                        }),
                            Object.keys(n.Etymologies).forEach((I) => {
                                I in n.Lexicon ||
                                    (ae[I] = {
                                        Senses: [],
                                        pronunciations: {},
                                        Timestamp: Date.now(),
                                    });
                            }),
                            t(
                                15,
                                (b = c.reduce(
                                    (I, z) => (z in ae && (I[z] = ae[z]), I),
                                    {},
                                )),
                            ),
                            t(7, (p = Ms(c.length ? b : ae)));
                    })()),
                o.$$.dirty[0] & 3 &&
                    (n.Etymologies,
                    t(9, (w = y())),
                    t(10, (E = window.innerWidth * 0.82)),
                    t(11, (_ = window.innerHeight * 0.47)));
        }),
        [
            a,
            n,
            i,
            s,
            r,
            l,
            u,
            p,
            m,
            w,
            E,
            _,
            k,
            c,
            h,
            b,
            B,
            O,
            P,
            H,
            T,
            S,
            A,
            $,
            K,
            W,
            G,
            L,
            D,
            X,
            te,
            M,
            N,
            F,
            V,
            ue,
            fe,
            J,
        ]
    );
}
class Bv extends Rt {
    constructor(e) {
        super(), Nt(this, e, Sv, Tv, Ct, {}, null, [-1, -1]);
    }
}
function Oh(o, e, t) {
    const n = o.slice();
    return (n[7] = e[t]), (n[9] = t), n;
}
function Mh(o, e, t) {
    const n = o.slice();
    return (n[10] = e[t]), n;
}
function Ph(o, e, t) {
    const n = o.slice();
    return (n[13] = e[t]), n;
}
function Nh(o) {
    let e,
        t = he(o[2]().Phrasebook[o[3]()][o[0]].tags),
        n = [];
    for (let i = 0; i < t.length; i += 1) n[i] = Rh(Ph(o, t, i));
    return {
        c() {
            for (let i = 0; i < n.length; i += 1) n[i].c();
            e = yt();
        },
        m(i, s) {
            for (let r = 0; r < n.length; r += 1) n[r] && n[r].m(i, s);
            C(i, e, s);
        },
        p(i, s) {
            if (s & 13) {
                t = he(i[2]().Phrasebook[i[3]()][i[0]].tags);
                let r;
                for (r = 0; r < t.length; r += 1) {
                    const l = Ph(i, t, r);
                    n[r] ?
                        n[r].p(l, s)
                    :   ((n[r] = Rh(l)), n[r].c(), n[r].m(e.parentNode, e));
                }
                for (; r < n.length; r += 1) n[r].d(1);
                n.length = t.length;
            }
        },
        d(i) {
            i && x(e), He(n, i);
        },
    };
}
function Rh(o) {
    let e,
        t = o[13] + '',
        n;
    return {
        c() {
            (e = f('div')), (n = Y(t)), g(e, 'class', 'tag-item');
        },
        m(i, s) {
            C(i, e, s), d(e, n);
        },
        p(i, s) {
            s & 1 && t !== (t = i[13] + '') && Ee(n, t);
        },
        d(i) {
            i && x(e);
        },
    };
}
function Dh(o) {
    let e,
        t,
        n,
        i,
        s = he(
            Array(
                Math.ceil(
                    Object.keys(o[2]().Phrasebook[o[3]()][o[0]].variants)
                        .length / 3,
                ),
            ),
        ),
        r = [];
    for (let a = 0; a < s.length; a += 1) r[a] = Hh(Oh(o, s, a));
    const l = (a) =>
        Oe(r[a], 1, 1, () => {
            r[a] = null;
        });
    return {
        c() {
            (e = f('p')), (e.textContent = '⋲ ᴠᴀʀɪᴀɴᴛꜱ ⋺'), (t = v());
            for (let a = 0; a < r.length; a += 1) r[a].c();
            n = yt();
        },
        m(a, c) {
            C(a, e, c), C(a, t, c);
            for (let h = 0; h < r.length; h += 1) r[h] && r[h].m(a, c);
            C(a, n, c), (i = !0);
        },
        p(a, c) {
            if (c & 13) {
                s = he(
                    Array(
                        Math.ceil(
                            Object.keys(
                                a[2]().Phrasebook[a[3]()][a[0]].variants,
                            ).length / 3,
                        ),
                    ),
                );
                let h;
                for (h = 0; h < s.length; h += 1) {
                    const u = Oh(a, s, h);
                    r[h] ?
                        (r[h].p(u, c), Ce(r[h], 1))
                    :   ((r[h] = Hh(u)),
                        r[h].c(),
                        Ce(r[h], 1),
                        r[h].m(n.parentNode, n));
                }
                for (Wt(), h = s.length; h < r.length; h += 1) l(h);
                Gt();
            }
        },
        i(a) {
            if (!i) {
                for (let c = 0; c < s.length; c += 1) Ce(r[c]);
                i = !0;
            }
        },
        o(a) {
            r = r.filter(Boolean);
            for (let c = 0; c < r.length; c += 1) Oe(r[c]);
            i = !1;
        },
        d(a) {
            a && (x(e), x(t), x(n)), He(r, a);
        },
    };
}
function Fh(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l =
            Co(o[2]().Phrasebook[o[3]()][o[0]].variants[o[10]].description) +
            '',
        a;
    return (
        (t = new da({
            props: {
                word: o[10],
                source: o[2]().Phrasebook[o[3]()][o[0]].variants[o[10]],
            },
        })),
        (i = new ql({
            props: {
                pronunciations:
                    o[2]().Phrasebook[o[3]()][o[0]].variants[o[10]]
                        .pronunciations,
            },
        })),
        {
            c() {
                (e = f('div')),
                    qt(t.$$.fragment),
                    (n = v()),
                    qt(i.$$.fragment),
                    (s = v()),
                    (r = f('p')),
                    g(r, 'class', 'prelined'),
                    Z(r, 'margin', '0 1rem 0.5rem 1rem'),
                    g(e, 'class', 'column');
            },
            m(c, h) {
                C(c, e, h),
                    jt(t, e, null),
                    d(e, n),
                    jt(i, e, null),
                    d(e, s),
                    d(e, r),
                    (r.innerHTML = l),
                    (a = !0);
            },
            p(c, h) {
                const u = {};
                h & 1 && (u.word = c[10]),
                    h & 1 &&
                        (u.source =
                            c[2]().Phrasebook[c[3]()][c[0]].variants[c[10]]),
                    t.$set(u);
                const p = {};
                h & 1 &&
                    (p.pronunciations =
                        c[2]().Phrasebook[c[3]()][c[0]].variants[
                            c[10]
                        ].pronunciations),
                    i.$set(p),
                    (!a || h & 1) &&
                        l !==
                            (l =
                                Co(
                                    c[2]().Phrasebook[c[3]()][c[0]].variants[
                                        c[10]
                                    ].description,
                                ) + '') &&
                        (r.innerHTML = l);
            },
            i(c) {
                a || (Ce(t.$$.fragment, c), Ce(i.$$.fragment, c), (a = !0));
            },
            o(c) {
                Oe(t.$$.fragment, c), Oe(i.$$.fragment, c), (a = !1);
            },
            d(c) {
                c && x(e), $t(t), $t(i);
            },
        }
    );
}
function Hh(o) {
    let e,
        t,
        n,
        i,
        s,
        r = he(
            Object.keys(o[2]().Phrasebook[o[3]()][o[0]].variants).slice(
                o[9] * 3,
                o[9] * 3 + 3,
            ),
        ),
        l = [];
    for (let c = 0; c < r.length; c += 1) l[c] = Fh(Mh(o, r, c));
    const a = (c) =>
        Oe(l[c], 1, 1, () => {
            l[c] = null;
        });
    return {
        c() {
            e = f('div');
            for (let c = 0; c < l.length; c += 1) l[c].c();
            (t = v()), (n = f('br')), (i = v()), g(e, 'class', 'row');
        },
        m(c, h) {
            C(c, e, h);
            for (let u = 0; u < l.length; u += 1) l[u] && l[u].m(e, null);
            d(e, t), d(e, n), d(e, i), (s = !0);
        },
        p(c, h) {
            if (h & 13) {
                r = he(
                    Object.keys(c[2]().Phrasebook[c[3]()][c[0]].variants).slice(
                        c[9] * 3,
                        c[9] * 3 + 3,
                    ),
                );
                let u;
                for (u = 0; u < r.length; u += 1) {
                    const p = Mh(c, r, u);
                    l[u] ?
                        (l[u].p(p, h), Ce(l[u], 1))
                    :   ((l[u] = Fh(p)), l[u].c(), Ce(l[u], 1), l[u].m(e, t));
                }
                for (Wt(), u = r.length; u < l.length; u += 1) a(u);
                Gt();
            }
        },
        i(c) {
            if (!s) {
                for (let h = 0; h < r.length; h += 1) Ce(l[h]);
                s = !0;
            }
        },
        o(c) {
            l = l.filter(Boolean);
            for (let h = 0; h < l.length; h += 1) Oe(l[h]);
            s = !1;
        },
        d(c) {
            c && x(e), He(l, c);
        },
    };
}
function Iv(o) {
    let e,
        t,
        n,
        i,
        s,
        r = !!o[2]().Phrasebook[o[3]()][o[0]].tags[0],
        l,
        a,
        c = Co(o[2]().Phrasebook[o[3]()][o[0]].description) + '',
        h,
        u = !!Object.keys(o[2]().Phrasebook[o[3]()][o[0]].variants).length,
        p,
        b,
        m;
    (t = new da({
        props: { word: o[0], source: o[2]().Phrasebook[o[3]()][o[0]] },
    })),
        (i = new ql({
            props: {
                pronunciations: o[2]().Phrasebook[o[3]()][o[0]].pronunciations,
            },
        }));
    let k = r && Nh(o),
        y = u && Dh(o);
    return {
        c() {
            (e = f('div')),
                qt(t.$$.fragment),
                (n = v()),
                qt(i.$$.fragment),
                (s = v()),
                k && k.c(),
                (l = v()),
                (a = f('p')),
                (h = v()),
                y && y.c(),
                g(a, 'class', 'prelined'),
                g(e, 'class', 'lex-entry'),
                g(e, 'id', o[0]);
        },
        m(w, E) {
            C(w, e, E),
                jt(t, e, null),
                d(e, n),
                jt(i, e, null),
                d(e, s),
                k && k.m(e, null),
                d(e, l),
                d(e, a),
                (a.innerHTML = c),
                d(e, h),
                y && y.m(e, null),
                (p = !0),
                b || ((m = R(e, 'contextmenu', o[1])), (b = !0));
        },
        p(w, [E]) {
            const _ = {};
            E & 1 && (_.word = w[0]),
                E & 1 && (_.source = w[2]().Phrasebook[w[3]()][w[0]]),
                t.$set(_);
            const B = {};
            E & 1 &&
                (B.pronunciations =
                    w[2]().Phrasebook[w[3]()][w[0]].pronunciations),
                i.$set(B),
                E & 1 && (r = !!w[2]().Phrasebook[w[3]()][w[0]].tags[0]),
                r ?
                    k ? k.p(w, E)
                    :   ((k = Nh(w)), k.c(), k.m(e, l))
                :   k && (k.d(1), (k = null)),
                (!p || E & 1) &&
                    c !==
                        (c =
                            Co(w[2]().Phrasebook[w[3]()][w[0]].description) +
                            '') &&
                    (a.innerHTML = c),
                E & 1 &&
                    (u = !!Object.keys(w[2]().Phrasebook[w[3]()][w[0]].variants)
                        .length),
                u ?
                    y ? (y.p(w, E), E & 1 && Ce(y, 1))
                    :   ((y = Dh(w)), y.c(), Ce(y, 1), y.m(e, null))
                :   y &&
                    (Wt(),
                    Oe(y, 1, 1, () => {
                        y = null;
                    }),
                    Gt()),
                (!p || E & 1) && g(e, 'id', w[0]);
        },
        i(w) {
            p || (Ce(t.$$.fragment, w), Ce(i.$$.fragment, w), Ce(y), (p = !0));
        },
        o(w) {
            Oe(t.$$.fragment, w), Oe(i.$$.fragment, w), Oe(y), (p = !1);
        },
        d(w) {
            w && x(e), $t(t), $t(i), k && k.d(), y && y.d(), (b = !1), m();
        },
    };
}
function Lv(o, e, t) {
    let n, i;
    $e(o, ri, (h) => t(4, (n = h))), $e(o, q, (h) => t(5, (i = h)));
    const s = ji(),
        r = () => s('edit');
    let { phrase: l = '' } = e;
    const a = () => i,
        c = () => n;
    return (
        (o.$$set = (h) => {
            'phrase' in h && t(0, (l = h.phrase));
        }),
        [l, r, a, c]
    );
}
class Av extends Rt {
    constructor(e) {
        super(), Nt(this, e, Lv, Iv, Ct, { phrase: 0 });
    }
}
function zh(o, e, t) {
    const n = o.slice();
    return (n[11] = e[t]), (n[12] = e), (n[13] = t), n;
}
function Ov(o) {
    let e, t, n;
    return {
        c() {
            (e = f('input')),
                g(e, 'type', 'text'),
                g(e, 'class', 'pronunciation');
        },
        m(i, s) {
            C(i, e, s),
                j(e, o[2].General),
                t || ((n = R(e, 'input', o[8])), (t = !0));
        },
        p(i, s) {
            s & 4 && e.value !== i[2].General && j(e, i[2].General);
        },
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function Mv(o) {
    let e,
        t = he(o[3]),
        n = [];
    for (let i = 0; i < t.length; i += 1) n[i] = Uh(zh(o, t, i));
    return {
        c() {
            for (let i = 0; i < n.length; i += 1) n[i].c();
            e = yt();
        },
        m(i, s) {
            for (let r = 0; r < n.length; r += 1) n[r] && n[r].m(i, s);
            C(i, e, s);
        },
        p(i, s) {
            if (s & 12) {
                t = he(i[3]);
                let r;
                for (r = 0; r < t.length; r += 1) {
                    const l = zh(i, t, r);
                    n[r] ?
                        n[r].p(l, s)
                    :   ((n[r] = Uh(l)), n[r].c(), n[r].m(e.parentNode, e));
                }
                for (; r < n.length; r += 1) n[r].d(1);
                n.length = t.length;
            }
        },
        d(i) {
            i && x(e), He(n, i);
        },
    };
}
function Uh(o) {
    let e,
        t,
        n = o[11] + '',
        i,
        s,
        r,
        l,
        a,
        c,
        h;
    function u() {
        o[7].call(l, o[11]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (i = Y(n)),
                (s = v()),
                (r = f('div')),
                (l = f('input')),
                (a = v()),
                g(t, 'class', 'column text-right lect'),
                g(l, 'type', 'text'),
                g(l, 'class', 'pronunciation text-left'),
                g(r, 'class', 'column text-left'),
                g(e, 'class', 'row');
        },
        m(p, b) {
            C(p, e, b),
                d(e, t),
                d(t, i),
                d(e, s),
                d(e, r),
                d(r, l),
                j(l, o[2][o[11]]),
                d(e, a),
                c || ((h = R(l, 'input', u)), (c = !0));
        },
        p(p, b) {
            (o = p),
                b & 8 && n !== (n = o[11] + '') && Ee(i, n),
                b & 12 && l.value !== o[2][o[11]] && j(l, o[2][o[11]]);
        },
        d(p) {
            p && x(e), (c = !1), h();
        },
    };
}
function Pv(o) {
    let e, t, n, i, s, r, l, a, c;
    function h(b, m) {
        return b[4].UseLects ? Mv : Ov;
    }
    let u = h(o),
        p = u(o);
    return {
        c() {
            (e = f('div')),
                (t = f('input')),
                (n = v()),
                p.c(),
                (i = v()),
                (s = f('textarea')),
                (r = v()),
                (l = f('br')),
                g(t, 'type', 'text'),
                g(e, 'class', 'variant-div');
        },
        m(b, m) {
            C(b, e, m),
                d(e, t),
                j(t, o[0]),
                d(e, n),
                p.m(e, null),
                d(e, i),
                d(e, s),
                j(s, o[1]),
                d(e, r),
                d(e, l),
                a ||
                    ((c = [
                        R(t, 'keyup', o[5]),
                        R(t, 'input', o[6]),
                        R(s, 'input', o[9]),
                    ]),
                    (a = !0));
        },
        p(b, [m]) {
            m & 1 && t.value !== b[0] && j(t, b[0]),
                u === (u = h(b)) && p ?
                    p.p(b, m)
                :   (p.d(1), (p = u(b)), p && (p.c(), p.m(e, i))),
                m & 2 && j(s, b[1]);
        },
        i: Le,
        o: Le,
        d(b) {
            b && x(e), p.d(), (a = !1), ot(c);
        },
    };
}
function Nv(o, e, t) {
    let n;
    $e(o, q, (m) => t(4, (n = m)));
    let { phrase: i = '' } = e,
        { description: s = '' } = e,
        { lects: r } = e,
        { pronunciations: l = {} } = e;
    const a = ji(),
        c = () => a('update');
    function h() {
        (i = this.value), t(0, i);
    }
    function u(m) {
        (l[m] = this.value), t(2, l), t(3, r), t(0, i);
    }
    function p() {
        (l.General = this.value), t(2, l), t(3, r), t(0, i);
    }
    function b() {
        (s = this.value), t(1, s);
    }
    return (
        (o.$$set = (m) => {
            'phrase' in m && t(0, (i = m.phrase)),
                'description' in m && t(1, (s = m.description)),
                'lects' in m && t(3, (r = m.lects)),
                'pronunciations' in m && t(2, (l = m.pronunciations));
        }),
        (o.$$.update = () => {
            o.$$.dirty & 9 &&
                r.forEach((m) => {
                    t(2, (l[m].ipa = en(i, m)), l);
                });
        }),
        [i, s, l, r, n, c, h, u, p, b]
    );
}
class Rv extends Rt {
    constructor(e) {
        super(),
            Nt(this, e, Nv, Pv, Ct, {
                phrase: 0,
                description: 1,
                lects: 3,
                pronunciations: 2,
            });
    }
}
function jh(o, e, t) {
    const n = o.slice();
    return (n[40] = e[t]), (n[41] = e), (n[42] = t), n;
}
function $h(o, e, t) {
    const n = o.slice();
    return (n[43] = e[t]), (n[44] = e), (n[45] = t), n;
}
function Wh(o, e, t) {
    const n = o.slice();
    return (n[46] = e[t]), n;
}
function Gh(o, e, t) {
    const n = o.slice();
    return (n[43] = e[t]), n;
}
function qh(o, e, t) {
    const n = o.slice();
    return (n[51] = e[t]), n;
}
function Vh(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent = 'Categories will appear here.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function Yh(o) {
    let e,
        t = o[51] + '',
        n,
        i,
        s,
        r;
    function l() {
        return o[19](o[51]);
    }
    return {
        c() {
            (e = f('div')),
                (n = Y(t)),
                (i = v()),
                g(e, 'class', 'lex-entry capitalize'),
                St(e, 'selected', o[51] === o[5]);
        },
        m(a, c) {
            C(a, e, c),
                d(e, n),
                d(e, i),
                s || ((r = R(e, 'mousedown', l)), (s = !0));
        },
        p(a, c) {
            (o = a),
                c[0] & 16 && t !== (t = o[51] + '') && Ee(n, t),
                c[0] & 48 && St(e, 'selected', o[51] === o[5]);
        },
        d(a) {
            a && x(e), (s = !1), r();
        },
    };
}
function Kh(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search by phrase…'),
                g(e, 'for', 'search-phrase'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '.5em'),
                Z(e, 'left', '1em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Xh(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search by tags…'),
                g(e, 'for', 'search-tags'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '.5em'),
                Z(e, 'left', '1em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Zh(o) {
    let e;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Search descriptions…'),
                g(e, 'for', 'search-description'),
                Z(e, 'position', 'absolute'),
                Z(e, 'top', '.5em'),
                Z(e, 'left', '1em');
        },
        m(t, n) {
            C(t, e, n);
        },
        d(t) {
            t && x(e);
        },
    };
}
function Jh(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a = he(o[4].Lects),
        c = [];
    for (let h = 0; h < a.length; h += 1) c[h] = Qh(Gh(o, a, h));
    return {
        c() {
            (e = f('div')),
                (t = f('label')),
                (n = Y(`Filter by lect:
                            `)),
                (i = f('select')),
                (s = f('option')),
                (s.textContent = 'All');
            for (let h = 0; h < c.length; h += 1) c[h].c();
            (s.__value = ''),
                j(s, s.__value),
                o[3] === void 0 && Pt(() => o[23].call(i)),
                g(e, 'class', 'column');
        },
        m(h, u) {
            C(h, e, u), d(e, t), d(t, n), d(t, i), d(i, s);
            for (let p = 0; p < c.length; p += 1) c[p] && c[p].m(i, null);
            Bt(i, o[3], !0), r || ((l = R(i, 'change', o[23])), (r = !0));
        },
        p(h, u) {
            if (u[0] & 16) {
                a = he(h[4].Lects);
                let p;
                for (p = 0; p < a.length; p += 1) {
                    const b = Gh(h, a, p);
                    c[p] ?
                        c[p].p(b, u)
                    :   ((c[p] = Qh(b)), c[p].c(), c[p].m(i, null));
                }
                for (; p < c.length; p += 1) c[p].d(1);
                c.length = a.length;
            }
            u[0] & 24 && Bt(i, h[3]);
        },
        d(h) {
            h && x(e), He(c, h), (r = !1), l();
        },
    };
}
function Qh(o) {
    let e,
        t = o[43] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[43]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 16 && t !== (t = s[43] + '') && Ee(n, t),
                r[0] & 16 &&
                    i !== (i = s[43]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Dv(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent =
                    'Select a category from the left or add your first phrase entry.'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        i: Le,
        o: Le,
        d(t) {
            t && x(e);
        },
    };
}
function Fv(o) {
    let e,
        t,
        n = he(o[6]),
        i = [];
    for (let r = 0; r < n.length; r += 1) i[r] = ed(Wh(o, n, r));
    const s = (r) =>
        Oe(i[r], 1, 1, () => {
            i[r] = null;
        });
    return {
        c() {
            for (let r = 0; r < i.length; r += 1) i[r].c();
            e = yt();
        },
        m(r, l) {
            for (let a = 0; a < i.length; a += 1) i[a] && i[a].m(r, l);
            C(r, e, l), (t = !0);
        },
        p(r, l) {
            if (l[0] & 65600) {
                n = he(r[6]);
                let a;
                for (a = 0; a < n.length; a += 1) {
                    const c = Wh(r, n, a);
                    i[a] ?
                        (i[a].p(c, l), Ce(i[a], 1))
                    :   ((i[a] = ed(c)),
                        i[a].c(),
                        Ce(i[a], 1),
                        i[a].m(e.parentNode, e));
                }
                for (Wt(), a = n.length; a < i.length; a += 1) s(a);
                Gt();
            }
        },
        i(r) {
            if (!t) {
                for (let l = 0; l < n.length; l += 1) Ce(i[l]);
                t = !0;
            }
        },
        o(r) {
            i = i.filter(Boolean);
            for (let l = 0; l < i.length; l += 1) Oe(i[l]);
            t = !1;
        },
        d(r) {
            r && x(e), He(i, r);
        },
    };
}
function ed(o) {
    let e, t;
    function n() {
        return o[24](o[46]);
    }
    return (
        (e = new Av({ props: { phrase: o[46] } })),
        e.$on('edit', n),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(i, s) {
                jt(e, i, s), (t = !0);
            },
            p(i, s) {
                o = i;
                const r = {};
                s[0] & 64 && (r.phrase = o[46]), e.$set(r);
            },
            i(i) {
                t || (Ce(e.$$.fragment, i), (t = !0));
            },
            o(i) {
                Oe(e.$$.fragment, i), (t = !1);
            },
            d(i) {
                $t(e, i);
            },
        }
    );
}
function Hv(o) {
    let e, t, n;
    return {
        c() {
            (e = f('input')),
                g(e, 'type', 'text'),
                g(e, 'class', 'pronunciation');
        },
        m(i, s) {
            C(i, e, s),
                j(e, o[12].General),
                t || ((n = R(e, 'input', o[29])), (t = !0));
        },
        p(i, s) {
            s[0] & 4096 && e.value !== i[12].General && j(e, i[12].General);
        },
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function zv(o) {
    let e,
        t = he(o[10]),
        n = [];
    for (let i = 0; i < t.length; i += 1) n[i] = td($h(o, t, i));
    return {
        c() {
            for (let i = 0; i < n.length; i += 1) n[i].c();
            e = yt();
        },
        m(i, s) {
            for (let r = 0; r < n.length; r += 1) n[r] && n[r].m(i, s);
            C(i, e, s);
        },
        p(i, s) {
            if (s[0] & 5120) {
                t = he(i[10]);
                let r;
                for (r = 0; r < t.length; r += 1) {
                    const l = $h(i, t, r);
                    n[r] ?
                        n[r].p(l, s)
                    :   ((n[r] = td(l)), n[r].c(), n[r].m(e.parentNode, e));
                }
                for (; r < n.length; r += 1) n[r].d(1);
                n.length = t.length;
            }
        },
        d(i) {
            i && x(e), He(n, i);
        },
    };
}
function td(o) {
    let e,
        t,
        n,
        i = o[43] + '',
        s,
        r,
        l,
        a,
        c,
        h,
        u;
    function p() {
        o[28].call(a, o[43]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('p')),
                (s = Y(i)),
                (r = v()),
                (l = f('div')),
                (a = f('input')),
                (c = v()),
                g(n, 'class', 'lect'),
                g(t, 'class', 'column text-right'),
                g(a, 'type', 'text'),
                g(a, 'class', 'pronunciation text-left'),
                g(l, 'class', 'column text-left'),
                g(e, 'class', 'row narrow');
        },
        m(b, m) {
            C(b, e, m),
                d(e, t),
                d(t, n),
                d(n, s),
                d(e, r),
                d(e, l),
                d(l, a),
                j(a, o[12][o[43]]),
                d(e, c),
                h || ((u = R(a, 'input', p)), (h = !0));
        },
        p(b, m) {
            (o = b),
                m[0] & 1024 && i !== (i = o[43] + '') && Ee(s, i),
                m[0] & 5120 && a.value !== o[12][o[43]] && j(a, o[12][o[43]]);
        },
        d(b) {
            b && x(e), (h = !1), u();
        },
    };
}
function nd(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent =
                    'Click the button below to add a variation for this phrase'),
                g(e, 'class', 'info');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function od(o) {
    let e, t, n, i, s;
    function r(u) {
        o[34](u, o[42]);
    }
    function l(u) {
        o[35](u, o[42]);
    }
    function a(u) {
        o[36](u, o[42]);
    }
    function c() {
        return o[37](o[42]);
    }
    let h = { lects: o[10] };
    return (
        o[9][o[42]].phrase !== void 0 && (h.phrase = o[9][o[42]].phrase),
        o[9][o[42]].pronunciations !== void 0 &&
            (h.pronunciations = o[9][o[42]].pronunciations),
        o[9][o[42]].description !== void 0 &&
            (h.description = o[9][o[42]].description),
        (e = new Rv({ props: h })),
        Un.push(() => _o(e, 'phrase', r)),
        Un.push(() => _o(e, 'pronunciations', l)),
        Un.push(() => _o(e, 'description', a)),
        e.$on('update', c),
        {
            c() {
                qt(e.$$.fragment);
            },
            m(u, p) {
                jt(e, u, p), (s = !0);
            },
            p(u, p) {
                o = u;
                const b = {};
                p[0] & 1024 && (b.lects = o[10]),
                    !t &&
                        p[0] & 512 &&
                        ((t = !0),
                        (b.phrase = o[9][o[42]].phrase),
                        ko(() => (t = !1))),
                    !n &&
                        p[0] & 512 &&
                        ((n = !0),
                        (b.pronunciations = o[9][o[42]].pronunciations),
                        ko(() => (n = !1))),
                    !i &&
                        p[0] & 512 &&
                        ((i = !0),
                        (b.description = o[9][o[42]].description),
                        ko(() => (i = !1))),
                    e.$set(b);
            },
            i(u) {
                s || (Ce(e.$$.fragment, u), (s = !0));
            },
            o(u) {
                Oe(e.$$.fragment, u), (s = !1);
            },
            d(u) {
                $t(e, u);
            },
        }
    );
}
function Uv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I,
        z,
        se,
        ze,
        Qe,
        ne,
        me,
        Te,
        we,
        pe,
        Se,
        ye,
        Ze,
        U,
        Q,
        ge,
        _e,
        Ie = he(Object.keys(o[4].Phrasebook)),
        Pe = [];
    for (let ie = 0; ie < Ie.length; ie += 1) Pe[ie] = Yh(qh(o, Ie, ie));
    let ve = null;
    Ie.length || (ve = Vh());
    let Me = !o[0] && Kh(),
        Je = !o[2] && Xh(),
        Ge = !o[1] && Zh(),
        et = o[4].UseLects && Jh(o);
    const Ue = [Fv, Dv],
        It = [];
    function ut(ie, Ae) {
        return (
            Ae[0] & 16 && ($ = null),
            $ == null && ($ = !!Object.keys(ie[4].Phrasebook).length),
            $ ? 0 : 1
        );
    }
    (K = ut(o, [-1, -1])), (W = It[K] = Ue[K](o));
    function Lt(ie, Ae) {
        return ie[4].UseLects ? zv : Hv;
    }
    let vt = Lt(o),
        qe = vt(o);
    function ce(ie) {
        o[30](ie);
    }
    function je(ie) {
        o[31](ie);
    }
    function Ne(ie) {
        o[32](ie);
    }
    let at = { index: 'hide' };
    o[8] !== void 0 && (at.definition = o[8]),
        o[11] !== void 0 && (at.tags = o[11]),
        o[10] !== void 0 && (at.lects = o[10]),
        (ae = new gf({ props: at })),
        Un.push(() => _o(ae, 'definition', ce)),
        Un.push(() => _o(ae, 'tags', je)),
        Un.push(() => _o(ae, 'lects', Ne));
    let At = he(o[9]),
        tt = [];
    for (let ie = 0; ie < At.length; ie += 1) tt[ie] = od(jh(o, At, ie));
    const kt = (ie) =>
        Oe(tt[ie], 1, 1, () => {
            tt[ie] = null;
        });
    let de = null;
    return (
        At.length || (de = nd()),
        {
            c() {
                (e = f('div')),
                    (t = f('div')),
                    (n = f('div')),
                    (i = f('p')),
                    (i.textContent = 'Categories'),
                    (s = v()),
                    (r = f('hr')),
                    (l = v()),
                    (a = f('div'));
                for (let ie = 0; ie < Pe.length; ie += 1) Pe[ie].c();
                ve && ve.c(),
                    (c = v()),
                    (h = f('div')),
                    (u = f('div')),
                    (p = f('div')),
                    Me && Me.c(),
                    (b = v()),
                    (m = f('input')),
                    (k = v()),
                    (y = f('div')),
                    Je && Je.c(),
                    (w = v()),
                    (E = f('input')),
                    (_ = v()),
                    (B = f('div')),
                    (O = f('div')),
                    Ge && Ge.c(),
                    (P = v()),
                    (H = f('input')),
                    (T = v()),
                    et && et.c(),
                    (S = v()),
                    (A = f('div')),
                    W.c(),
                    (G = v()),
                    (L = f('div')),
                    (D = f('div')),
                    (X = f('button')),
                    (te = v()),
                    (M = f('div')),
                    (N = f('div')),
                    (F = f('label')),
                    (F.textContent = 'Phrase'),
                    (V = v()),
                    (ue = f('input')),
                    (fe = v()),
                    qe.c(),
                    (J = v()),
                    qt(ae.$$.fragment),
                    (ze = v()),
                    (Qe = f('label')),
                    (ne = f('p')),
                    (ne.textContent = 'Category'),
                    (me = v()),
                    (Te = f('input')),
                    (we = v()),
                    (pe = f('button')),
                    (pe.textContent = 'Add Phrase'),
                    (Se = v()),
                    (ye = f('div'));
                for (let ie = 0; ie < tt.length; ie += 1) tt[ie].c();
                de && de.c(),
                    (Ze = v()),
                    (U = f('button')),
                    (U.textContent = '+ Variant'),
                    g(
                        i,
                        'title',
                        'This panel will fill with category names as you assign phrases to new ones.',
                    ),
                    g(a, 'class', 'column scrolled'),
                    Z(a, 'max-height', '90%'),
                    g(a, 'id', 'category-body'),
                    g(n, 'class', 'container column'),
                    Z(n, 'max-width', '18%'),
                    g(m, 'id', 'search-phrase'),
                    g(m, 'type', 'text'),
                    g(m, 'class', 'search'),
                    g(p, 'class', 'column search-container'),
                    g(E, 'id', 'search-tags'),
                    g(E, 'type', 'text'),
                    g(E, 'class', 'search'),
                    g(y, 'class', 'column search-container'),
                    g(u, 'class', 'row'),
                    g(H, 'id', 'search-description'),
                    g(H, 'type', 'text'),
                    g(H, 'class', 'search'),
                    g(O, 'class', 'column search-container'),
                    g(B, 'class', 'row'),
                    g(A, 'class', 'column scrolled'),
                    g(A, 'id', 'phrasebook-body'),
                    Z(A, 'max-height', '88%'),
                    g(h, 'class', 'container column'),
                    Z(h, 'overflow', 'hidden'),
                    g(t, 'class', 'row'),
                    Z(t, 'height', '58vh'),
                    g(X, 'class', 'collapser-h'),
                    g(D, 'class', 'row'),
                    Z(D, 'width', '100vh'),
                    g(F, 'for', 'phrase'),
                    g(
                        F,
                        'title',
                        'Write a new phrase in your language here. The pronunciation is updated the same as in the Lexicon tab.',
                    ),
                    g(ue, 'type', 'text'),
                    g(
                        ne,
                        'title',
                        'Use this field to assign this phrase to a category, or to create a new one with this phrase as its first member.',
                    ),
                    g(Te, 'type', 'text'),
                    g(pe, 'class', 'hover-shadow hover-highlight'),
                    g(N, 'class', 'column scrolled'),
                    Z(N, 'max-height', '100%'),
                    g(U, 'class', 'hover-shadow hover-highlight'),
                    g(
                        U,
                        'title',
                        'If there are multiple ways to say your phrase, you can add variant entries for it along with descriptions.',
                    ),
                    g(ye, 'class', 'column scrolled'),
                    Z(ye, 'max-height', '100%'),
                    g(ye, 'id', 'variants-body'),
                    g(M, 'class', 'row'),
                    Z(M, 'height', '92%'),
                    St(M, 'collapsed', o[7]),
                    g(L, 'class', 'container collapsible-row'),
                    Z(L, 'height', '34vh'),
                    g(e, 'class', 'tab-pane');
            },
            m(ie, Ae) {
                C(ie, e, Ae),
                    d(e, t),
                    d(t, n),
                    d(n, i),
                    d(n, s),
                    d(n, r),
                    d(n, l),
                    d(n, a);
                for (let Be = 0; Be < Pe.length; Be += 1)
                    Pe[Be] && Pe[Be].m(a, null);
                ve && ve.m(a, null),
                    d(t, c),
                    d(t, h),
                    d(h, u),
                    d(u, p),
                    Me && Me.m(p, null),
                    d(p, b),
                    d(p, m),
                    j(m, o[0]),
                    d(u, k),
                    d(u, y),
                    Je && Je.m(y, null),
                    d(y, w),
                    d(y, E),
                    j(E, o[2]),
                    d(h, _),
                    d(h, B),
                    d(B, O),
                    Ge && Ge.m(O, null),
                    d(O, P),
                    d(O, H),
                    j(H, o[1]),
                    d(B, T),
                    et && et.m(B, null),
                    d(h, S),
                    d(h, A),
                    It[K].m(A, null),
                    d(e, G),
                    d(e, L),
                    d(L, D),
                    d(D, X),
                    d(L, te),
                    d(L, M),
                    d(M, N),
                    d(N, F),
                    d(N, V),
                    d(N, ue),
                    j(ue, o[13]),
                    d(N, fe),
                    qe.m(N, null),
                    d(N, J),
                    jt(ae, N, null),
                    d(N, ze),
                    d(N, Qe),
                    d(Qe, ne),
                    d(Qe, me),
                    d(Qe, Te),
                    j(Te, o[14]),
                    d(N, we),
                    d(N, pe),
                    d(M, Se),
                    d(M, ye);
                for (let Be = 0; Be < tt.length; Be += 1)
                    tt[Be] && tt[Be].m(ye, null);
                de && de.m(ye, null),
                    d(ye, Ze),
                    d(ye, U),
                    (Q = !0),
                    ge ||
                        ((_e = [
                            ht(dt.call(null, i, { position: 'bottom' })),
                            R(m, 'input', o[20]),
                            R(E, 'input', o[21]),
                            R(H, 'input', o[22]),
                            R(X, 'click', o[25]),
                            ht(dt.call(null, F, { position: 'right' })),
                            R(ue, 'input', o[26]),
                            R(ue, 'input', o[27]),
                            ht(dt.call(null, ne, { position: 'right' })),
                            R(Te, 'input', o[33]),
                            R(pe, 'click', o[18]),
                            R(U, 'click', o[17]),
                            ht(
                                dt.call(null, U, {
                                    position: 'bottom',
                                    autoPosition: !0,
                                }),
                            ),
                        ]),
                        (ge = !0));
            },
            p(ie, Ae) {
                if (Ae[0] & 32816) {
                    Ie = he(Object.keys(ie[4].Phrasebook));
                    let it;
                    for (it = 0; it < Ie.length; it += 1) {
                        const un = qh(ie, Ie, it);
                        Pe[it] ?
                            Pe[it].p(un, Ae)
                        :   ((Pe[it] = Yh(un)), Pe[it].c(), Pe[it].m(a, null));
                    }
                    for (; it < Pe.length; it += 1) Pe[it].d(1);
                    (Pe.length = Ie.length),
                        !Ie.length && ve ? ve.p(ie, Ae)
                        : Ie.length ? ve && (ve.d(1), (ve = null))
                        : ((ve = Vh()), ve.c(), ve.m(a, null));
                }
                ie[0] ?
                    Me && (Me.d(1), (Me = null))
                :   Me || ((Me = Kh()), Me.c(), Me.m(p, b)),
                    Ae[0] & 1 && m.value !== ie[0] && j(m, ie[0]),
                    ie[2] ?
                        Je && (Je.d(1), (Je = null))
                    :   Je || ((Je = Xh()), Je.c(), Je.m(y, w)),
                    Ae[0] & 4 && E.value !== ie[2] && j(E, ie[2]),
                    ie[1] ?
                        Ge && (Ge.d(1), (Ge = null))
                    :   Ge || ((Ge = Zh()), Ge.c(), Ge.m(O, P)),
                    Ae[0] & 2 && H.value !== ie[1] && j(H, ie[1]),
                    ie[4].UseLects ?
                        et ? et.p(ie, Ae)
                        :   ((et = Jh(ie)), et.c(), et.m(B, null))
                    :   et && (et.d(1), (et = null));
                let Be = K;
                (K = ut(ie, Ae)),
                    K === Be ?
                        It[K].p(ie, Ae)
                    :   (Wt(),
                        Oe(It[Be], 1, 1, () => {
                            It[Be] = null;
                        }),
                        Gt(),
                        (W = It[K]),
                        W ? W.p(ie, Ae) : ((W = It[K] = Ue[K](ie)), W.c()),
                        Ce(W, 1),
                        W.m(A, null)),
                    Ae[0] & 8192 && ue.value !== ie[13] && j(ue, ie[13]),
                    vt === (vt = Lt(ie)) && qe ?
                        qe.p(ie, Ae)
                    :   (qe.d(1), (qe = vt(ie)), qe && (qe.c(), qe.m(N, J)));
                const Dt = {};
                if (
                    (!I &&
                        Ae[0] & 256 &&
                        ((I = !0), (Dt.definition = ie[8]), ko(() => (I = !1))),
                    !z &&
                        Ae[0] & 2048 &&
                        ((z = !0), (Dt.tags = ie[11]), ko(() => (z = !1))),
                    !se &&
                        Ae[0] & 1024 &&
                        ((se = !0), (Dt.lects = ie[10]), ko(() => (se = !1))),
                    ae.$set(Dt),
                    Ae[0] & 16384 && Te.value !== ie[14] && j(Te, ie[14]),
                    Ae[0] & 1536)
                ) {
                    At = he(ie[9]);
                    let it;
                    for (it = 0; it < At.length; it += 1) {
                        const un = jh(ie, At, it);
                        tt[it] ?
                            (tt[it].p(un, Ae), Ce(tt[it], 1))
                        :   ((tt[it] = od(un)),
                            tt[it].c(),
                            Ce(tt[it], 1),
                            tt[it].m(ye, Ze));
                    }
                    for (Wt(), it = At.length; it < tt.length; it += 1) kt(it);
                    Gt(),
                        !At.length && de ? de.p(ie, Ae)
                        : At.length ? de && (de.d(1), (de = null))
                        : ((de = nd()), de.c(), de.m(ye, Ze));
                }
                (!Q || Ae[0] & 128) && St(M, 'collapsed', ie[7]);
            },
            i(ie) {
                if (!Q) {
                    Ce(W), Ce(ae.$$.fragment, ie);
                    for (let Ae = 0; Ae < At.length; Ae += 1) Ce(tt[Ae]);
                    Q = !0;
                }
            },
            o(ie) {
                Oe(W), Oe(ae.$$.fragment, ie), (tt = tt.filter(Boolean));
                for (let Ae = 0; Ae < tt.length; Ae += 1) Oe(tt[Ae]);
                Q = !1;
            },
            d(ie) {
                ie && x(e),
                    He(Pe, ie),
                    ve && ve.d(),
                    Me && Me.d(),
                    Je && Je.d(),
                    Ge && Ge.d(),
                    et && et.d(),
                    It[K].d(),
                    qe.d(),
                    $t(ae),
                    He(tt, ie),
                    de && de.d(),
                    (ge = !1),
                    ot(_e);
            },
        }
    );
}
function jv(o, e, t) {
    let n, i, s, r, l;
    $e(o, q, (I) => t(4, (n = I))),
        $e(o, ri, (I) => t(5, (i = I))),
        $e(o, ei, (I) => t(12, (s = I))),
        $e(o, xs, (I) => t(13, (r = I))),
        $e(o, ms, (I) => t(14, (l = I)));
    const a = require('vex-js');
    ee(ms, (l = i), l);
    let c = '',
        h = '',
        u = '',
        p = '',
        b = [],
        m = !1,
        k = '',
        y = [],
        w = [...n.Lects],
        E = '';
    function _() {
        if (!i) return [];
        const I = n.Phrasebook[i],
            z = c.trim(),
            se = h.toLowerCase().trim(),
            ze = u.toLowerCase().trim();
        let Qe = [];
        for (let ne in I) {
            let me = '^' + ne.replaceAll(/\s+/g, '^') + '^';
            (!z || me.toLowerCase().includes(z)) &&
                (!se || I[ne].description.toLowerCase().includes(se)) &&
                (!ze || I[ne].tags.join(' ').toLowerCase().includes(ze)) &&
                (!p || I[ne].lects.includes(p)) &&
                Qe.push(ne);
            for (let Te in I[ne].variants) {
                let we = I[ne].variants[Te],
                    pe = '^' + Te.replaceAll(/\s+/g, '^') + '^';
                (!z || pe.toLowerCase().includes(z)) &&
                    (!se || we.description.toLowerCase().includes(se)) &&
                    Qe.push(ne);
            }
        }
        return [...new Set(Qe)];
    }
    function B(I) {
        ee(ri, (i = I), i), ee(ms, (l = I), l);
    }
    function O(I) {
        ee(xs, (r = I), r),
            ee(ms, (l = i), l),
            ee(
                ei,
                (s = (() => {
                    let z = {};
                    return (
                        Object.keys(n.Phrasebook[i][I].pronunciations).forEach(
                            (se) => {
                                z[se] =
                                    n.Phrasebook[i][I].pronunciations[se].ipa;
                            },
                        ),
                        z
                    );
                })()),
                s,
            ),
            t(8, (k = n.Phrasebook[i][I].description)),
            t(9, (y = []));
        for (let z in n.Phrasebook[i][I].variants)
            t(
                9,
                (y = [
                    ...y,
                    {
                        phrase: z,
                        pronunciations:
                            n.Phrasebook[i][I].variants[z].pronunciations,
                        description: n.Phrasebook[i][I].variants[z].description,
                    },
                ]),
            );
        delete n.Phrasebook[i][I],
            Object.keys(n.Phrasebook[i]).length === 0 &&
                (delete n.Phrasebook[i], ee(ri, (i = ''), i)),
            ee(q, (n = { ...n }), n);
    }
    function P() {
        t(
            9,
            (y = [
                ...y,
                {
                    phrase: '',
                    pronunciations: (() => {
                        let I = {};
                        return (
                            w.forEach(
                                (z) => (I[z] = { ipa: '', irregular: !1 }),
                            ),
                            I
                        );
                    })(),
                    description: '',
                },
            ]),
        );
    }
    function H() {
        let I = r.trim();
        if (!I) return;
        let z = k.trim();
        if (!z) return;
        let se = l.trim();
        if (!se) return;
        let ze = {};
        console.log(s, w),
            Object.keys(s)
                .filter((ne) => w.includes(ne))
                .forEach((ne) => {
                    console.log(ne),
                        (ze[ne] = {
                            ipa: s[ne].trim(),
                            irregular: s[ne].trim() !== en(I, ne),
                        });
                });
        function Qe() {
            n.Phrasebook.hasOwnProperty(se) ||
                ee(q, (n.Phrasebook[se] = {}), n),
                ee(
                    q,
                    (n.Phrasebook[se][I] = {
                        pronunciations: ze,
                        lects: Object.keys(ze),
                        tags: E.split(/\s+/g),
                        description: z,
                        variants: (() => {
                            let ne = {};
                            for (const me of y) {
                                const Te = me.phrase.trim();
                                if (!Te) continue;
                                const we = me.description.trim();
                                if (!we) continue;
                                let pe = {};
                                Object.keys(me.pronunciations).forEach((Se) => {
                                    pe[Se] = {
                                        ipa: me.pronunciations[Se].ipa.trim(),
                                        irregular:
                                            me.pronunciations[Se].ipa.trim() !==
                                            en(Te, Se),
                                    };
                                }),
                                    (ne[Te] = {
                                        pronunciations: pe,
                                        description: we,
                                    });
                            }
                            return ne;
                        })(),
                    }),
                    n,
                ),
                ee(q, (n = { ...n }), n),
                ee(xs, (r = ''), r),
                ee(
                    ei,
                    (s = (() => {
                        let ne = {};
                        return (
                            Object.keys(n.Pronunciations).forEach((me) => {
                                ne[me] = '';
                            }),
                            ne
                        );
                    })()),
                    s,
                ),
                t(8, (k = '')),
                t(9, (y = [])),
                ee(ri, (i = se), i);
        }
        n.Phrasebook.hasOwnProperty(se) && n.Phrasebook[se].hasOwnProperty(I) ?
            a.dialog.confirm({
                message:
                    'This phrase already exists in this category. Are you sure you want to overwrite it?',
                callback: (ne) => {
                    ne && Qe();
                },
            })
        :   Qe();
    }
    const T = (I) => B(I);
    function S() {
        (c = this.value), t(0, c);
    }
    function A() {
        (u = this.value), t(2, u);
    }
    function $() {
        (h = this.value), t(1, h);
    }
    function K() {
        (p = zn(this)), t(3, p);
    }
    const W = (I) => O(I),
        G = () => t(7, (m = !m));
    function L() {
        (r = this.value), xs.set(r);
    }
    const D = () => {
        w.forEach((I) => {
            ee(ei, (s[I] = en(r, I)), s);
        });
    };
    function X(I) {
        (s[I] = this.value), ei.set(s);
    }
    function te() {
        (s.General = this.value), ei.set(s);
    }
    function M(I) {
        (k = I), t(8, k);
    }
    function N(I) {
        (E = I), t(11, E);
    }
    function F(I) {
        (w = I), t(10, w);
    }
    function V() {
        (l = this.value), ms.set(l);
    }
    function ue(I, z) {
        o.$$.not_equal(y[z].phrase, I) && ((y[z].phrase = I), t(9, y));
    }
    function fe(I, z) {
        o.$$.not_equal(y[z].pronunciations, I) &&
            ((y[z].pronunciations = I), t(9, y));
    }
    function J(I, z) {
        o.$$.not_equal(y[z].description, I) &&
            ((y[z].description = I), t(9, y));
    }
    const ae = (I) => {
        w.forEach((z) => {
            t(9, (y[I].pronunciations[z].ipa = en(y[I].phrase, z)), y);
        });
    };
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 63 && (n.Phrasebook, t(6, (b = _())));
        }),
        [
            c,
            h,
            u,
            p,
            n,
            i,
            b,
            m,
            k,
            y,
            w,
            E,
            s,
            r,
            l,
            B,
            O,
            P,
            H,
            T,
            S,
            A,
            $,
            K,
            W,
            G,
            L,
            D,
            X,
            te,
            M,
            N,
            F,
            V,
            ue,
            fe,
            J,
            ae,
        ]
    );
}
class $v extends Rt {
    constructor(e) {
        super(), Nt(this, e, jv, Uv, Ct, {}, null, [-1, -1]);
    }
}
function id(o, e, t) {
    const n = o.slice();
    return (n[40] = e[t]), n;
}
function sd(o, e, t) {
    const n = o.slice();
    return (n[43] = e[t]), (n[45] = t), n;
}
function rd(o, e, t) {
    const n = o.slice();
    return (n[46] = e[t]), n;
}
function ld(o, e, t) {
    const n = o.slice();
    return (n[49] = e[t]), (n[50] = e), (n[45] = t), n;
}
function Wv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I;
    return {
        c() {
            (e = f('label')),
                (e.textContent = 'Onset Consonants'),
                (t = v()),
                (n = f('textarea')),
                (i = v()),
                (s = f('br')),
                (r = v()),
                (l = f('label')),
                (l.textContent = 'Medial Consonants'),
                (a = v()),
                (c = f('textarea')),
                (h = v()),
                (u = f('br')),
                (p = v()),
                (b = f('label')),
                (b.textContent = 'Coda Consonants'),
                (m = v()),
                (k = f('textarea')),
                (y = v()),
                (w = f('br')),
                (E = v()),
                (_ = f('label')),
                (_.textContent = 'Vowels'),
                (B = v()),
                (O = f('textarea')),
                (P = v()),
                (H = f('br')),
                (T = v()),
                (S = f('label')),
                (S.textContent = 'Illegal Combinations'),
                (A = v()),
                ($ = f('textarea')),
                (K = v()),
                (W = f('br')),
                (G = f('br')),
                (L = v()),
                (D = f('label')),
                (D.textContent = 'Trial Words'),
                (X = v()),
                (te = f('input')),
                (M = v()),
                (N = f('p')),
                (F = Y(o[10])),
                (V = v()),
                (ue = f('br')),
                (fe = v()),
                (J = f('button')),
                (J.textContent = 'Generate Words'),
                g(e, 'for', 'onsets'),
                g(
                    e,
                    'title',
                    'This field is for defining consonants and cluster that can occur word-initially.',
                ),
                g(n, 'id', 'onsets'),
                g(n, 'class', 'phonology'),
                g(l, 'for', 'medials'),
                g(
                    l,
                    'title',
                    'This field is for defining consonants and clusters that can occur word-medially.',
                ),
                g(c, 'id', 'medials'),
                g(c, 'class', 'phonology'),
                g(b, 'for', 'codas'),
                g(
                    b,
                    'title',
                    'This field is for defining consonants and clusters that can occur word-finally.',
                ),
                g(k, 'id', 'codas'),
                g(k, 'class', 'phonology'),
                g(_, 'for', 'vowels'),
                g(
                    _,
                    'title',
                    'This field is for defining vowels or sounds which can occur as a syllable’s nucleus.',
                ),
                g(O, 'id', 'vowels'),
                g(O, 'class', 'phonology'),
                g(S, 'for', 'illegals'),
                g(
                    S,
                    'title',
                    'This field is for defining combinations of characters that should never occur.',
                ),
                g($, 'id', 'illegals'),
                g($, 'class', 'phonology'),
                g(D, 'for', 'trial'),
                g(
                    D,
                    'title',
                    'This field allows you to begin typing a word while being shown possible completions for it.',
                ),
                g(te, 'type', 'text'),
                g(te, 'id', 'trial'),
                Z(N, 'font-family', 'Gentium'),
                g(J, 'class', 'hover-highlight hover-shadow');
        },
        m(z, se) {
            C(z, e, se),
                C(z, t, se),
                C(z, n, se),
                j(n, o[3].Phonotactics.General.Onsets),
                C(z, i, se),
                C(z, s, se),
                C(z, r, se),
                C(z, l, se),
                C(z, a, se),
                C(z, c, se),
                j(c, o[3].Phonotactics.General.Medials),
                C(z, h, se),
                C(z, u, se),
                C(z, p, se),
                C(z, b, se),
                C(z, m, se),
                C(z, k, se),
                j(k, o[3].Phonotactics.General.Codas),
                C(z, y, se),
                C(z, w, se),
                C(z, E, se),
                C(z, _, se),
                C(z, B, se),
                C(z, O, se),
                j(O, o[3].Phonotactics.General.Vowels),
                C(z, P, se),
                C(z, H, se),
                C(z, T, se),
                C(z, S, se),
                C(z, A, se),
                C(z, $, se),
                j($, o[3].Phonotactics.General.Illegals),
                C(z, K, se),
                C(z, W, se),
                C(z, G, se),
                C(z, L, se),
                C(z, D, se),
                C(z, X, se),
                C(z, te, se),
                j(te, o[0]),
                C(z, M, se),
                C(z, N, se),
                d(N, F),
                C(z, V, se),
                C(z, ue, se),
                C(z, fe, se),
                C(z, J, se),
                ae ||
                    ((I = [
                        ht(dt.call(null, e, { position: 'right' })),
                        R(n, 'input', o[28]),
                        ht(dt.call(null, l, { position: 'right' })),
                        R(c, 'input', o[29]),
                        ht(dt.call(null, b, { position: 'right' })),
                        R(k, 'input', o[30]),
                        ht(dt.call(null, _, { position: 'right' })),
                        R(O, 'input', o[31]),
                        ht(dt.call(null, S, { position: 'right' })),
                        R($, 'input', o[32]),
                        ht(dt.call(null, D, { position: 'right' })),
                        R(te, 'input', o[33]),
                        R(J, 'click', o[34]),
                    ]),
                    (ae = !0));
        },
        p(z, se) {
            se[0] & 8 && j(n, z[3].Phonotactics.General.Onsets),
                se[0] & 8 && j(c, z[3].Phonotactics.General.Medials),
                se[0] & 8 && j(k, z[3].Phonotactics.General.Codas),
                se[0] & 8 && j(O, z[3].Phonotactics.General.Vowels),
                se[0] & 8 && j($, z[3].Phonotactics.General.Illegals),
                se[0] & 1 && te.value !== z[0] && j(te, z[0]),
                se[0] & 1024 && Ee(F, z[10]);
        },
        d(z) {
            z &&
                (x(e),
                x(t),
                x(n),
                x(i),
                x(s),
                x(r),
                x(l),
                x(a),
                x(c),
                x(h),
                x(u),
                x(p),
                x(b),
                x(m),
                x(k),
                x(y),
                x(w),
                x(E),
                x(_),
                x(B),
                x(O),
                x(P),
                x(H),
                x(T),
                x(S),
                x(A),
                x($),
                x(K),
                x(W),
                x(G),
                x(L),
                x(D),
                x(X),
                x(te),
                x(M),
                x(N),
                x(V),
                x(ue),
                x(fe),
                x(J)),
                (ae = !1),
                ot(I);
        },
    };
}
function Gv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W = he(o[6]),
        G = [];
    for (let L = 0; L < W.length; L += 1) G[L] = ad(ld(o, W, L));
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('label')),
                (i = Y(`Categories
                            `)),
                (s = f('textarea')),
                (r = v()),
                (l = f('div')),
                (a = f('label')),
                (c = Y(`Syllables
                            `)),
                (h = f('textarea')),
                (u = v()),
                (p = f('div')),
                (b = f('div')),
                (m = f('label')),
                (k = Y(`Structures
                            `));
            for (let L = 0; L < G.length; L += 1) G[L].c();
            (y = v()),
                (w = f('button')),
                (w.textContent = 'Add Set'),
                (E = v()),
                (_ = f('div')),
                (B = f('label')),
                (O = Y(`Illegals
                            `)),
                (P = f('textarea')),
                (H = v()),
                (T = f('br')),
                (S = v()),
                (A = f('button')),
                (A.textContent = 'Generate Words'),
                g(s, 'class', 'phonology text-left'),
                g(s, 'rows', '8'),
                g(
                    n,
                    'title',
                    'This field is for defining categories of phonemes. See the Help tab for more information.',
                ),
                g(t, 'class', 'column'),
                g(h, 'class', 'phonology text-left'),
                g(h, 'rows', '8'),
                g(
                    a,
                    'title',
                    'This field is for defining syllable structures. See the Help tab for more information.',
                ),
                g(l, 'class', 'column'),
                g(e, 'class', 'row'),
                g(w, 'class', 'hover-highlight hover-shadow'),
                g(
                    m,
                    'title',
                    'This field is for defining word structures. See the Help tab for more information.',
                ),
                g(b, 'class', 'column'),
                g(P, 'class', 'phonology text-left'),
                g(P, 'rows', '4'),
                g(
                    B,
                    'title',
                    'This field is for defining illegal combinations in words. See the Help tab for more information.',
                ),
                g(_, 'class', 'column'),
                g(p, 'class', 'row'),
                g(A, 'class', 'hover-highlight hover-shadow');
        },
        m(L, D) {
            C(L, e, D),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                j(s, o[4]),
                d(e, r),
                d(e, l),
                d(l, a),
                d(a, c),
                d(a, h),
                j(h, o[5]),
                C(L, u, D),
                C(L, p, D),
                d(p, b),
                d(b, m),
                d(m, k);
            for (let X = 0; X < G.length; X += 1) G[X] && G[X].m(m, null);
            d(m, y),
                d(m, w),
                d(p, E),
                d(p, _),
                d(_, B),
                d(B, O),
                d(B, P),
                j(P, o[7]),
                C(L, H, D),
                C(L, T, D),
                C(L, S, D),
                C(L, A, D),
                $ ||
                    ((K = [
                        R(s, 'input', o[20]),
                        R(s, 'blur', o[12]),
                        ht(dt.call(null, n, { position: 'right' })),
                        R(h, 'input', o[21]),
                        R(h, 'blur', o[13]),
                        ht(dt.call(null, a, { position: 'left' })),
                        R(w, 'click', o[25]),
                        ht(dt.call(null, m, { position: 'right' })),
                        R(P, 'input', o[26]),
                        R(P, 'blur', o[15]),
                        ht(dt.call(null, B, { position: 'left' })),
                        R(A, 'click', o[27]),
                    ]),
                    ($ = !0));
        },
        p(L, D) {
            if (
                (D[0] & 16 && j(s, L[4]), D[0] & 32 && j(h, L[5]), D[0] & 16448)
            ) {
                W = he(L[6]);
                let X;
                for (X = 0; X < W.length; X += 1) {
                    const te = ld(L, W, X);
                    G[X] ?
                        G[X].p(te, D)
                    :   ((G[X] = ad(te)), G[X].c(), G[X].m(m, y));
                }
                for (; X < G.length; X += 1) G[X].d(1);
                G.length = W.length;
            }
            D[0] & 128 && j(P, L[7]);
        },
        d(L) {
            L && (x(e), x(u), x(p), x(H), x(T), x(S), x(A)),
                He(G, L),
                ($ = !1),
                ot(K);
        },
    };
}
function ad(o) {
    let e, t, n, i, s, r, l, a, c, h, u, p;
    function b() {
        o[22].call(i, o[50], o[45]);
    }
    function m() {
        return o[23](o[45]);
    }
    function k() {
        o[24].call(h, o[50], o[45]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('input')),
                (s = v()),
                (r = f('div')),
                (l = f('button')),
                (l.textContent = '-'),
                (a = v()),
                (c = f('div')),
                (h = f('textarea')),
                g(i, 'type', 'checkbox'),
                g(n, 'class', 'row'),
                g(l, 'class', 'hover-highlight hover-shadow'),
                g(r, 'class', 'row'),
                g(t, 'class', 'column narrow'),
                g(h, 'class', 'phonology text-left'),
                g(h, 'rows', '3'),
                g(c, 'class', 'column'),
                g(e, 'class', 'row');
        },
        m(y, w) {
            C(y, e, w),
                d(e, t),
                d(t, n),
                d(n, i),
                (i.checked = o[49].enabled),
                d(t, s),
                d(t, r),
                d(r, l),
                d(e, a),
                d(e, c),
                d(c, h),
                j(h, o[49].structures),
                u ||
                    ((p = [
                        R(i, 'change', b),
                        R(i, 'change', o[14]),
                        R(l, 'click', m),
                        R(h, 'input', k),
                        R(h, 'blur', o[14]),
                    ]),
                    (u = !0));
        },
        p(y, w) {
            (o = y),
                w[0] & 64 && (i.checked = o[49].enabled),
                w[0] & 64 && j(h, o[49].structures);
        },
        d(y) {
            y && x(e), (u = !1), ot(p);
        },
    };
}
function cd(o) {
    let e,
        t,
        n = o[46] + '',
        i;
    return {
        c() {
            (e = f('div')),
                (t = f('p')),
                (i = Y(n)),
                g(t, 'class', 'prelined'),
                Z(t, 'font-family', 'Gentium'),
                g(e, 'class', 'column');
        },
        m(s, r) {
            C(s, e, r), d(e, t), d(t, i);
        },
        p(s, r) {
            r[0] & 256 && n !== (n = s[46] + '') && Ee(i, n);
        },
        d(s) {
            s && x(e);
        },
    };
}
function hd(o) {
    let e,
        t,
        n = he(o[8].slice(o[45] * 3, o[45] * 3 + 3)),
        i = [];
    for (let s = 0; s < n.length; s += 1) i[s] = cd(rd(o, n, s));
    return {
        c() {
            e = f('div');
            for (let s = 0; s < i.length; s += 1) i[s].c();
            (t = v()), g(e, 'class', 'row');
        },
        m(s, r) {
            C(s, e, r);
            for (let l = 0; l < i.length; l += 1) i[l] && i[l].m(e, null);
            d(e, t);
        },
        p(s, r) {
            if (r[0] & 256) {
                n = he(s[8].slice(s[45] * 3, s[45] * 3 + 3));
                let l;
                for (l = 0; l < n.length; l += 1) {
                    const a = rd(s, n, l);
                    i[l] ?
                        i[l].p(a, r)
                    :   ((i[l] = cd(a)), i[l].c(), i[l].m(e, t));
                }
                for (; l < i.length; l += 1) i[l].d(1);
                i.length = n.length;
            }
        },
        d(s) {
            s && x(e), He(i, s);
        },
    };
}
function dd(o) {
    let e,
        t,
        n,
        i = he(o[3].Lects),
        s = [];
    for (let r = 0; r < i.length; r += 1) s[r] = ud(id(o, i, r));
    return {
        c() {
            e = f('select');
            for (let r = 0; r < s.length; r += 1) s[r].c();
            o[2] === void 0 && Pt(() => o[35].call(e));
        },
        m(r, l) {
            C(r, e, l);
            for (let a = 0; a < s.length; a += 1) s[a] && s[a].m(e, null);
            Bt(e, o[2], !0),
                t ||
                    ((n = [R(e, 'change', o[35]), R(e, 'change', o[17])]),
                    (t = !0));
        },
        p(r, l) {
            if (l[0] & 8) {
                i = he(r[3].Lects);
                let a;
                for (a = 0; a < i.length; a += 1) {
                    const c = id(r, i, a);
                    s[a] ?
                        s[a].p(c, l)
                    :   ((s[a] = ud(c)), s[a].c(), s[a].m(e, null));
                }
                for (; a < s.length; a += 1) s[a].d(1);
                s.length = i.length;
            }
            l[0] & 12 && Bt(e, r[2]);
        },
        d(r) {
            r && x(e), He(s, r), (t = !1), ot(n);
        },
    };
}
function ud(o) {
    let e,
        t = o[40] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[40]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 8 && t !== (t = s[40] + '') && Ee(n, t),
                r[0] & 8 &&
                    i !== (i = s[40]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function qv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W;
    function G(N, F) {
        return N[3].UseAdvancedPhonotactics ? Gv : Wv;
    }
    let L = G(o),
        D = L(o),
        X = he(Array(o[8].length / 3).fill(null)),
        te = [];
    for (let N = 0; N < X.length; N += 1) te[N] = hd(sd(o, X, N));
    let M = o[3].UseLects && dd(o);
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('label')),
                (s = f('input')),
                (r = Y(`
                Use Advanced Phonotactics`)),
                (l = v()),
                (a = f('br')),
                (c = f('br')),
                (h = v()),
                D.c(),
                (u = v());
            for (let N = 0; N < te.length; N += 1) te[N].c();
            (p = v()),
                (b = f('div')),
                (m = f('label')),
                (k = Y(`Pronunciations
                `)),
                M && M.c(),
                (y = v()),
                (w = f('textarea')),
                (_ = v()),
                (B = f('br')),
                (O = f('br')),
                (P = v()),
                (H = f('label')),
                (T = Y(`Rule Testing
                `)),
                (S = f('textarea')),
                (A = v()),
                ($ = f('textarea')),
                g(s, 'type', 'checkbox'),
                g(
                    i,
                    'title',
                    'Turn this on to show a type of word generator better suited for complex structures.',
                ),
                g(n, 'class', 'container column scrolled'),
                Z(n, 'height', '100%'),
                g(w, 'class', 'prelined'),
                g(w, 'rows', '24'),
                Z(w, 'text-align', 'left'),
                g(w, 'id', 'pronunciations-input'),
                (w.value = E = o[3].Pronunciations[o[2]]),
                g(
                    m,
                    'title',
                    'This field is for writing pronunciation rules to convert your romanization to phonetic notation. See the Help tab for more information.',
                ),
                g(S, 'class', 'prelined'),
                g(S, 'rows', '2'),
                g(
                    H,
                    'title',
                    'This field allows you to test that your rules are working as expected.',
                ),
                g($, 'class', 'pronunciation'),
                g($, 'rows', '2'),
                ($.readOnly = !0),
                g(b, 'class', 'container column scrolled'),
                Z(b, 'height', '100%'),
                g(t, 'class', 'row'),
                Z(t, 'height', '92vh'),
                g(e, 'class', 'tab-pane');
        },
        m(N, F) {
            C(N, e, F),
                d(e, t),
                d(t, n),
                d(n, i),
                d(i, s),
                (s.checked = o[3].UseAdvancedPhonotactics),
                d(i, r),
                d(n, l),
                d(n, a),
                d(n, c),
                d(n, h),
                D.m(n, null),
                d(n, u);
            for (let V = 0; V < te.length; V += 1) te[V] && te[V].m(n, null);
            d(t, p),
                d(t, b),
                d(b, m),
                d(m, k),
                M && M.m(m, null),
                d(m, y),
                d(m, w),
                d(b, _),
                d(b, B),
                d(b, O),
                d(b, P),
                d(b, H),
                d(H, T),
                d(H, S),
                j(S, o[1]),
                d(b, A),
                d(b, $),
                j($, o[9]),
                K ||
                    ((W = [
                        R(s, 'change', o[19]),
                        ht(dt.call(null, i, { position: 'right' })),
                        R(w, 'blur', o[36]),
                        ht(dt.call(null, m, { position: 'bottom' })),
                        R(S, 'input', o[37]),
                        ht(dt.call(null, H, { position: 'top' })),
                        R($, 'input', o[38]),
                    ]),
                    (K = !0));
        },
        p(N, F) {
            if (
                (F[0] & 8 && (s.checked = N[3].UseAdvancedPhonotactics),
                L === (L = G(N)) && D ?
                    D.p(N, F)
                :   (D.d(1), (D = L(N)), D && (D.c(), D.m(n, u))),
                F[0] & 256)
            ) {
                X = he(Array(N[8].length / 3).fill(null));
                let V;
                for (V = 0; V < X.length; V += 1) {
                    const ue = sd(N, X, V);
                    te[V] ?
                        te[V].p(ue, F)
                    :   ((te[V] = hd(ue)), te[V].c(), te[V].m(n, null));
                }
                for (; V < te.length; V += 1) te[V].d(1);
                te.length = X.length;
            }
            N[3].UseLects ?
                M ? M.p(N, F)
                :   ((M = dd(N)), M.c(), M.m(m, y))
            :   M && (M.d(1), (M = null)),
                F[0] & 12 &&
                    E !== (E = N[3].Pronunciations[N[2]]) &&
                    (w.value = E),
                F[0] & 2 && j(S, N[1]),
                F[0] & 512 && j($, N[9]);
        },
        i: Le,
        o: Le,
        d(N) {
            N && x(e), D.d(), He(te, N), M && M.d(), (K = !1), ot(W);
        },
    };
}
function Vv(o, e, t) {
    let n, i, s, r;
    $e(o, q, (I) => t(3, (s = I))), $e(o, Os, (I) => t(18, (r = I)));
    let l = '',
        a = '';
    function c(I) {
        const se = I.target.value.trim(),
            { [O]: ze, ...Qe } = s.Pronunciations;
        ee(q, (s.Pronunciations = { ...Qe, [O]: se }), s);
    }
    let h = '',
        u = '',
        p = [{ enabled: !0, structures: '' }],
        b = '';
    function m() {
        t(
            4,
            (h = Object.keys(s.AdvancedPhonotactics.Categories).map(
                (I) =>
                    `${I} :: ${s.AdvancedPhonotactics.Categories[I].join(' ')}`,
            ).join(`
`)),
        ),
            t(
                5,
                (u = s.AdvancedPhonotactics.Syllables.join(`
`)),
            ),
            t(6, (p = s.AdvancedPhonotactics.Constructs)),
            t(7, (b = s.AdvancedPhonotactics.Illegals.join(' ')));
    }
    function k() {
        ee(q, (s.AdvancedPhonotactics.Categories = {}), s),
            h
                .split(
                    `
`,
                )
                .forEach((I) => {
                    let z = I.split('::')[0].trim();
                    s.AdvancedPhonotactics.Categories[z] ||
                        ee(q, (s.AdvancedPhonotactics.Categories[z] = []), s),
                        I.split('::')[1]
                            .trim()
                            .split(/\s+/g)
                            .forEach((se) => {
                                s.AdvancedPhonotactics.Categories[z].push(se);
                            });
                });
    }
    function y() {
        ee(q, (s.AdvancedPhonotactics.Syllables = []), s),
            u
                .split(
                    `
`,
                )
                .forEach((I) => {
                    s.AdvancedPhonotactics.Syllables.push(I.trim());
                });
    }
    function w() {
        ee(q, (s.AdvancedPhonotactics.Constructs = []), s);
        for (let I of p)
            s.AdvancedPhonotactics.Constructs.push({
                enabled: I.enabled,
                structures: I.structures.trim(),
            });
    }
    function E() {
        ee(q, (s.AdvancedPhonotactics.Illegals = []), s),
            b.split(/\s+/g).forEach((I) => {
                s.AdvancedPhonotactics.Illegals.push(I.trim());
            });
    }
    function _(I = 1) {
        let z = '';
        const se = (we) => {
            for (let pe of s.AdvancedPhonotactics.Illegals)
                if (we.includes(pe) && pe !== '')
                    return I <= 20 ? _(I + 1) : '[ ∅ ]';
            return we;
        };
        if (
            s.AdvancedPhonotactics.Constructs.every(
                (we) => !we.enabled || we.structures.trim() === '',
            )
        ) {
            for (let we = 0; we < Math.floor(Math.random() * 4) + 1; we++) {
                let pe =
                    s.AdvancedPhonotactics.Syllables[
                        Math.floor(
                            Math.random() *
                                s.AdvancedPhonotactics.Syllables.length,
                        )
                    ];
                pe.includes('::') &&
                    (pe = pe.split('::')[1].trim().split(/\s+/g)[
                        Math.floor(
                            Math.random() *
                                pe.split('::')[1].trim().split(/\s+/g).length,
                        )
                    ]),
                    pe.split('').forEach((Se) => {
                        s.AdvancedPhonotactics.Categories[Se] ?
                            (z +=
                                s.AdvancedPhonotactics.Categories[Se][
                                    Math.floor(
                                        Math.random() *
                                            s.AdvancedPhonotactics.Categories[
                                                Se
                                            ].length,
                                    )
                                ])
                        :   (z += Se);
                    });
            }
            return se(z);
        }
        let ze = [];
        for (let we of s.AdvancedPhonotactics.Constructs)
            we.enabled && (ze = ze.concat(we.structures.split(/\s+/g)));
        let ne = ze[Math.floor(Math.random() * ze.length)].split(''),
            me = new Array(ne.length).fill([]);
        for (let we = 0; we < ne.length; we++) {
            let pe = ne[we];
            for (let Se = 0; Se < s.AdvancedPhonotactics.Syllables.length; Se++)
                s.AdvancedPhonotactics.Syllables[Se].replaceAll(
                    /\s+/g,
                    '',
                ).slice(0, 3) ===
                    pe + '::' &&
                    (me[we] = me[we].concat(
                        s.AdvancedPhonotactics.Syllables[Se].split('::')[1]
                            .trim()
                            .split(/\s+/g),
                    ));
            me[we].length === 0 && (me[we] = [pe]);
        }
        let Te = '';
        for (let we = 0; we < me.length; we++) {
            let pe = me[we][Math.floor(Math.random() * me[we].length)];
            Te += pe;
        }
        for (let we = 0; we < Te.length; we++) {
            let pe = Te[we];
            s.AdvancedPhonotactics.Categories[pe] ?
                (z +=
                    s.AdvancedPhonotactics.Categories[pe][
                        Math.floor(
                            Math.random() *
                                s.AdvancedPhonotactics.Categories[pe].length,
                        )
                    ])
            :   (z += pe);
        }
        return se(z);
    }
    function B() {
        document.getElementById('pronunciations-input').value =
            s.Pronunciations[O];
    }
    let O = s.Lects[0],
        P = Array(24).fill('');
    function H() {
        (s.UseAdvancedPhonotactics = this.checked), q.set(s);
    }
    function T() {
        (h = this.value), t(4, h);
    }
    function S() {
        (u = this.value), t(5, u);
    }
    function A(I, z) {
        (I[z].enabled = this.checked), t(6, p);
    }
    const $ = (I) => {
        p.length > 1 &&
            (p.splice(I, 1),
            p[0].structures + '',
            t(6, (p[0].structures = p[0].structures.trim()), p));
    };
    function K(I, z) {
        (I[z].structures = this.value), t(6, p);
    }
    const W = () => {
        p.push({ enabled: !0, structures: ' ' }),
            p[0].structures + '',
            t(6, (p[0].structures = p[0].structures.trim()), p);
    };
    function G() {
        (b = this.value), t(7, b);
    }
    const L = () =>
        t(
            8,
            (P = Array(24)
                .fill(null)
                .map((I) => _())),
        );
    function D() {
        (s.Phonotactics.General.Onsets = this.value), q.set(s);
    }
    function X() {
        (s.Phonotactics.General.Medials = this.value), q.set(s);
    }
    function te() {
        (s.Phonotactics.General.Codas = this.value), q.set(s);
    }
    function M() {
        (s.Phonotactics.General.Vowels = this.value), q.set(s);
    }
    function N() {
        (s.Phonotactics.General.Illegals = this.value), q.set(s);
    }
    function F() {
        (l = this.value), t(0, l);
    }
    const V = () =>
        t(
            8,
            (P = Array(24)
                .fill(null)
                .map((I) => Jm())),
        );
    function ue() {
        (O = zn(this)), t(2, O), t(3, s);
    }
    const fe = (I) => {
        c(I), Gl(O);
    };
    function J() {
        (a = this.value), t(1, a);
    }
    function ae() {
        (i = this.value), t(9, i), t(1, a), t(2, O), t(3, s);
    }
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 262144 && r && m(),
                o.$$.dirty[0] & 1 && t(10, (n = Zm(l))),
                o.$$.dirty[0] & 12 &&
                    (s.Lects,
                    t(2, (O = s.UseLects ? O : s.Lects[0])),
                    s.Lects.includes(O) || t(2, (O = s.Lects[0]))),
                o.$$.dirty[0] & 6 && t(9, (i = en(a, O)));
        }),
        [
            l,
            a,
            O,
            s,
            h,
            u,
            p,
            b,
            P,
            i,
            n,
            c,
            k,
            y,
            w,
            E,
            _,
            B,
            r,
            H,
            T,
            S,
            A,
            $,
            K,
            W,
            G,
            L,
            D,
            X,
            te,
            M,
            N,
            F,
            V,
            ue,
            fe,
            J,
            ae,
        ]
    );
}
class Yv extends Rt {
    constructor(e) {
        super(), Nt(this, e, Vv, qv, Ct, {}, null, [-1, -1]);
    }
}
function Kv(o) {
    let e;
    return {
        c() {
            (e = f('div')),
                (e.innerHTML =
                    '<div class="container row text-center" style="height: 92vh; overflow-y: auto;"><div class="column" style="font-family: Gentium" id="docs-tab"></div></div>'),
                g(e, 'class', 'tab-pane'),
                g(e, 'spellcheck', 'false');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        i: Le,
        o: Le,
        d(t) {
            t && x(e);
        },
    };
}
function Xv(o) {
    return zi(), [];
}
class Zv extends Rt {
    constructor(e) {
        super(), Nt(this, e, Xv, Kv, Ct, {});
    }
}
function pd(o, e, t) {
    const n = o.slice();
    return (n[16] = e[t]), n;
}
function fd(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a = he(o[5].Lects),
        c = [];
    for (let h = 0; h < a.length; h += 1) c[h] = gd(pd(o, a, h));
    return {
        c() {
            (e = f('br')),
                (t = v()),
                (n = f('label')),
                (i = Y(`Lect
                        `)),
                (s = f('select'));
            for (let h = 0; h < c.length; h += 1) c[h].c();
            o[4] === void 0 && Pt(() => o[11].call(s));
        },
        m(h, u) {
            C(h, e, u), C(h, t, u), C(h, n, u), d(n, i), d(n, s);
            for (let p = 0; p < c.length; p += 1) c[p] && c[p].m(s, null);
            Bt(s, o[4], !0), r || ((l = R(s, 'change', o[11])), (r = !0));
        },
        p(h, u) {
            if (u & 32) {
                a = he(h[5].Lects);
                let p;
                for (p = 0; p < a.length; p += 1) {
                    const b = pd(h, a, p);
                    c[p] ?
                        c[p].p(b, u)
                    :   ((c[p] = gd(b)), c[p].c(), c[p].m(s, null));
                }
                for (; p < c.length; p += 1) c[p].d(1);
                c.length = a.length;
            }
            u & 48 && Bt(s, h[4]);
        },
        d(h) {
            h && (x(e), x(t), x(n)), He(c, h), (r = !1), l();
        },
    };
}
function gd(o) {
    let e,
        t = o[16] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[16]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r & 32 && t !== (t = s[16] + '') && Ee(n, t),
                r & 32 &&
                    i !== (i = s[16]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Jv(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W = o[3] && o[5].UseLects && fd(o);
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('label')),
                (i = Y(`Sound Changes
            `)),
                (s = f('br')),
                (r = v()),
                (l = f('label')),
                (a = Y(`Base From Pronunciations
                    `)),
                (c = f('input')),
                (h = v()),
                W && W.c(),
                (u = v()),
                (p = f('textarea')),
                (b = v()),
                (m = f('label')),
                (k = Y(`Test Changes
            `)),
                (y = f('textarea')),
                (w = v()),
                (E = f('textarea')),
                (B = v()),
                (O = f('div')),
                (P = f('label')),
                (H = Y(`New Language Name
            `)),
                (T = f('input')),
                (S = v()),
                (A = f('button')),
                (A.textContent = 'Save File and Evolve Lexicon'),
                g(c, 'type', 'checkbox'),
                g(p, 'rows', '5'),
                g(p, 'class', 'text-left'),
                g(y, 'rows', '3'),
                g(E, 'rows', '3'),
                g(E, 'class', 'pronunciation'),
                (E.value = _ = o[9](o[1])),
                (E.readOnly = !0),
                g(t, 'class', 'column'),
                g(T, 'type', 'text'),
                g(A, 'class', 'hover-highlight hover-shadow'),
                g(O, 'class', 'column'),
                g(e, 'class', 'row narrow');
        },
        m(G, L) {
            C(G, e, L),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                d(n, l),
                d(l, a),
                d(l, c),
                (c.checked = o[3]),
                d(l, h),
                W && W.m(l, null),
                d(n, u),
                d(n, p),
                j(p, o[0]),
                d(t, b),
                d(t, m),
                d(m, k),
                d(m, y),
                j(y, o[1]),
                d(m, w),
                d(m, E),
                d(e, B),
                d(e, O),
                d(O, P),
                d(P, H),
                d(P, T),
                j(T, o[2]),
                d(O, S),
                d(O, A),
                $ ||
                    ((K = [
                        R(c, 'change', o[10]),
                        R(p, 'input', o[12]),
                        R(y, 'input', o[13]),
                        R(T, 'input', o[14]),
                        R(A, 'click', o[15]),
                    ]),
                    ($ = !0));
        },
        p(G, [L]) {
            L & 8 && (c.checked = G[3]),
                G[3] && G[5].UseLects ?
                    W ? W.p(G, L)
                    :   ((W = fd(G)), W.c(), W.m(l, null))
                :   W && (W.d(1), (W = null)),
                L & 1 && j(p, G[0]),
                L & 2 && j(y, G[1]),
                L & 2 && _ !== (_ = G[9](G[1])) && (E.value = _),
                L & 4 && T.value !== G[2] && j(T, G[2]);
        },
        i: Le,
        o: Le,
        d(G) {
            G && x(e), W && W.d(), ($ = !1), ot(K);
        },
    };
}
function Qv(o, e, t) {
    let n, i, s;
    $e(o, q, (_) => t(5, (n = _))),
        $e(o, Wl, (_) => t(6, (i = _))),
        $e(o, Tr, (_) => t(7, (s = _)));
    const r = require('vex-js');
    let l = '',
        a = '',
        c = '',
        h = !1,
        u = n.Lects[0];
    function p(_) {
        const B = di(l);
        return Hi(B.rules, _, B.categories);
    }
    function b() {
        (h = this.checked), t(3, h);
    }
    function m() {
        (u = zn(this)), t(4, u);
    }
    function k() {
        (l = this.value), t(0, l);
    }
    function y() {
        (a = this.value), t(1, a);
    }
    function w() {
        (c = this.value), t(2, c);
    }
    return [
        l,
        a,
        c,
        h,
        u,
        n,
        i,
        s,
        r,
        p,
        b,
        m,
        k,
        y,
        w,
        () => {
            if (c === n.Name) {
                r.dialog.alert('The new language must have a different name.');
                return;
            }
            pi(),
                window.setTimeout(() => {
                    const _ = structuredClone(i);
                    (_.Name = c),
                        (_.ShowEtymology = !0),
                        Object.keys(n.Lexicon).forEach((B) => {
                            let O = `${B}`;
                            if (h)
                                if (
                                    n.Lexicon[B].pronunciations.hasOwnProperty(
                                        u,
                                    )
                                )
                                    O = n.Lexicon[B].pronunciations[u].ipa;
                                else return;
                            const P = p(O);
                            (_.Lexicon[P] = structuredClone(n.Lexicon[B])),
                                (_.Lexicon[P].pronunciations = {
                                    General: { ipa: P, irregular: !1 },
                                }),
                                _.Lexicon[P].Senses.forEach((H) => {
                                    H.lects = ['General'];
                                }),
                                (_.Relatives[n.Name] = structuredClone(
                                    n.Lexicon,
                                )),
                                n.Etymologies[B] ?
                                    ((_.Etymologies[B] = n.Etymologies[B]),
                                    (_.Etymologies[B].source = n.Name),
                                    _.Etymologies[B].descendants.forEach(
                                        (H) => {
                                            H.source ===
                                                '<< THIS LANGUAGE >>' &&
                                                (H.source = n.Name);
                                        },
                                    ))
                                :   (_.Etymologies[B] = {
                                        descendants: [],
                                        source: n.Name,
                                    }),
                                (_.Etymologies[P] = {
                                    descendants: [],
                                    source: '<< THIS LANGUAGE >>',
                                }),
                                _.Etymologies[B].descendants.push({
                                    name: P,
                                    source: '<< THIS LANGUAGE >>',
                                });
                        }),
                        s.destroy(),
                        zi(),
                        ee(q, (n = _), n),
                        pi();
                }, 333);
        },
    ];
}
class ek extends Rt {
    constructor(e) {
        super(), Nt(this, e, Qv, Jv, Ct, {});
    }
}
const tk = require,
    xe = tk('crypto');
xe.checkPrime;
xe.checkPrimeSync;
xe.createCipheriv;
xe.createDecipheriv;
xe.createDiffieHellman;
xe.createDiffieHellmanGroup;
xe.createECDH;
xe.createHash;
xe.createHmac;
xe.createPrivateKey;
xe.createPublicKey;
xe.createSecretKey;
xe.createSign;
xe.createVerify;
xe.diffieHellman;
xe.generatePrime;
xe.generatePrimeSync;
xe.getCiphers;
xe.getCipherInfo;
xe.getCurves;
xe.getDiffieHellman;
xe.getHashes;
xe.hkdf;
xe.hkdfSync;
xe.pbkdf2;
xe.pbkdf2Sync;
xe.generateKeyPair;
xe.generateKeyPairSync;
xe.generateKey;
xe.generateKeySync;
xe.privateDecrypt;
xe.privateEncrypt;
xe.publicDecrypt;
xe.publicEncrypt;
xe.randomBytes;
xe.randomFill;
xe.randomFillSync;
xe.randomInt;
xe.randomUUID;
xe.scrypt;
xe.scryptSync;
xe.sign;
xe.setEngine;
xe.timingSafeEqual;
xe.getFips;
xe.setFips;
xe.verify;
xe.hash;
xe.Certificate;
xe.Cipher;
xe.Cipheriv;
xe.Decipher;
xe.Decipheriv;
xe.DiffieHellman;
xe.DiffieHellmanGroup;
xe.ECDH;
xe.Hash;
xe.Hmac;
xe.KeyObject;
xe.Sign;
xe.Verify;
xe.X509Certificate;
xe.secureHeapUsed;
xe.fips;
xe.constants;
xe.webcrypto;
xe.subtle;
xe.getRandomValues;
xe.prng;
xe.pseudoRandomBytes;
xe.rng;
const nk = xe.default || xe;
function ok(o) {
    o =
        o.trim() +
        ' -> salt, pewter, copper, tin, iron, lead, wolfram, quicksilver, and gold.';
    const e = nk.createHash('sha256');
    return e.update(o), e.digest('hex');
}
function Di(o, e) {
    return ok(o) === e;
}
function ik(o, e, t) {
    const n = o.slice();
    return (n[32] = e[t]), n;
}
function md(o, e, t) {
    const n = o.slice();
    return (n[35] = e[t]), n;
}
function bd(o, e, t) {
    const n = o.slice();
    return (n[38] = e[t]), n;
}
function sk(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l = Object.keys(o[3].Lexicon).length + '',
        a,
        c,
        h,
        u,
        p,
        b =
            Math.round(
                100 *
                    (Object.keys(o[3].Lexicon).join('').length /
                        Object.keys(o[3].Lexicon).length),
            ) /
                100 +
            '',
        m,
        k,
        y,
        w,
        E,
        _,
        B = Object.keys(o[3].Lexicon).reduce(Cd) + '',
        O,
        P,
        H,
        T,
        S,
        A = Object.keys(o[3].Lexicon).reduce(Ed) + '',
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I,
        z,
        se,
        ze,
        Qe,
        ne = he(xd(Object.keys(o[3].Lexicon).join(''))),
        me = [];
    for (let pe = 0; pe < ne.length; pe += 1) me[pe] = wd(bd(o, ne, pe));
    let Te = he(o[5]().filter(Td).map(o[10]).sort(Sd)),
        we = [];
    for (let pe = 0; pe < Te.length; pe += 1) we[pe] = yd(md(o, Te, pe));
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('p')),
                (i.textContent = 'Lexicon entries:'),
                (s = v()),
                (r = f('p')),
                (a = Y(l)),
                (c = v()),
                (h = f('p')),
                (h.textContent = 'Average word length:'),
                (u = v()),
                (p = f('p')),
                (m = Y(b)),
                (k = Y(`
                                characters`)),
                (y = v()),
                (w = f('p')),
                (w.textContent = 'Longest Word:'),
                (E = v()),
                (_ = f('p')),
                (O = Y(B)),
                (P = v()),
                (H = f('p')),
                (H.textContent = 'Shortest Word:'),
                (T = v()),
                (S = f('p')),
                ($ = Y(A)),
                (K = v()),
                (W = f('p')),
                (G = f('p')),
                (L = v()),
                (D = f('p')),
                (D.textContent = 'Character'),
                (X = f('p')),
                (X.textContent = 'Occurrences'),
                (te = v());
            for (let pe = 0; pe < me.length; pe += 1) me[pe].c();
            (M = v()),
                (N = f('div')),
                (F = f('div')),
                (V = f('p')),
                (V.textContent = 'Number of tags:'),
                (ue = v()),
                (fe = f('p')),
                (fe.textContent = `${o[5]().length}`),
                (J = v()),
                (ae = f('p')),
                (I = f('p')),
                (z = v()),
                (se = f('p')),
                (se.textContent = 'Tag Name'),
                (ze = f('p')),
                (ze.textContent = 'Occurrences'),
                (Qe = v());
            for (let pe = 0; pe < we.length; pe += 1) we[pe].c();
            g(i, 'class', 'svelte-4ishr0'),
                g(r, 'class', 'svelte-4ishr0'),
                g(h, 'class', 'svelte-4ishr0'),
                g(p, 'class', 'svelte-4ishr0'),
                g(w, 'class', 'svelte-4ishr0'),
                Z(_, 'font-family', 'Gentium'),
                g(_, 'class', 'svelte-4ishr0'),
                g(H, 'class', 'svelte-4ishr0'),
                Z(S, 'font-family', 'Gentium'),
                g(S, 'class', 'svelte-4ishr0'),
                g(W, 'class', 'svelte-4ishr0'),
                g(G, 'class', 'svelte-4ishr0'),
                g(D, 'class', 'svelte-4ishr0'),
                g(X, 'class', 'svelte-4ishr0'),
                g(n, 'class', 'grid-container svelte-4ishr0'),
                g(t, 'class', 'column'),
                g(V, 'class', 'svelte-4ishr0'),
                g(fe, 'class', 'svelte-4ishr0'),
                g(ae, 'class', 'svelte-4ishr0'),
                g(I, 'class', 'svelte-4ishr0'),
                g(se, 'class', 'svelte-4ishr0'),
                g(ze, 'class', 'svelte-4ishr0'),
                g(F, 'class', 'grid-container svelte-4ishr0'),
                g(N, 'class', 'column'),
                g(e, 'class', 'row'),
                Z(e, 'width', '80%');
        },
        m(pe, Se) {
            C(pe, e, Se),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                d(r, a),
                d(n, c),
                d(n, h),
                d(n, u),
                d(n, p),
                d(p, m),
                d(p, k),
                d(n, y),
                d(n, w),
                d(n, E),
                d(n, _),
                d(_, O),
                d(n, P),
                d(n, H),
                d(n, T),
                d(n, S),
                d(S, $),
                d(n, K),
                d(n, W),
                d(n, G),
                d(n, L),
                d(n, D),
                d(n, X),
                d(n, te);
            for (let ye = 0; ye < me.length; ye += 1)
                me[ye] && me[ye].m(n, null);
            d(e, M),
                d(e, N),
                d(N, F),
                d(F, V),
                d(F, ue),
                d(F, fe),
                d(F, J),
                d(F, ae),
                d(F, I),
                d(F, z),
                d(F, se),
                d(F, ze),
                d(F, Qe);
            for (let ye = 0; ye < we.length; ye += 1)
                we[ye] && we[ye].m(F, null);
        },
        p(pe, Se) {
            if (
                (Se[0] & 8 &&
                    l !== (l = Object.keys(pe[3].Lexicon).length + '') &&
                    Ee(a, l),
                Se[0] & 8 &&
                    b !==
                        (b =
                            Math.round(
                                100 *
                                    (Object.keys(pe[3].Lexicon).join('')
                                        .length /
                                        Object.keys(pe[3].Lexicon).length),
                            ) /
                                100 +
                            '') &&
                    Ee(m, b),
                Se[0] & 8 &&
                    B !== (B = Object.keys(pe[3].Lexicon).reduce(Cd) + '') &&
                    Ee(O, B),
                Se[0] & 8 &&
                    A !== (A = Object.keys(pe[3].Lexicon).reduce(Ed) + '') &&
                    Ee($, A),
                Se[0] & 8)
            ) {
                ne = he(xd(Object.keys(pe[3].Lexicon).join('')));
                let ye;
                for (ye = 0; ye < ne.length; ye += 1) {
                    const Ze = bd(pe, ne, ye);
                    me[ye] ?
                        me[ye].p(Ze, Se)
                    :   ((me[ye] = wd(Ze)), me[ye].c(), me[ye].m(n, null));
                }
                for (; ye < me.length; ye += 1) me[ye].d(1);
                me.length = ne.length;
            }
            if (Se[0] & 40) {
                Te = he(pe[5]().filter(Td).map(pe[10]).sort(Sd));
                let ye;
                for (ye = 0; ye < Te.length; ye += 1) {
                    const Ze = md(pe, Te, ye);
                    we[ye] ?
                        we[ye].p(Ze, Se)
                    :   ((we[ye] = yd(Ze)), we[ye].c(), we[ye].m(F, null));
                }
                for (; ye < we.length; ye += 1) we[ye].d(1);
                we.length = Te.length;
            }
        },
        d(pe) {
            pe && x(e), He(me, pe), He(we, pe);
        },
    };
}
function rk(o) {
    let e;
    return {
        c() {
            (e = f('p')),
                (e.textContent =
                    'The lexicon is empty. No statistics to report.');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function wd(o) {
    let e,
        t = o[38][0] + '',
        n,
        i,
        s,
        r = o[38][1] + '',
        l;
    return {
        c() {
            (e = f('p')),
                (n = Y(t)),
                (i = v()),
                (s = f('p')),
                (l = Y(r)),
                Z(e, 'font-family', 'Gentium'),
                g(e, 'class', 'svelte-4ishr0'),
                g(s, 'class', 'svelte-4ishr0');
        },
        m(a, c) {
            C(a, e, c), d(e, n), C(a, i, c), C(a, s, c), d(s, l);
        },
        p(a, c) {
            c[0] & 8 && t !== (t = a[38][0] + '') && Ee(n, t),
                c[0] & 8 && r !== (r = a[38][1] + '') && Ee(l, r);
        },
        d(a) {
            a && (x(e), x(i), x(s));
        },
    };
}
function yd(o) {
    let e,
        t = o[35].tag + '',
        n,
        i,
        s,
        r = o[35].count + '',
        l;
    return {
        c() {
            (e = f('p')),
                (n = Y(t)),
                (i = v()),
                (s = f('p')),
                (l = Y(r)),
                Z(e, 'font-variant', 'small-caps'),
                g(e, 'class', 'svelte-4ishr0'),
                g(s, 'class', 'svelte-4ishr0');
        },
        m(a, c) {
            C(a, e, c), d(e, n), C(a, i, c), C(a, s, c), d(s, l);
        },
        p(a, c) {
            c[0] & 8 && t !== (t = a[35].tag + '') && Ee(n, t),
                c[0] & 8 && r !== (r = a[35].count + '') && Ee(l, r);
        },
        d(a) {
            a && (x(e), x(i), x(s));
        },
    };
}
function lk(o) {
    let e;
    return {
        c() {
            (e = f('div')), g(e, 'class', 'planet ' + o[32] + ' svelte-4ishr0');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function vd(o) {
    let e, t, n;
    return {
        c() {
            (e = f('input')), g(e, 'type', 'number');
        },
        m(i, s) {
            C(i, e, s),
                j(e, o[0].pronunciations),
                t || ((n = R(e, 'input', o[14])), (t = !0));
        },
        p(i, s) {
            s[0] & 1 &&
                Do(e.value) !== i[0].pronunciations &&
                j(e, i[0].pronunciations);
        },
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function kd(o) {
    let e, t, n;
    return {
        c() {
            (e = f('input')), g(e, 'type', 'number');
        },
        m(i, s) {
            C(i, e, s),
                j(e, o[0].tags),
                t || ((n = R(e, 'input', o[17])), (t = !0));
        },
        p(i, s) {
            s[0] & 1 && Do(e.value) !== i[0].tags && j(e, i[0].tags);
        },
        d(i) {
            i && x(e), (t = !1), n();
        },
    };
}
function ak(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I,
        z,
        se,
        ze,
        Qe,
        ne,
        me,
        Te,
        we = o[3].SaveLocation + '',
        pe,
        Se,
        ye,
        Ze,
        U,
        Q,
        ge,
        _e,
        Ie,
        Pe,
        ve,
        Me,
        Je,
        Ge,
        et,
        Ue,
        It,
        ut,
        Lt,
        vt,
        qe,
        ce,
        je,
        Ne,
        at,
        At,
        tt,
        kt,
        de,
        ie,
        Ae,
        Be,
        Dt,
        it,
        un,
        Eo,
        To,
        Uo,
        So,
        qi,
        Vi,
        Yi,
        gi,
        mi,
        jo,
        kn,
        $o,
        nn,
        Ki,
        Gn,
        Xi,
        An,
        qn,
        Wo,
        co,
        bi,
        Zi,
        Go,
        qo,
        Ji,
        Vn,
        Qi,
        Bo,
        Yn,
        es,
        ho,
        Kn,
        ts,
        On,
        ns,
        Xn,
        Vo,
        Io,
        uo,
        os,
        is,
        wi,
        ss,
        Mn,
        rs,
        _n,
        Zn,
        ls,
        Lo,
        as,
        cs,
        Yo,
        Jn,
        Qn,
        hs;
    function ds(Re, Ot) {
        return (
            Ot[0] & 8 && (y = null),
            y == null && (y = Object.keys(Re[3].Lexicon).length === 0),
            y ? rk : sk
        );
    }
    let Ko = ds(o, [-1, -1]),
        xn = Ko(o),
        po = he([
            'mercury',
            'venus',
            'earth',
            'mars',
            'jupiter',
            'saturn',
            'uranus',
            'neptune',
            'pluto',
        ]),
        Ao = [];
    for (let Re = 0; Re < 9; Re += 1) Ao[Re] = lk(ik(o, po, Re));
    It = new ek({});
    let Ht = o[0].pronunciations_bool && vd(o),
        Kt = o[0].tags_bool && kd(o);
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('p')),
                (i.textContent = 'Document'),
                (s = v()),
                (r = f('label')),
                (l = Y('Name')),
                (c = v()),
                (h = f('input')),
                (u = v()),
                (p = f('br')),
                (b = v()),
                (m = f('p')),
                (m.textContent = 'File Statistics'),
                (k = v()),
                xn.c(),
                (w = v()),
                (E = f('br')),
                (_ = v()),
                (B = f('div')),
                (O = f('div')),
                (P = f('button')),
                (P.textContent = 'Save…'),
                (H = v()),
                (T = f('button')),
                (T.textContent = 'Open…'),
                (S = v()),
                (A = f('p')),
                (A.textContent =
                    'Save your lexicon or open a previously saved one.'),
                ($ = v()),
                (K = f('div')),
                (W = f('div')),
                (G = f('div')),
                (L = v());
            for (let Re = 0; Re < 9; Re += 1) Ao[Re].c();
            (D = v()),
                (X = f('p')),
                (te = Y(o[2])),
                (M = v()),
                (N = f('div')),
                (F = f('button')),
                (F.textContent = 'Export…'),
                (V = v()),
                (ue = f('button')),
                (ue.textContent = 'Import…'),
                (fe = v()),
                (J = f('p')),
                (J.textContent =
                    'Export and import your own copies of the lexicon file.'),
                (ae = v()),
                (I = f('div')),
                (z = f('label')),
                (z.textContent = 'Secondary Save Locations'),
                (se = v()),
                (ze = f('button')),
                (ze.textContent = 'Choose Location…'),
                (Qe = v()),
                (ne = f('p')),
                (me = Y('Selected location: ')),
                (Te = f('u')),
                (pe = Y(we)),
                (Se = f('u')),
                (ye = v()),
                (Ze = f('br')),
                (U = v()),
                (Q = f('p')),
                (Q.textContent = 'Lexicon Header Tags'),
                (ge = v()),
                (_e = f('div')),
                (Ie = f('textarea')),
                (Pe = v()),
                (ve = f('p')),
                (ve.textContent =
                    'Entries with these tags will be sorted separately at the top of the lexicon.'),
                (Me = v()),
                (Je = f('br')),
                (Ge = v()),
                (et = f('p')),
                (et.textContent = 'Evolve Language'),
                (Ue = v()),
                qt(It.$$.fragment),
                (ut = v()),
                (Lt = f('br')),
                (vt = v()),
                (qe = f('p')),
                (qe.textContent = 'Export Lexicon'),
                (ce = v()),
                (je = f('p')),
                (je.textContent = 'HTML'),
                (Ne = v()),
                (at = f('div')),
                (At = f('div')),
                (tt = f('button')),
                (tt.textContent = 'Lexicon Only'),
                (kt = v()),
                (de = f('div')),
                (ie = f('button')),
                (ie.textContent = 'Lexicon & Docs'),
                (Ae = v()),
                (Be = f('div')),
                (Dt = f('button')),
                (Dt.textContent = 'Documentation Only'),
                (it = v()),
                (un = f('button')),
                (un.textContent = 'Text File'),
                (Eo = v()),
                (To = f('button')),
                (To.textContent = 'CSV'),
                (Uo = v()),
                (So = f('button')),
                (So.textContent = 'JSON'),
                (qi = v()),
                (Vi = f('br')),
                (Yi = v()),
                (gi = f('p')),
                (gi.textContent = 'Import Lexicon from CSV'),
                (mi = v()),
                (jo = f('div')),
                (kn = f('div')),
                ($o = f('div')),
                (nn = f('label')),
                (Ki = Y(`Words Column
                            `)),
                (Gn = f('input')),
                (Xi = v()),
                (An = f('div')),
                (qn = f('label')),
                (Wo = Y(`Pronunciations Column
                            `)),
                (co = f('input')),
                (bi = v()),
                Ht && Ht.c(),
                (Zi = v()),
                (Go = f('div')),
                (qo = f('label')),
                (Ji = Y(`Definitions Column
                            `)),
                (Vn = f('input')),
                (Qi = v()),
                (Bo = f('div')),
                (Yn = f('label')),
                (es = Y(`Tags Column
                            `)),
                (ho = f('input')),
                (Kn = v()),
                Kt && Kt.c(),
                (ts = v()),
                (On = f('label')),
                (On.textContent = 'First Row Is Column Labels'),
                (ns = v()),
                (Xn = f('input')),
                (Vo = v()),
                (Io = f('button')),
                (Io.textContent = 'Import'),
                (uo = v()),
                (os = f('br')),
                (is = v()),
                (wi = f('p')),
                (wi.textContent = 'Import Lexicon from Plain Text'),
                (ss = v()),
                (Mn = f('p')),
                (Mn.textContent =
                    'Check the Help tab to read about the plain text format Lexicanter can convert into lexicon entries.'),
                (rs = v()),
                (_n = f('div')),
                (Zn = f('textarea')),
                (ls = v()),
                (Lo = f('button')),
                (Lo.textContent = 'Import'),
                (as = v()),
                (cs = f('br')),
                (Yo = f('br')),
                g(r, 'for', 'file-name'),
                g(
                    r,
                    'title',
                    (a = `Your file will be saved as: ${o[3].Name}.lexc`),
                ),
                g(h, 'type', 'text'),
                g(h, 'id', 'file-name'),
                g(P, 'class', 'hover-highlight hover-shadow'),
                g(T, 'class', 'hover-highlight hover-shadow'),
                g(A, 'class', 'info'),
                g(O, 'class', 'column'),
                g(G, 'class', 'sun'),
                g(W, 'class', 'milkyWay'),
                g(K, 'class', 'column'),
                g(F, 'class', 'hover-highlight hover-shadow'),
                g(
                    F,
                    'title',
                    'Allows you to save your file to a custom location.',
                ),
                g(ue, 'class', 'hover-highlight hover-shadow'),
                g(
                    ue,
                    'title',
                    'Makes it easier to import files from a custom location.',
                ),
                g(J, 'class', 'info'),
                g(N, 'class', 'column'),
                g(B, 'class', 'narrow row'),
                g(z, 'for', 'save-locations'),
                g(ze, 'id', 'save-locations'),
                g(ze, 'class', 'hover-highlight hover-shadow'),
                g(I, 'class', 'narrow'),
                g(
                    Q,
                    'title',
                    'Here you can define Header Tags. Words in the lexicon with these tags will be sorted above the rest.',
                ),
                g(ve, 'class', 'info'),
                g(_e, 'class', 'narrow'),
                g(
                    et,
                    'title',
                    'This feature allows you to apply sound change rules across your lexicon, and then save the result as a new language file.',
                ),
                g(tt, 'class', 'hover-highlight hover-shadow'),
                g(At, 'class', 'column'),
                g(ie, 'class', 'hover-highlight hover-shadow'),
                g(de, 'class', 'column'),
                g(Dt, 'class', 'hover-highlight hover-shadow'),
                g(Be, 'class', 'column'),
                g(at, 'class', 'row narrow'),
                g(un, 'class', 'hover-highlight hover-shadow'),
                g(To, 'class', 'hover-highlight hover-shadow'),
                g(So, 'class', 'hover-highlight hover-shadow'),
                g(Gn, 'type', 'number'),
                g($o, 'class', 'column'),
                g(co, 'type', 'checkbox'),
                g(An, 'class', 'column'),
                g(Vn, 'type', 'number'),
                g(Go, 'class', 'column'),
                g(ho, 'type', 'checkbox'),
                g(Bo, 'class', 'column'),
                g(kn, 'class', 'row'),
                g(jo, 'class', 'narrow'),
                g(On, 'for', 'row-one-is-labels'),
                g(Xn, 'type', 'checkbox'),
                g(Xn, 'id', 'row-one-is-labels'),
                g(Io, 'class', 'hover-highlight hover-shadow'),
                g(Mn, 'class', 'info'),
                g(Zn, 'class', 'text-left'),
                g(Zn, 'rows', '6'),
                g(Lo, 'class', 'hover-highlight hover-shadow'),
                g(_n, 'class', 'narrow'),
                g(n, 'class', 'column container'),
                Z(n, 'overflow-y', 'auto'),
                g(t, 'class', 'row'),
                Z(t, 'height', '95vh'),
                g(e, 'class', 'tab-pane');
        },
        m(Re, Ot) {
            C(Re, e, Ot),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                d(r, l),
                d(n, c),
                d(n, h),
                j(h, o[3].Name),
                d(n, u),
                d(n, p),
                d(n, b),
                d(n, m),
                d(n, k),
                xn.m(n, null),
                d(n, w),
                d(n, E),
                d(n, _),
                d(n, B),
                d(B, O),
                d(O, P),
                d(O, H),
                d(O, T),
                d(O, S),
                d(O, A),
                d(B, $),
                d(B, K),
                d(K, W),
                d(W, G),
                d(W, L);
            for (let Xo = 0; Xo < 9; Xo += 1) Ao[Xo] && Ao[Xo].m(W, null);
            d(K, D),
                d(K, X),
                d(X, te),
                d(B, M),
                d(B, N),
                d(N, F),
                d(N, V),
                d(N, ue),
                d(N, fe),
                d(N, J),
                d(n, ae),
                d(n, I),
                d(I, z),
                d(I, se),
                d(I, ze),
                d(I, Qe),
                d(I, ne),
                d(ne, me),
                d(ne, Te),
                d(Te, pe),
                d(Te, Se),
                d(n, ye),
                d(n, Ze),
                d(n, U),
                d(n, Q),
                d(n, ge),
                d(n, _e),
                d(_e, Ie),
                j(Ie, o[3].HeaderTags),
                d(_e, Pe),
                d(_e, ve),
                d(n, Me),
                d(n, Je),
                d(n, Ge),
                d(n, et),
                d(n, Ue),
                jt(It, n, null),
                d(n, ut),
                d(n, Lt),
                d(n, vt),
                d(n, qe),
                d(n, ce),
                d(n, je),
                d(n, Ne),
                d(n, at),
                d(at, At),
                d(At, tt),
                d(at, kt),
                d(at, de),
                d(de, ie),
                d(at, Ae),
                d(at, Be),
                d(Be, Dt),
                d(n, it),
                d(n, un),
                d(n, Eo),
                d(n, To),
                d(n, Uo),
                d(n, So),
                d(n, qi),
                d(n, Vi),
                d(n, Yi),
                d(n, gi),
                d(n, mi),
                d(n, jo),
                d(jo, kn),
                d(kn, $o),
                d($o, nn),
                d(nn, Ki),
                d(nn, Gn),
                j(Gn, o[0].words),
                d(kn, Xi),
                d(kn, An),
                d(An, qn),
                d(qn, Wo),
                d(qn, co),
                j(co, o[0].pronunciations_bool),
                d(qn, bi),
                Ht && Ht.m(qn, null),
                d(kn, Zi),
                d(kn, Go),
                d(Go, qo),
                d(qo, Ji),
                d(qo, Vn),
                j(Vn, o[0].definitions),
                d(kn, Qi),
                d(kn, Bo),
                d(Bo, Yn),
                d(Yn, es),
                d(Yn, ho),
                j(ho, o[0].tags_bool),
                d(Yn, Kn),
                Kt && Kt.m(Yn, null),
                d(n, ts),
                d(n, On),
                d(n, ns),
                d(n, Xn),
                (Xn.checked = o[0].headers),
                d(n, Vo),
                d(n, Io),
                d(n, uo),
                d(n, os),
                d(n, is),
                d(n, wi),
                d(n, ss),
                d(n, Mn),
                d(n, rs),
                d(n, _n),
                d(_n, Zn),
                j(Zn, o[1]),
                d(_n, ls),
                d(_n, Lo),
                d(n, as),
                d(n, cs),
                d(n, Yo),
                (Jn = !0),
                Qn ||
                    ((hs = [
                        ht(dt.call(null, r, { position: 'right' })),
                        R(h, 'input', o[9]),
                        R(P, 'click', pi),
                        R(T, 'click', o[6]),
                        R(F, 'click', Qo.lexc),
                        ht(dt.call(null, F, { position: 'left' })),
                        R(ue, 'click', o[7]),
                        ht(dt.call(null, ue, { position: 'left' })),
                        R(ze, 'click', o[4]),
                        ht(dt.call(null, Q, { position: 'top' })),
                        R(Ie, 'input', o[11]),
                        ht(dt.call(null, et, { position: 'top' })),
                        R(tt, 'click', Qo.html.lexicon),
                        R(ie, 'click', Qo.html.all),
                        R(Dt, 'click', Qo.html.docs),
                        R(un, 'click', Qo.txt),
                        R(To, 'click', Qo.csv),
                        R(So, 'click', Qo.json),
                        R(Gn, 'input', o[12]),
                        R(co, 'change', o[13]),
                        R(Vn, 'input', o[15]),
                        R(ho, 'change', o[16]),
                        R(Xn, 'change', o[18]),
                        R(Io, 'click', o[19]),
                        R(Zn, 'input', o[20]),
                        R(Lo, 'click', o[21]),
                    ]),
                    (Qn = !0));
        },
        p(Re, Ot) {
            (!Jn ||
                (Ot[0] & 8 &&
                    a !==
                        (a = `Your file will be saved as: ${Re[3].Name}.lexc`))) &&
                g(r, 'title', a),
                Ot[0] & 8 && h.value !== Re[3].Name && j(h, Re[3].Name),
                Ko === (Ko = ds(Re, Ot)) && xn ?
                    xn.p(Re, Ot)
                :   (xn.d(1), (xn = Ko(Re)), xn && (xn.c(), xn.m(n, w))),
                (!Jn || Ot[0] & 4) && Ee(te, Re[2]),
                (!Jn || Ot[0] & 8) &&
                    we !== (we = Re[3].SaveLocation + '') &&
                    Ee(pe, we),
                Ot[0] & 8 && j(Ie, Re[3].HeaderTags),
                Ot[0] & 1 && Do(Gn.value) !== Re[0].words && j(Gn, Re[0].words),
                Ot[0] & 1 && j(co, Re[0].pronunciations_bool),
                Re[0].pronunciations_bool ?
                    Ht ? Ht.p(Re, Ot)
                    :   ((Ht = vd(Re)), Ht.c(), Ht.m(qn, null))
                :   Ht && (Ht.d(1), (Ht = null)),
                Ot[0] & 1 &&
                    Do(Vn.value) !== Re[0].definitions &&
                    j(Vn, Re[0].definitions),
                Ot[0] & 1 && j(ho, Re[0].tags_bool),
                Re[0].tags_bool ?
                    Kt ? Kt.p(Re, Ot)
                    :   ((Kt = kd(Re)), Kt.c(), Kt.m(Yn, null))
                :   Kt && (Kt.d(1), (Kt = null)),
                Ot[0] & 1 && (Xn.checked = Re[0].headers),
                Ot[0] & 2 && j(Zn, Re[1]);
        },
        i(Re) {
            Jn || (Ce(It.$$.fragment, Re), (Jn = !0));
        },
        o(Re) {
            Oe(It.$$.fragment, Re), (Jn = !1);
        },
        d(Re) {
            Re && x(e),
                xn.d(),
                He(Ao, Re),
                $t(It),
                Ht && Ht.d(),
                Kt && Kt.d(),
                (Qn = !1),
                ot(hs);
        },
    };
}
function vs() {
    document.querySelectorAll('.planet').forEach((o) => {
        o.style.animationPlayState = 'paused';
    });
}
function _d() {
    document.querySelectorAll('.planet').forEach((o) => {
        o.style.animationPlayState = 'running';
    });
}
function xd(o) {
    const e = o
        .split('')
        .reduce((t, n) => (n === ' ' || (t[n] = t[n] ? t[n] + 1 : 1), t), {});
    return Object.entries(e).sort((t, n) => n[1] - t[1]);
}
const Cd = (o, e) => (e.length > o.length ? e : o),
    Ed = (o, e) => (e.length < o.length ? e : o),
    Td = (o) => !!o,
    Sd = (o, e) => e.count - o.count;
function ck(o, e, t) {
    let n, i, s, r, l, a, c, h;
    $e(o, q, (M) => t(3, (i = M))),
        $e(o, Os, (M) => t(22, (s = M))),
        $e(o, Si, (M) => t(23, (r = M))),
        $e(o, yo, (M) => t(24, (l = M))),
        $e(o, Tr, (M) => t(25, (a = M))),
        $e(o, ri, (M) => t(26, (c = M))),
        $e(o, Wl, (M) => t(27, (h = M)));
    const u = require('fs'),
        p = require('path'),
        b = require('vex-js');
    function m() {
        Ps({ properties: ['openDirectory'] }, (M) => {
            M !== void 0 && ee(q, (i.SaveLocation = M[0]), i);
        });
    }
    let k = {
            headers: !0,
            words: 1,
            pronunciations_bool: !1,
            pronunciations: 2,
            definitions: 3,
            tags_bool: !1,
            tags: 4,
        },
        y = '';
    function w() {
        return Array.from(
            new Set(
                Object.entries(i.Lexicon).reduce(
                    (M, [N, F]) => (
                        M.push(
                            ...F.Senses.reduce(
                                (V, ue) => (V.push(...ue.tags), V),
                                [],
                            ),
                        ),
                        M
                    ),
                    [],
                ),
            ),
        );
    }
    async function E(M) {
        if (typeof M.Version == 'number' || M.Version === '1.8.x') {
            try {
                Hy[1.9](M);
            } catch {
                b.dialog.alert(` 
                    The file you attempted to open was saved by an old version of Lexicanter (Version ~${M.Version}), 
                    which is no longer supported. Please contact the developer for assistance; the file is likely recoverable.
                `);
            }
            return;
        }
        let N = 'No error has been set.';
        function F(V) {
            N = V;
        }
        try {
            if (
                (ee(q, (i = structuredClone(h)), i),
                F('There was a problem loading the settings of the file.'),
                ee(q, (i.CaseSensitive = M.CaseSensitive), i),
                ee(q, (i.IgnoreDiacritics = M.IgnoreDiacritics), i),
                ee(q, (i.HeaderTags = M.HeaderTags), i),
                ee(q, (i.UseLects = M.UseLects), i),
                ee(q, (i.ShowEtymology = M.ShowEtymology), i),
                ee(q, (i.ShowInflection = M.ShowInflection), i),
                M.hasOwnProperty('ShowPronunciation') &&
                    ee(q, (i.ShowPronunciation = M.ShowPronunciation), i),
                M.hasOwnProperty('OrderByDate'))
            )
                ee(q, (i.OrderByDate = M.OrderByDate), i);
            else for (let fe in M.Lexicon) M.Lexicon[fe].Timestamp = Date.now();
            M.hasOwnProperty('SaveLocation') &&
                ee(q, (i.SaveLocation = M.SaveLocation), i),
                M.hasOwnProperty('FileVersion') &&
                    ee(q, (i.FileVersion = M.FileVersion), i),
                F('There was a problem loading the alphabet from the file.'),
                ee(q, (i.Alphabet = M.Alphabet), i),
                F('There was a problem loading the file’s lexicon data.'),
                ee(q, (i.Lexicon = M.Lexicon), i),
                ee(q, (i.Lects = M.Lects), i),
                F('There was a problem loading the file’s phrasebook data.'),
                ee(q, (i.Phrasebook = M.Phrasebook), i),
                ee(ri, (c = Object.keys(i.Phrasebook)[0]), c),
                F('There was a problem loading the file’s documentation data.');
            let V = M.Docs;
            ee(q, (i.Docs = V), i),
                a.destroy(),
                zi(V),
                F(
                    'There was a problem loading the pronunciations rules from the file.',
                ),
                ee(q, (i.Pronunciations = M.Pronunciations), i),
                i.Lects.forEach(Gl),
                F(
                    'There was a problem loading the orthography data from the file.',
                ),
                M.hasOwnProperty('Orthographies') &&
                    (ee(q, (i.Orthographies = M.Orthographies), i),
                    ee(q, (i.ShowOrthography = M.ShowOrthography), i)),
                F(
                    'There was a problem loading the phonotactics rules from the file.',
                ),
                ee(q, (i.Phonotactics = M.Phonotactics), i),
                F(
                    'There was a problem loading the inflection rules from the file.',
                );
            let ue = M.Inflections;
            if (
                (M.Inflections.length &&
                    !M.Inflections[0].categories &&
                    ue.map((fe) => ({ ...fe, categories: '' })),
                ee(q, (i.Inflections = M.Inflections), i),
                F(
                    'There was a problem loading the etymology data from the file.',
                ),
                ee(q, (i.Etymologies = M.Etymologies), i),
                F('There was a problem loading the advanced phonotactics.'),
                M.hasOwnProperty('AdvancedPhonotactics') &&
                    (ee(
                        q,
                        (i.UseAdvancedPhonotactics = M.UseAdvancedPhonotactics),
                        i,
                    ),
                    M.AdvancedPhonotactics.hasOwnProperty('Constructs') ||
                        ((M.AdvancedPhonotactics.Constructs = [
                            { enabled: !0, structures: '' },
                        ]),
                        (M.AdvancedPhonotactics.Illegals = [])),
                    ee(
                        q,
                        (i.AdvancedPhonotactics = M.AdvancedPhonotactics),
                        i,
                    )),
                F('There was a problem loading the file’s theme.'),
                M.hasOwnProperty('FileTheme') &&
                    ee(q, (i.FileTheme = M.FileTheme), i),
                F('There was a problem syncing with the database.'),
                M.hasOwnProperty('UploadToDatabase') &&
                    (ee(q, (i.UploadToDatabase = M.UploadToDatabase), i),
                    i.UploadToDatabase))
            ) {
                if (l === '' || r === '') {
                    b.dialog.alert(
                        'The file you opened has database syncing turned on, but your user ID or account key are blank.',
                    );
                    return;
                }
                if (Di(l, r)) {
                    const fe = await El(M.Name);
                    fe !== !1 ?
                        fe.FileVersion === void 0 ?
                            b.dialog.confirm({
                                message:
                                    'The file in the database has no FileVersion number. Would you like to overwrite it with your local version?',
                                yesText: 'Upload Local Version',
                                callback: (J) => {
                                    J &&
                                        (pi(),
                                        b.dialog.alert(
                                            'Saved and uploaded local file.',
                                        ));
                                },
                            })
                        :   parseInt(i.FileVersion, 36) <
                                parseInt(fe.FileVersion, 36) &&
                            b.dialog.confirm({
                                message: `Detected a newer version of the file in the database (local: ${i.FileVersion} | online: ${fe.FileVersion}). Would you like to download the changes?`,
                                yesText: 'Download Changes',
                                callback: (J, ae = fe) => {
                                    J ?
                                        (ee(q, (i = ae), i),
                                        zi(ae.Docs),
                                        pi(),
                                        b.dialog.alert(
                                            'Downloaded changes and saved.',
                                        ))
                                    :   b.dialog.alert(
                                            'Did not download changes. If you change your mind, click the Sync From Database button in the Settings tab. This will overwrite local changes.',
                                        );
                                },
                            })
                    :   b.dialog.alert(
                            'No file of this name was found in your ownership in the database.',
                        );
                } else
                    b.dialog.alert(
                        'One or both of your User ID and Key is invalid.',
                    );
            }
        } catch (V) {
            const ue = V instanceof Error ? V : Error(String(V));
            b.dialog.alert(N + ' Please contact the developer for assistance.'),
                to(N, ue),
                Fn.logObj(M, 'File Contents');
        } finally {
            ee(Os, s++, s), Pi(`Opened and read the contents of '${i.Name}'.'`);
        }
    }
    async function _() {
        let M,
            N = (F) => {
                Ps(
                    {
                        title: 'Open Lexicon',
                        defaultPath: `${F}${p.sep}Lexicons${p.sep}`,
                        properties: ['openFile'],
                    },
                    (V) => {
                        if (V === void 0) {
                            vs(),
                                t(2, (n = 'No file selected.')),
                                window.setTimeout(() => {
                                    t(2, (n = ''));
                                }, 5e3);
                            return;
                        }
                        u.readFile(V[0], 'utf8', (ue, fe) => {
                            if (ue) {
                                console.log(ue),
                                    window.alert(
                                        'There was an issue loading your file. Please contact the developer.',
                                    ),
                                    to('Attempted to open a file.', ue),
                                    vs(),
                                    t(2, (n = 'Couldn’t open file.')),
                                    window.setTimeout(() => {
                                        t(2, (n = ''));
                                    }, 5e3);
                                return;
                            }
                            (M = JSON.parse(fe)),
                                E(M),
                                ee(q, (i.Name = p.basename(V[0], '.lexc')), i),
                                vs(),
                                t(2, (n = 'Done!')),
                                window.setTimeout(() => {
                                    t(2, (n = ''));
                                }, 5e3);
                        });
                    },
                );
            };
        _d(),
            t(2, (n = 'Loading...')),
            await No((F) => {
                u.existsSync(`${F}${p.sep}Lexicons${p.sep}`) ?
                    N(F)
                :   u.mkdir(`${F}${p.sep}Lexicons${p.sep}`, () => {
                        Pi(
                            `Created the 'Lexicons' folder in the user data folder at '${F}'.`,
                        ),
                            N(F);
                    });
            });
    }
    async function B() {
        _d(), t(2, (n = 'Loading...'));
        let [M] = await window.showOpenFilePicker();
        await M.requestPermission({ mode: 'read' });
        let N = await M.getFile();
        if (!N.name.includes('.lexc')) {
            window.alert('The selected file was not a .lexc file.'),
                vs(),
                t(2, (n = 'Incorrect file type.')),
                window.setTimeout(() => {
                    t(2, (n = ''));
                }, 5e3);
            return;
        }
        let F = await N.text(),
            V = JSON.parse(F);
        E(V),
            ee(q, (i.Name = N.name.split('.')[0]), i),
            vs(),
            t(2, (n = 'Done!')),
            window.setTimeout(() => {
                t(2, (n = ''));
            }, 5e3);
    }
    function O(M) {
        let N = y.split(`

`);
        for (let F of N) {
            let V = F.split(`
`),
                ue = [],
                fe = [],
                J = V[0].trim();
            V.shift();
            let ae = '';
            V[0].match(/^[0-9]+\./g) ||
                ((ae = V[0].trim()),
                V.shift(),
                ae.match(/^[\/\[].+[\/\]]$/) &&
                    (ae = ae.slice(1, ae.length - 1)));
            for (let ze of V)
                ze.match(/^[0-9]+\./g) &&
                    (ue.push(ze),
                    V[V.indexOf(ze) + 1].startsWith('Tags: ') ?
                        fe.push(V[V.indexOf(ze) + 1].slice(6).split(/\s+/g))
                    :   fe.push([]));
            let I = [];
            for (let ze of ue)
                I.push({
                    definition: ze.slice(ze.indexOf('.') + 1).trim(),
                    tags: fe[ue.indexOf(ze)],
                    lects: i.Lects,
                });
            let z = {};
            z[i.Lects[0]] =
                ae ?
                    { ipa: ae, irregular: !0 }
                :   { ipa: en(J, i.Lects[0]), irregular: !1 };
            let se = { pronunciations: z, Senses: I, Timestamp: Date.now() };
            J in i.Lexicon ?
                b.dialog.alert(`The word ${J} is already in the lexicon.`)
            :   ee(q, (i.Lexicon[J] = se), i);
        }
        t(1, (y = ''));
    }
    function P() {
        (i.Name = this.value), q.set(i);
    }
    const H = (M) => ({
        tag: M,
        count: Object.values(i.Lexicon).filter((N) =>
            N.Senses.some((F) => F.tags.includes(M)),
        ).length,
    });
    function T() {
        (i.HeaderTags = this.value), q.set(i);
    }
    function S() {
        (k.words = Do(this.value)), t(0, k);
    }
    function A() {
        (k.pronunciations_bool = this.value), t(0, k);
    }
    function $() {
        (k.pronunciations = Do(this.value)), t(0, k);
    }
    function K() {
        (k.definitions = Do(this.value)), t(0, k);
    }
    function W() {
        (k.tags_bool = this.value), t(0, k);
    }
    function G() {
        (k.tags = Do(this.value)), t(0, k);
    }
    function L() {
        (k.headers = this.checked), t(0, k);
    }
    const D = () =>
        Uy(
            k.headers,
            k.words,
            k.definitions,
            k.pronunciations_bool ? k.pronunciations : !1,
            k.tags_bool ? k.tags : !1,
        );
    function X() {
        (y = this.value), t(1, y);
    }
    const te = () => {
        O(), t(1, (y = ''));
    };
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 1, o.$$.dirty[0] & 2;
        }),
        t(2, (n = '')),
        [k, y, n, i, m, w, _, B, O, P, H, T, S, A, $, K, W, G, L, D, X, te]
    );
}
class hk extends Rt {
    constructor(e) {
        super(), Nt(this, e, ck, ak, Ct, {}, null, [-1, -1]);
    }
}
const dk = require,
    re = dk('fs');
re.appendFile;
re.appendFileSync;
re.access;
re.accessSync;
re.chown;
re.chownSync;
re.chmod;
re.chmodSync;
re.close;
re.closeSync;
re.copyFile;
re.copyFileSync;
re.cp;
re.cpSync;
re.createReadStream;
re.createWriteStream;
re.exists;
re.existsSync;
re.fchown;
re.fchownSync;
re.fchmod;
re.fchmodSync;
re.fdatasync;
re.fdatasyncSync;
re.fstat;
re.fstatSync;
re.fsync;
re.fsyncSync;
re.ftruncate;
re.ftruncateSync;
re.futimes;
re.futimesSync;
re.glob;
re.globSync;
re.lchown;
re.lchownSync;
re.lchmod;
re.lchmodSync;
re.link;
re.linkSync;
re.lstat;
re.lstatSync;
re.lutimes;
re.lutimesSync;
re.mkdir;
re.mkdirSync;
re.mkdtemp;
re.mkdtempSync;
re.open;
re.openSync;
re.openAsBlob;
re.readdir;
re.readdirSync;
re.read;
re.readSync;
re.readv;
re.readvSync;
re.readFile;
re.readFileSync;
re.readlink;
re.readlinkSync;
re.realpath;
re.realpathSync;
re.rename;
re.renameSync;
re.rm;
re.rmSync;
re.rmdir;
re.rmdirSync;
re.stat;
re.statfs;
re.statSync;
re.statfsSync;
re.symlink;
re.symlinkSync;
re.truncate;
re.truncateSync;
re.unwatchFile;
re.unlink;
re.unlinkSync;
re.utimes;
re.utimesSync;
re.watch;
re.watchFile;
re.writeFile;
re.writeFileSync;
re.write;
re.writeSync;
re.writev;
re.writevSync;
re.Dirent;
re.Stats;
re.ReadStream;
re.WriteStream;
re.FileReadStream;
re.FileWriteStream;
re._toUnixTimestamp;
re.Dir;
re.opendir;
re.opendirSync;
re.F_OK;
re.R_OK;
re.W_OK;
re.X_OK;
re.constants;
re.promises;
const zt = re.default || re;
function Bd(o, e, t) {
    const n = o.slice();
    return (n[53] = e[t]), (n[54] = e), (n[55] = t), n;
}
function Id(o, e, t) {
    const n = o.slice();
    return (n[56] = e[t]), n;
}
function Ld(o, e, t) {
    const n = o.slice();
    return (n[59] = e[t]), (n[61] = t), n;
}
function Ad(o) {
    let e, t, n, i, s, r, l, a, c, h, u, p;
    return {
        c() {
            (e = Y('Local File Version: ')),
                (t = Y(o[3])),
                (n = v()),
                (i = f('br')),
                (s = Y(`
                        Online File Version: `)),
                (r = Y(o[2])),
                (l = v()),
                (a = f('br')),
                (c = v()),
                (h = f('button')),
                (h.textContent = 'Refresh'),
                g(h, 'class', 'hover-highlight hover-shadow');
        },
        m(b, m) {
            C(b, e, m),
                C(b, t, m),
                C(b, n, m),
                C(b, i, m),
                C(b, s, m),
                C(b, r, m),
                C(b, l, m),
                C(b, a, m),
                C(b, c, m),
                C(b, h, m),
                u || ((p = R(h, 'click', o[20])), (u = !0));
        },
        p(b, m) {
            m[0] & 8 && Ee(t, b[3]), m[0] & 4 && Ee(r, b[2]);
        },
        d(b) {
            b && (x(e), x(t), x(n), x(i), x(s), x(r), x(l), x(a), x(c), x(h)),
                (u = !1),
                p();
        },
    };
}
function Od(o) {
    let e, t, n, i, s;
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Delete Tag'),
                (t = v()),
                (n = f('button')),
                (n.textContent = 'Edit Tag'),
                g(e, 'class', 'hover-highlight hover-shadow'),
                g(n, 'class', 'hover-highlight hover-shadow');
        },
        m(r, l) {
            C(r, e, l),
                C(r, t, l),
                C(r, n, l),
                i ||
                    ((s = [R(e, 'click', o[21]), R(n, 'click', o[22])]),
                    (i = !0));
        },
        p: Le,
        d(r) {
            r && (x(e), x(t), x(n)), (i = !1), ot(s);
        },
    };
}
function Md(o) {
    let e,
        t,
        n,
        i,
        s = he(o[0].Lects),
        r = [];
    for (let l = 0; l < s.length; l += 1) r[l] = Pd(Ld(o, s, l));
    return {
        c() {
            for (let l = 0; l < r.length; l += 1) r[l].c();
            (e = v()),
                (t = f('button')),
                (t.textContent = '+ Lect'),
                g(t, 'class', 'hover-highlight hover-shadow');
        },
        m(l, a) {
            for (let c = 0; c < r.length; c += 1) r[c] && r[c].m(l, a);
            C(l, e, a), C(l, t, a), n || ((i = R(t, 'click', o[26])), (n = !0));
        },
        p(l, a) {
            if (a[0] & 58720257) {
                s = he(l[0].Lects);
                let c;
                for (c = 0; c < s.length; c += 1) {
                    const h = Ld(l, s, c);
                    r[c] ?
                        r[c].p(h, a)
                    :   ((r[c] = Pd(h)), r[c].c(), r[c].m(e.parentNode, e));
                }
                for (; c < r.length; c += 1) r[c].d(1);
                r.length = s.length;
            }
        },
        d(l) {
            l && (x(e), x(t)), He(r, l), (n = !1), i();
        },
    };
}
function Pd(o) {
    let e,
        t,
        n = o[59] + '',
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p;
    function b() {
        return o[36](o[59], o[61]);
    }
    function m() {
        return o[37](o[59], o[61]);
    }
    function k() {
        return o[38](o[59]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('p')),
                (i = Y(n)),
                (s = v()),
                (r = f('button')),
                (r.textContent = '⌫'),
                (l = v()),
                (a = f('button')),
                (a.textContent = '✎'),
                (c = v()),
                (h = f('button')),
                (h.textContent = '◎'),
                Z(t, 'display', 'inline-block'),
                g(t, 'id', `${o[61]}`),
                g(r, 'class', 'hover-highlight hover-shadow'),
                Z(r, 'display', 'inline-block'),
                g(a, 'class', 'hover-highlight hover-shadow'),
                Z(a, 'display', 'inline-block'),
                g(h, 'class', 'hover-highlight hover-shadow'),
                Z(h, 'display', 'inline-block'),
                g(e, 'class', 'narrow');
        },
        m(y, w) {
            C(y, e, w),
                d(e, t),
                d(t, i),
                d(e, s),
                d(e, r),
                d(e, l),
                d(e, a),
                d(e, c),
                d(e, h),
                u ||
                    ((p = [
                        R(r, 'click', b),
                        R(a, 'click', m),
                        R(h, 'click', k),
                    ]),
                    (u = !0));
        },
        p(y, w) {
            (o = y), w[0] & 1 && n !== (n = o[59] + '') && Ee(i, n);
        },
        d(y) {
            y && x(e), (u = !1), ot(p);
        },
    };
}
function Nd(o) {
    let e,
        t,
        n,
        i,
        s,
        r = he(Object.keys(o[0].Relatives)),
        l = [];
    for (let a = 0; a < r.length; a += 1) l[a] = Rd(Id(o, r, a));
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Import Related Lexicon'),
                (t = v());
            for (let a = 0; a < l.length; a += 1) l[a].c();
            (n = yt()), g(e, 'class', 'hover-highlight hover-shadow');
        },
        m(a, c) {
            C(a, e, c), C(a, t, c);
            for (let h = 0; h < l.length; h += 1) l[h] && l[h].m(a, c);
            C(a, n, c), i || ((s = R(e, 'click', o[41])), (i = !0));
        },
        p(a, c) {
            if (c[0] & 134217729) {
                r = he(Object.keys(a[0].Relatives));
                let h;
                for (h = 0; h < r.length; h += 1) {
                    const u = Id(a, r, h);
                    l[h] ?
                        l[h].p(u, c)
                    :   ((l[h] = Rd(u)), l[h].c(), l[h].m(n.parentNode, n));
                }
                for (; h < l.length; h += 1) l[h].d(1);
                l.length = r.length;
            }
        },
        d(a) {
            a && (x(e), x(t), x(n)), He(l, a), (i = !1), s();
        },
    };
}
function Rd(o) {
    let e,
        t,
        n = o[56] + '',
        i,
        s,
        r,
        l,
        a,
        c;
    function h() {
        return o[42](o[56]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('p')),
                (i = Y(n)),
                (s = v()),
                (r = f('button')),
                (r.textContent = '⌫'),
                (l = v()),
                Z(t, 'display', 'inline-block'),
                g(r, 'class', 'hover-highlight hover-shadow'),
                Z(r, 'display', 'inline-block'),
                g(e, 'class', 'narrow');
        },
        m(u, p) {
            C(u, e, p),
                d(e, t),
                d(t, i),
                d(e, s),
                d(e, r),
                d(e, l),
                a || ((c = R(r, 'click', h)), (a = !0));
        },
        p(u, p) {
            (o = u), p[0] & 1 && n !== (n = o[56] + '') && Ee(i, n);
        },
        d(u) {
            u && x(e), (a = !1), c();
        },
    };
}
function Dd(o) {
    let e,
        t,
        n = he(o[0].Orthographies),
        i = [];
    for (let s = 0; s < n.length; s += 1) i[s] = Fd(Bd(o, n, s));
    return {
        c() {
            (e = f('label')),
                (t = Y(`Display Orthographies
                        `));
            for (let s = 0; s < i.length; s += 1) i[s].c();
        },
        m(s, r) {
            C(s, e, r), d(e, t);
            for (let l = 0; l < i.length; l += 1) i[l] && i[l].m(e, null);
        },
        p(s, r) {
            if (r[0] & 1) {
                n = he(s[0].Orthographies);
                let l;
                for (l = 0; l < n.length; l += 1) {
                    const a = Bd(s, n, l);
                    i[l] ?
                        i[l].p(a, r)
                    :   ((i[l] = Fd(a)), i[l].c(), i[l].m(e, null));
                }
                for (; l < i.length; l += 1) i[l].d(1);
                i.length = n.length;
            }
        },
        d(s) {
            s && x(e), He(i, s);
        },
    };
}
function Fd(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l = o[53].name + '',
        a,
        c,
        h,
        u;
    function p() {
        o[45].call(n, o[54], o[55]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('input')),
                (i = v()),
                (s = f('div')),
                (r = f('p')),
                (a = Y(l)),
                (c = v()),
                g(n, 'type', 'checkbox'),
                g(t, 'class', 'column'),
                Z(t, 'align', 'right'),
                g(s, 'class', 'column text-left'),
                g(e, 'class', 'row narrow');
        },
        m(b, m) {
            C(b, e, m),
                d(e, t),
                d(t, n),
                (n.checked = o[53].display),
                d(e, i),
                d(e, s),
                d(s, r),
                d(r, a),
                d(e, c),
                h || ((u = R(n, 'change', p)), (h = !0));
        },
        p(b, m) {
            (o = b),
                m[0] & 1 && (n.checked = o[53].display),
                m[0] & 1 && l !== (l = o[53].name + '') && Ee(a, l);
        },
        d(b) {
            b && x(e), (h = !1), u();
        },
    };
}
function uk(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te,
        M,
        N,
        F,
        V,
        ue,
        fe,
        J,
        ae,
        I,
        z,
        se,
        ze,
        Qe,
        ne,
        me,
        Te,
        we,
        pe,
        Se,
        ye,
        Ze,
        U,
        Q,
        ge,
        _e,
        Ie,
        Pe,
        ve,
        Me,
        Je = o[0].UploadToDatabase ? 'On' : 'Off',
        Ge,
        et,
        Ue,
        It,
        ut = o[0].UploadToDatabase && Di(o[10], o[9]),
        Lt,
        vt,
        qe,
        ce,
        je,
        Ne,
        at,
        At,
        tt,
        kt,
        de,
        ie,
        Ae,
        Be,
        Dt,
        it,
        un,
        Eo,
        To,
        Uo,
        So,
        qi,
        Vi,
        Yi,
        gi,
        mi,
        jo,
        kn,
        $o,
        nn,
        Ki,
        Gn,
        Xi,
        An,
        qn,
        Wo,
        co,
        bi,
        Zi,
        Go,
        qo,
        Ji,
        Vn,
        Qi,
        Bo,
        Yn,
        es,
        ho,
        Kn,
        ts,
        On,
        ns,
        Xn,
        Vo,
        Io,
        uo,
        os,
        is,
        wi,
        ss,
        Mn,
        rs,
        _n,
        Zn,
        ls,
        Lo,
        as,
        cs,
        Yo,
        Jn,
        Qn,
        hs,
        ds,
        Ko,
        xn,
        po,
        Ao,
        Ht,
        Kt,
        Re,
        Ot,
        Xo,
        pn = ut && Ad(o);
    (An = new ff({})), An.$on('select', o[34]);
    let fn = !!o[1] && Od(o),
        gn = o[0].UseLects && Md(o),
        mn = o[0].ShowEtymology && Nd(o),
        bn = o[0].ShowOrthography && Dd(o);
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('br')),
                (s = f('br')),
                (r = v()),
                (l = f('p')),
                (l.textContent = 'Appearance Settings'),
                (a = v()),
                (c = f('br')),
                (h = v()),
                (u = f('label')),
                (p = Y(`Color Theme
                `)),
                (b = f('select')),
                (m = f('optgroup')),
                (k = f('option')),
                (k.textContent = '☾ Dark'),
                (y = f('option')),
                (y.textContent = '☀ Light'),
                (w = f('optgroup')),
                (E = f('option')),
                (E.textContent = '☾ Marine'),
                (_ = f('option')),
                (_.textContent = '☾ Glade'),
                (B = f('option')),
                (B.textContent = '☾ Pomegranate'),
                (O = f('option')),
                (O.textContent = '☾ Magnolia'),
                (P = f('option')),
                (P.textContent = '☀ Juniper'),
                (H = f('option')),
                (H.textContent = '☀ Leatherbound'),
                (T = f('option')),
                (T.textContent = '☀ Wisteria'),
                (S = f('optgroup')),
                (A = f('option')),
                (A.textContent = '☾ Purple Maar'),
                ($ = f('option')),
                ($.textContent = '☾ Terminal'),
                (K = f('option')),
                (K.textContent = '☾ Midnight'),
                (W = f('option')),
                (W.textContent = '☾ Crabapple'),
                (G = f('option')),
                (G.textContent = '☀ Bone'),
                (L = f('optgroup')),
                (D = f('option')),
                (D.textContent = '☀ Ēostre 2023'),
                (X = f('option')),
                (X.textContent = "☾ All Hallow's Eve 2023"),
                (te = v()),
                (M = f('br')),
                (N = v()),
                (F = f('button')),
                (F.textContent = 'Set Current Theme as Default for This File'),
                (V = v()),
                (ue = f('button')),
                (ue.textContent = 'Clear File Theme'),
                (fe = v()),
                (J = f('br')),
                (ae = v()),
                (I = f('button')),
                (I.textContent = 'Load Custom Theme…'),
                (z = v()),
                (se = f('br')),
                (ze = f('hr')),
                (Qe = f('br')),
                (ne = v()),
                (me = f('p')),
                (me.textContent = 'Save Settings'),
                (Te = v()),
                (we = f('br')),
                (pe = v()),
                (Se = f('label')),
                (ye = Y(`Auto-Save
                `)),
                (Ze = f('input')),
                (U = v()),
                (Q = f('div')),
                (ge = f('label')),
                (_e = Y(`Database Uploading
                    `)),
                (Ie = f('p')),
                (Ie.innerHTML = `If you wish, your files can be saved to an online database so that you can sync your files across multiple 
                        devices and the discord bot. To get your User ID and Key, please go to the Saturn&#39;s Sojourn discord server and use 
                        the command <code>/account</code>.`),
                (Pe = v()),
                (ve = f('span')),
                (Me = Y('Uploading is ')),
                (Ge = Y(Je)),
                (et = Y(` for this file.
                        `)),
                (Ue = f('input')),
                (It = v()),
                pn && pn.c(),
                (Lt = v()),
                (vt = f('span')),
                (qe = Y('User ID: ')),
                (ce = f('input')),
                (je = v()),
                (Ne = f('br')),
                (at = v()),
                (At = f('span')),
                (tt = Y('Key: ')),
                (kt = f('input')),
                (de = v()),
                (ie = f('button')),
                (ie.textContent = 'Authenticate'),
                (Ae = v()),
                (Be = f('p')),
                (Be.textContent =
                    "Your ID and Key are saved to the app's internal settings, not to your file, but turning on uploading is saved per-file."),
                (Dt = v()),
                (it = f('br')),
                (un = v()),
                (Eo = f('button')),
                (Eo.textContent = 'Sync From Database'),
                (To = v()),
                (Uo = f('p')),
                (Uo.textContent =
                    'This will overwrite the current file with the latest version of the file with the same name and User ID in the database.'),
                (So = v()),
                (qi = f('br')),
                (Vi = f('hr')),
                (Yi = f('br')),
                (gi = v()),
                (mi = f('p')),
                (mi.textContent = 'Lexicon Settings'),
                (jo = v()),
                (kn = f('br')),
                ($o = v()),
                (nn = f('label')),
                (Ki = Y('Manage Tags')),
                (Gn = f('br')),
                (Xi = v()),
                qt(An.$$.fragment),
                (qn = v()),
                (Wo = f('p')),
                (co = Y('Selected: ')),
                (bi = Y(o[1])),
                (Zi = v()),
                fn && fn.c(),
                (Go = v()),
                (qo = f('br')),
                (Ji = f('hr')),
                (Vn = f('br')),
                (Qi = v()),
                (Bo = f('p')),
                (Bo.textContent = 'Advanced Settings'),
                (Yn = v()),
                (es = f('br')),
                (ho = v()),
                (Kn = f('label')),
                (ts = Y(`Show Multi-Lect Features
                `)),
                (On = f('input')),
                (ns = v()),
                gn && gn.c(),
                (Xn = v()),
                (Vo = f('label')),
                (Io = Y(`Show Pronunciations
                `)),
                (uo = f('input')),
                (os = v()),
                (is = f('br')),
                (wi = f('br')),
                (ss = v()),
                (Mn = f('label')),
                (rs = Y(`Show Etymology Features
                `)),
                (_n = f('input')),
                (Zn = v()),
                mn && mn.c(),
                (ls = v()),
                (Lo = f('br')),
                (as = f('br')),
                (cs = v()),
                (Yo = f('label')),
                (Jn = Y(`Show Automatic Inflection Features
                `)),
                (Qn = f('input')),
                (hs = v()),
                (ds = f('br')),
                (Ko = f('br')),
                (xn = v()),
                (po = f('label')),
                (Ao = Y(`Show Alternate Orthography Features
                `)),
                (Ht = f('input')),
                (Kt = v()),
                bn && bn.c(),
                (k.__value = 'styles/dark.css'),
                j(k, k.__value),
                (y.__value = 'styles/light.css'),
                j(y, y.__value),
                g(m, 'label', 'Simple Themes'),
                (E.__value = 'styles/marine.css'),
                j(E, E.__value),
                (_.__value = 'styles/glade.css'),
                j(_, _.__value),
                (B.__value = 'styles/pomegranate.css'),
                j(B, B.__value),
                (O.__value = 'styles/magnolia.css'),
                j(O, O.__value),
                (P.__value = 'styles/juniper.css'),
                j(P, P.__value),
                (H.__value = 'styles/leatherbound.css'),
                j(H, H.__value),
                (T.__value = 'styles/wisteria.css'),
                j(T, T.__value),
                g(w, 'label', 'The Saturnine Collection'),
                (A.__value = 'styles/purple_maar.css'),
                j(A, A.__value),
                ($.__value = 'styles/terminal_green.css'),
                j($, $.__value),
                (K.__value = 'styles/midnight.css'),
                j(K, K.__value),
                (W.__value = 'styles/crabapple.css'),
                j(W, W.__value),
                (G.__value = 'styles/bone.css'),
                j(G, G.__value),
                g(S, 'label', 'The Maarz Collection'),
                (D.__value = 'styles/eostre2023.css'),
                j(D, D.__value),
                (X.__value = 'styles/hallowseve2023.css'),
                j(X, X.__value),
                g(L, 'label', 'The Holiday Collection'),
                g(b, 'name', 'theme-select'),
                g(b, 'id', 'theme-select'),
                o[7] === void 0 && Pt(() => o[29].call(b)),
                g(F, 'class', 'hover-highlight hover-shadow'),
                g(ue, 'class', 'hover-highlight hover-shadow'),
                g(I, 'class', 'hover-highlight hover-shadow'),
                g(Ze, 'type', 'checkbox'),
                g(Ie, 'class', 'info'),
                g(Ue, 'type', 'checkbox'),
                g(ce, 'type', 'text'),
                (ce.disabled = o[6]),
                St(ce, 'pronunciation', o[6]),
                g(kt, 'type', 'text'),
                (kt.disabled = o[6]),
                St(kt, 'pronunciation', o[6]),
                g(Be, 'class', 'info'),
                g(Eo, 'class', 'hover-highlight hover-shadow'),
                g(Uo, 'class', 'info'),
                g(Q, 'class', 'narrow'),
                g(On, 'type', 'checkbox'),
                g(uo, 'type', 'checkbox'),
                g(_n, 'type', 'checkbox'),
                g(Qn, 'type', 'checkbox'),
                g(Ht, 'type', 'checkbox'),
                g(n, 'class', 'container column scrolled'),
                Z(n, 'height', '90vh'),
                g(t, 'class', 'row'),
                Z(t, 'height', '95vh'),
                g(e, 'class', 'tab-pane');
        },
        m(Ye, Et) {
            C(Ye, e, Et),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                d(n, l),
                d(n, a),
                d(n, c),
                d(n, h),
                d(n, u),
                d(u, p),
                d(u, b),
                d(b, m),
                d(m, k),
                d(m, y),
                d(b, w),
                d(w, E),
                d(w, _),
                d(w, B),
                d(w, O),
                d(w, P),
                d(w, H),
                d(w, T),
                d(b, S),
                d(S, A),
                d(S, $),
                d(S, K),
                d(S, W),
                d(S, G),
                d(b, L),
                d(L, D),
                d(L, X),
                Bt(b, o[7], !0),
                d(n, te),
                d(n, M),
                d(n, N),
                d(n, F),
                d(n, V),
                d(n, ue),
                d(n, fe),
                d(n, J),
                d(n, ae),
                d(n, I),
                d(n, z),
                d(n, se),
                d(n, ze),
                d(n, Qe),
                d(n, ne),
                d(n, me),
                d(n, Te),
                d(n, we),
                d(n, pe),
                d(n, Se),
                d(Se, ye),
                d(Se, Ze),
                (Ze.checked = o[8]),
                d(n, U),
                d(n, Q),
                d(Q, ge),
                d(ge, _e),
                d(ge, Ie),
                d(ge, Pe),
                d(ge, ve),
                d(ve, Me),
                d(ve, Ge),
                d(ve, et),
                d(ve, Ue),
                (Ue.checked = o[0].UploadToDatabase),
                d(ge, It),
                pn && pn.m(ge, null),
                d(ge, Lt),
                d(ge, vt),
                d(vt, qe),
                d(vt, ce),
                j(ce, o[4]),
                d(ge, je),
                d(ge, Ne),
                d(ge, at),
                d(ge, At),
                d(At, tt),
                d(At, kt),
                j(kt, o[5]),
                d(ge, de),
                d(ge, ie),
                d(ge, Ae),
                d(ge, Be),
                d(ge, Dt),
                d(ge, it),
                d(ge, un),
                d(ge, Eo),
                d(ge, To),
                d(ge, Uo),
                d(n, So),
                d(n, qi),
                d(n, Vi),
                d(n, Yi),
                d(n, gi),
                d(n, mi),
                d(n, jo),
                d(n, kn),
                d(n, $o),
                d(n, nn),
                d(nn, Ki),
                d(nn, Gn),
                d(nn, Xi),
                jt(An, nn, null),
                d(nn, qn),
                d(nn, Wo),
                d(Wo, co),
                d(Wo, bi),
                d(nn, Zi),
                fn && fn.m(nn, null),
                d(n, Go),
                d(n, qo),
                d(n, Ji),
                d(n, Vn),
                d(n, Qi),
                d(n, Bo),
                d(n, Yn),
                d(n, es),
                d(n, ho),
                d(n, Kn),
                d(Kn, ts),
                d(Kn, On),
                (On.checked = o[0].UseLects),
                d(Kn, ns),
                gn && gn.m(Kn, null),
                d(n, Xn),
                d(n, Vo),
                d(Vo, Io),
                d(Vo, uo),
                (uo.checked = o[0].ShowPronunciation),
                d(n, os),
                d(n, is),
                d(n, wi),
                d(n, ss),
                d(n, Mn),
                d(Mn, rs),
                d(Mn, _n),
                (_n.checked = o[0].ShowEtymology),
                d(Mn, Zn),
                mn && mn.m(Mn, null),
                d(n, ls),
                d(n, Lo),
                d(n, as),
                d(n, cs),
                d(n, Yo),
                d(Yo, Jn),
                d(Yo, Qn),
                (Qn.checked = o[0].ShowInflection),
                d(n, hs),
                d(n, ds),
                d(n, Ko),
                d(n, xn),
                d(n, po),
                d(po, Ao),
                d(po, Ht),
                (Ht.checked = o[0].ShowOrthography),
                d(po, Kt),
                bn && bn.m(po, null),
                (Re = !0),
                Ot ||
                    ((Xo = [
                        R(b, 'change', o[29]),
                        R(b, 'change', o[13]),
                        R(F, 'click', o[18]),
                        R(ue, 'click', o[19]),
                        R(I, 'click', o[14]),
                        R(Ze, 'change', o[30]),
                        R(Ze, 'change', o[15]),
                        R(Ue, 'change', o[31]),
                        R(ce, 'input', o[32]),
                        R(kt, 'input', o[33]),
                        R(ie, 'click', o[11]),
                        R(Eo, 'click', o[12]),
                        R(On, 'change', o[35]),
                        R(On, 'change', o[16]),
                        R(uo, 'change', o[39]),
                        R(_n, 'change', o[40]),
                        R(Qn, 'change', o[43]),
                        R(Ht, 'change', o[44]),
                    ]),
                    (Ot = !0));
        },
        p(Ye, Et) {
            Et[0] & 128 && Bt(b, Ye[7]),
                Et[0] & 256 && (Ze.checked = Ye[8]),
                (!Re || Et[0] & 1) &&
                    Je !== (Je = Ye[0].UploadToDatabase ? 'On' : 'Off') &&
                    Ee(Ge, Je),
                Et[0] & 1 && (Ue.checked = Ye[0].UploadToDatabase),
                Et[0] & 1537 &&
                    (ut = Ye[0].UploadToDatabase && Di(Ye[10], Ye[9])),
                ut ?
                    pn ? pn.p(Ye, Et)
                    :   ((pn = Ad(Ye)), pn.c(), pn.m(ge, Lt))
                :   pn && (pn.d(1), (pn = null)),
                (!Re || Et[0] & 64) && (ce.disabled = Ye[6]),
                Et[0] & 16 && ce.value !== Ye[4] && j(ce, Ye[4]),
                (!Re || Et[0] & 64) && St(ce, 'pronunciation', Ye[6]),
                (!Re || Et[0] & 64) && (kt.disabled = Ye[6]),
                Et[0] & 32 && kt.value !== Ye[5] && j(kt, Ye[5]),
                (!Re || Et[0] & 64) && St(kt, 'pronunciation', Ye[6]),
                (!Re || Et[0] & 2) && Ee(bi, Ye[1]),
                Ye[1] ?
                    fn ? fn.p(Ye, Et)
                    :   ((fn = Od(Ye)), fn.c(), fn.m(nn, null))
                :   fn && (fn.d(1), (fn = null)),
                Et[0] & 1 && (On.checked = Ye[0].UseLects),
                Ye[0].UseLects ?
                    gn ? gn.p(Ye, Et)
                    :   ((gn = Md(Ye)), gn.c(), gn.m(Kn, null))
                :   gn && (gn.d(1), (gn = null)),
                Et[0] & 1 && (uo.checked = Ye[0].ShowPronunciation),
                Et[0] & 1 && (_n.checked = Ye[0].ShowEtymology),
                Ye[0].ShowEtymology ?
                    mn ? mn.p(Ye, Et)
                    :   ((mn = Nd(Ye)), mn.c(), mn.m(Mn, null))
                :   mn && (mn.d(1), (mn = null)),
                Et[0] & 1 && (Qn.checked = Ye[0].ShowInflection),
                Et[0] & 1 && (Ht.checked = Ye[0].ShowOrthography),
                Ye[0].ShowOrthography ?
                    bn ? bn.p(Ye, Et)
                    :   ((bn = Dd(Ye)), bn.c(), bn.m(po, null))
                :   bn && (bn.d(1), (bn = null));
        },
        i(Ye) {
            Re || (Ce(An.$$.fragment, Ye), (Re = !0));
        },
        o(Ye) {
            Oe(An.$$.fragment, Ye), (Re = !1);
        },
        d(Ye) {
            Ye && x(e),
                pn && pn.d(),
                $t(An),
                fn && fn.d(),
                gn && gn.d(),
                mn && mn.d(),
                bn && bn.d(),
                (Ot = !1),
                ot(Xo);
        },
    };
}
function pk(o, e, t) {
    let n, i, s, r, l, a, c, h, u;
    $e(o, q, (U) => t(0, (i = U))),
        $e(o, si, (U) => t(46, (s = U))),
        $e(o, yn, (U) => t(47, (r = U))),
        $e(o, Ci, (U) => t(7, (l = U))),
        $e(o, Ti, (U) => t(8, (a = U))),
        $e(o, Si, (U) => t(9, (c = U))),
        $e(o, yo, (U) => t(10, (h = U))),
        $e(o, Os, (U) => t(28, (u = U)));
    const p = require('vex-js');
    let b = '',
        m = '',
        k = i.FileVersion;
    async function y() {
        if (Di(h, c)) {
            let U = await El();
            return U ? U.FileVersion : 'No such file in database.';
        } else return 'Invalid key';
    }
    async function w() {
        t(2, (m = await y())), t(3, (k = i.FileVersion));
    }
    No((U) => {
        let Q = { autosave: !0, theme: 'styles/dark.css', dbid: '', dbkey: '' };
        zt.existsSync(U + xt.sep + 'settings.json') ?
            ((Q = JSON.parse(
                zt.readFileSync(U + xt.sep + 'settings.json', 'utf8'),
            )),
            ee(Ti, (a = Q.autosave), a),
            ee(Ci, (l = Q.theme), l),
            ee(yo, (h = Q.dbid), h),
            t(4, (E = Q.dbid)),
            ee(Si, (c = Q.dbkey), c),
            t(5, (_ = Q.dbkey)))
        :   (zt.existsSync(U + xt.sep + 'autosave_pref.txt') ?
                ((Q.autosave =
                    zt.readFileSync(
                        U + xt.sep + 'autosave_pref.txt',
                        'utf8',
                    ) === 'true'),
                ee(
                    Ti,
                    (a =
                        zt.readFileSync(
                            U + xt.sep + 'autosave_pref.txt',
                            'utf8',
                        ) === 'true'),
                    a,
                ),
                zt.unlinkSync(U + xt.sep + 'autosave_pref.txt'))
            :   (Q.autosave = !0),
            zt.writeFileSync(U + xt.sep + 'settings.json', 'styles/dark.css'),
            zt.existsSync(U + xt.sep + 'theme.txt') ?
                ((Q.theme = zt.readFileSync(U + xt.sep + 'theme.txt', 'utf8')),
                ee(Ci, (l = Q.theme), l),
                zt.unlinkSync(U + xt.sep + 'theme.txt'))
            :   (Q.theme = 'styles/dark.css'),
            ee(yo, (h = ''), h),
            ee(Si, (c = ''), c),
            zt.writeFileSync(
                U + xt.sep + 'settings.json',
                JSON.stringify(Q, null, 4),
            ));
    });
    let E = '',
        _ = '';
    function B() {
        if (E === '' || _ === '') {
            p.dialog.alert('Please enter both your User ID and Key.');
            return;
        }
        Di(E, _) ?
            (ee(yo, (h = E), h),
            ee(Si, (c = _), c),
            No((U) => {
                let Q = { autosave: a, theme: l, dbid: h, dbkey: c };
                zt.writeFileSync(
                    U + xt.sep + 'settings.json',
                    JSON.stringify(Q, null, 4),
                );
            }),
            p.dialog.alert('Successfully verified your User ID and Key.'))
        :   p.dialog.alert(
                'One or both of the User ID and Key you entered is invalid.',
            );
    }
    async function O() {
        if (h === '' || c === '') {
            p.dialog.alert('Please enter both your User ID and Key.');
            return;
        }
        if (Di(h, c)) {
            const U = await El();
            U !== !1 ?
                (ee(q, (i = U), i),
                zi(U.Docs),
                p.dialog.alert('Successfully synced from database.'))
            :   p.dialog.alert(
                    'No file of this name was found in your ownership in the database.',
                );
        } else
            p.dialog.alert('One or both of your User ID and Key is invalid.');
    }
    function P() {
        No((U) => {
            let Q = { autosave: a, theme: l, dbid: h, dbkey: c };
            zt.writeFileSync(
                U + xt.sep + 'settings.json',
                JSON.stringify(Q, null, 4),
            );
        });
    }
    async function H() {
        let [U] = await window.showOpenFilePicker();
        await U.requestPermission({ mode: 'read' });
        let Q = await U.getFile();
        if (!Q.name.includes('.css')) {
            p.dialog.alert('The selected file was not a .css file.');
            return;
        }
        let ge = await Q.text(),
            _e;
        await No((Ie) => {
            let Pe = Ie + xt.sep + 'user_themes' + xt.sep;
            zt.existsSync(Pe) || zt.mkdirSync(Pe),
                (_e = Ie + xt.sep + 'user_themes' + xt.sep + Q.name),
                zt.writeFile(_e, ge, 'utf8', (ve) => {
                    if (ve) throw ve;
                    ee(Ci, (l = _e), l);
                }),
                zt.writeFile(Ie + xt.sep + 'theme.txt', _e, (ve) => {
                    if (ve) throw ve;
                });
        });
    }
    function T() {
        let U = { autosave: a, theme: l, dbid: h, dbkey: c };
        No((ge) => {
            zt.writeFileSync(
                ge + xt.sep + 'settings.json',
                JSON.stringify(U, null, 4),
            );
        });
        let Q;
        a ?
            (Q = window.setInterval(pi, 6e5, !1))
        :   Q && window.clearInterval(Q);
    }
    function S(U, Q, ge) {
        if (Q === '') {
            p.dialog.alert('The lect name cannot be blank.');
            return;
        }
        if (Q === U) {
            p.dialog.alert('The lect name is unchanged.');
            return;
        }
        if (i.Lects.includes(Q)) {
            p.dialog.alert('A lect with that name already exists.');
            return;
        }
        ee(q, (i.Lects[ge] = Q), i),
            ee(q, (i.Lects = [...i.Lects]), i),
            Object.keys(i.Lexicon).forEach((_e) => {
                i.Lexicon[_e].pronunciations.hasOwnProperty(U) &&
                    (ee(
                        q,
                        (i.Lexicon[_e].pronunciations[Q] =
                            i.Lexicon[_e].pronunciations[U]),
                        i,
                    ),
                    delete i.Lexicon[_e].pronunciations[U]),
                    i.Lexicon[_e].Senses.forEach((Ie) => {
                        Ie.lects.includes(U) &&
                            (Ie.lects.splice(Ie.lects.indexOf(U), 1),
                            Ie.lects.push(Q));
                    });
            }),
            Object.keys(i.Phrasebook).forEach((_e) => {
                Object.keys(i.Phrasebook[_e]).forEach((Ie, Pe) => {
                    const ve = i.Phrasebook[_e][Ie];
                    ve.pronunciations.hasOwnProperty(U) &&
                        ((ve.pronunciations[Q] = ve.pronunciations[U]),
                        delete ve.pronunciations[U]),
                        ve.lects.includes(U) &&
                            (i.Phrasebook[_e][Ie].lects.splice(
                                ve.lects.indexOf(U),
                                1,
                            ),
                            i.Phrasebook[_e][Ie].lects.push(Q));
                });
            }),
            i.Orthographies.forEach((_e) => {
                _e.lect === U && (_e.lect = Q);
            }),
            ee(q, (i.Pronunciations[Q] = i.Pronunciations[U]), i),
            r.hasOwnProperty(U) && (ee(yn, (r[Q] = r[U]), r), delete r[U]),
            delete i.Pronunciations[U];
    }
    function A(U, Q) {
        i.Lects.splice(Q, 1),
            ee(q, (i.Lects = [...i.Lects]), i),
            delete i.Pronunciations[U],
            delete r[U],
            Object.keys(i.Lexicon).forEach((ge) => {
                i.Lexicon[ge].pronunciations[U] &&
                    delete i.Lexicon[ge].pronunciations[U],
                    i.Lexicon[ge].Senses.forEach((_e, Ie) => {
                        _e.lects.includes(U) &&
                            _e.lects.splice(_e.lects.indexOf(U), 1),
                            _e.lects || i.Lexicon[ge].Senses.splice(Ie, 1);
                    });
            }),
            Object.keys(i.Phrasebook).forEach((ge) => {
                Object.keys(i.Phrasebook[ge]).forEach((_e, Ie) => {
                    const Pe = i.Phrasebook[ge][_e];
                    if (
                        (Pe.pronunciations[U] && delete Pe.pronunciations[U],
                        Pe.lects.includes(U) &&
                            i.Phrasebook[ge][_e].lects.splice(
                                Pe.lects.indexOf(U),
                                1,
                            ),
                        !Pe.lects)
                    ) {
                        const { [_e]: ve, ...Me } = i.Phrasebook[ge];
                        ee(q, (i.Phrasebook[ge] = Me), i);
                    }
                });
            }),
            i.Orthographies.forEach((ge) => {
                ge.lect === U && (ge.lect = i.Lects[0]);
            }),
            ee(q, (i.Lexicon = { ...i.Lexicon }), i);
    }
    function $() {
        i.UseLects ||
            p.dialog.confirm({
                message: `Are you sure you want to disable lect features? Only the data for the lect "${i.Lects[0]}" will be kept.`,
                callback: (U) => {
                    if (U) {
                        let Q = i.Lects[0];
                        ee(q, (i.Lects = ['General']), i),
                            Object.keys(i.Lexicon).forEach((ge) => {
                                ee(
                                    q,
                                    (i.Lexicon[ge].Senses = i.Lexicon[
                                        ge
                                    ].Senses.filter((_e) =>
                                        _e.lects.includes(Q),
                                    )),
                                    i,
                                ),
                                    i.Lexicon[ge].Senses.forEach((_e) => {
                                        _e.lects = ['General'];
                                    }),
                                    i.Lexicon[ge].Senses ||
                                        delete i.Lexicon[ge],
                                    ee(
                                        q,
                                        (i.Lexicon[ge].pronunciations = {
                                            General:
                                                i.Lexicon[ge].pronunciations[Q],
                                        }),
                                        i,
                                    );
                            }),
                            ee(
                                q,
                                (i.Pronunciations = {
                                    General: i.Pronunciations[Q],
                                }),
                                i,
                            ),
                            ee(yn, (r = { General: r[Q] }), r);
                    } else ee(q, (i.UseLects = !0), i);
                },
            });
    }
    function K() {
        let U;
        const Q = (ge) => {
            Ps(
                {
                    title: 'Import Related Lexicon',
                    defaultPath: `${ge}${xt.sep}Lexicons${xt.sep}`,
                    properties: ['openFile'],
                },
                (_e) => {
                    _e &&
                        zt.readFile(_e[0], 'utf8', (Ie, Pe) => {
                            Ie &&
                                (console.log(Ie),
                                p.dialog.alert(
                                    'There was an issue loading your file. Please contact the developer.',
                                ));
                            try {
                                if (
                                    ((U = JSON.parse(Pe)),
                                    !String(U.Version).match(
                                        /^2\.[0-9]*\.[0-9]*$/,
                                    ))
                                ) {
                                    p.dialog.alert(`
                                    This file was saved with an old version of the app (~${U.Version})
                                    and is not compatible with the current version of Lexicanter. Please contact
                                    the developer; the file may be recoverable.
                                `);
                                    return;
                                }
                                const ve = (Me) => {
                                    for (const Je in U.Lexicon)
                                        !i.Lexicon[Je] &&
                                            (!i.Etymologies[Je] || Me) &&
                                            ee(
                                                q,
                                                (i.Etymologies[Je] = {
                                                    descendants: [],
                                                    source: U.Name,
                                                }),
                                                i,
                                            );
                                };
                                U.Name in i.Relatives ?
                                    p.dialog.confirm({
                                        message: `A relative lexicon with the name "${U.Name}" already exists. Would you like to overwrite it?`,
                                        callback: (Me) => {
                                            Me &&
                                                (ee(
                                                    q,
                                                    (i.Relatives[U.Name] =
                                                        U.Lexicon),
                                                    i,
                                                ),
                                                ve(!0));
                                        },
                                    })
                                :   (ee(
                                        q,
                                        (i.Relatives = {
                                            ...i.Relatives,
                                            [U.Name]: U.Lexicon,
                                        }),
                                        i,
                                    ),
                                    ve(!1));
                            } catch {
                                p.dialog.alert(
                                    'There was an issue loading the file. Please contact the developer.',
                                );
                                return;
                            }
                        });
                },
            );
        };
        No((ge) => {
            zt.existsSync(`${ge}${xt.sep}Lexicons${xt.sep}`) ?
                Q(ge)
            :   zt.mkdir(`${ge}${xt.sep}Lexicons${xt.sep}`, () => {
                    Pi(
                        `Created the 'Lexicons' folder in the user data folder at '${ge}'.`,
                    ),
                        Q(ge);
                });
        });
    }
    function W() {
        ee(q, (i.FileTheme = l), i);
    }
    function G() {
        ee(q, (i.FileTheme = 'default'), i);
    }
    function L() {
        w();
    }
    function D() {
        Object.keys(i.Lexicon).forEach((U) => {
            i.Lexicon[U].Senses.forEach((Q, ge) => {
                Q.tags.includes(b) &&
                    i.Lexicon[U].Senses[ge].tags.splice(Q.tags.indexOf(b), 1);
            });
        }),
            t(1, (b = ''));
    }
    function X() {
        p.dialog.prompt({
            message: 'New tag name:',
            callback: (U) => {
                U &&
                    (Object.keys(i.Lexicon).forEach((Q) => {
                        i.Lexicon[Q].Senses.forEach((ge, _e) => {
                            ge.tags.includes(b) &&
                                (i.Lexicon[Q].Senses[_e].tags.splice(
                                    ge.tags.indexOf(b),
                                    1,
                                ),
                                i.Lexicon[Q].Senses[_e].tags.push(U));
                        });
                    }),
                    t(1, (b = U)));
            },
        });
    }
    function te(U, Q) {
        if (i.Lects.length === 1) {
            p.dialog.alert('You cannot delete the last lect.');
            return;
        }
        p.dialog.confirm({
            message: `Are you sure you want to delete the lect "${U}"? This action cannot be undone.`,
            callback(ge) {
                ge && (A(U, Q), Fn.log(`Deleted lect: ${U}`));
            },
        });
    }
    function M(U, Q) {
        p.dialog.prompt({
            message: 'Edit Lect Name',
            placeholder: `${U}`,
            callback(ge) {
                if (ge === !1)
                    return Fn.log('User cancelled the Edit Lect Name dialog.');
                S(U, ge, Q), Fn.log(`Edited lect name: ${U} to ${ge}`);
            },
        });
    }
    function N(U) {
        p.dialog.confirm({
            message: `Add all words in the lexicon to the lect '${U}'?`,
            callback(Q) {
                if (Q) {
                    for (let ge in i.Lexicon)
                        i.Lexicon[ge].Senses.forEach((_e) => {
                            _e.lects.includes(U) || _e.lects.push(U);
                        });
                    Fn.log(`Added all words to lect: ${U}`),
                        p.dialog.alert(
                            `Added all senses of all words to the lect '${U}'.`,
                        );
                }
            },
        });
    }
    function F() {
        p.dialog.prompt({
            message: 'Add a New Lect',
            placeholder: `New ${i.Name} Lect`,
            callback(U) {
                if (U === !1)
                    return Fn.log('User cancelled the Add Lect dialog.');
                ee(q, (i.Lects = [...i.Lects, U]), i),
                    ee(q, (i.Pronunciations[U] = 'place > holder'), i),
                    ee(yn, (r[U] = en(s, U)), r),
                    Pi(`Added a new lect: ${U}`);
            },
        });
    }
    function V(U) {
        p.dialog.confirm({
            message: `Are you sure you want to delete "${U}"? This will remove any etymology connections its entries may have.`,
            callback(Q) {
                Q &&
                    (ee(
                        q,
                        (i.Etymologies = Object.fromEntries(
                            Object.entries(i.Etymologies).filter(
                                ([ge, _e]) => _e.source !== U,
                            ),
                        )),
                        i,
                    ),
                    delete i.Relatives[U],
                    Pi(`Deleted relative: ${U}`));
            },
        });
    }
    function ue() {
        (l = zn(this)), Ci.set(l);
    }
    function fe() {
        (a = this.checked), Ti.set(a);
    }
    function J() {
        (i.UploadToDatabase = this.checked), q.set(i);
    }
    function ae() {
        (E = this.value), t(4, E);
    }
    function I() {
        (_ = this.value), t(5, _);
    }
    const z = (U) => t(1, (b = U.detail ? U.detail.trim() : ''));
    function se() {
        (i.UseLects = this.checked), q.set(i);
    }
    const ze = (U, Q) => te(U, Q),
        Qe = (U, Q) => M(U, Q),
        ne = (U) => N(U);
    function me() {
        (i.ShowPronunciation = this.checked), q.set(i);
    }
    function Te() {
        (i.ShowEtymology = this.checked), q.set(i);
    }
    const we = () => {
            K();
        },
        pe = (U) => V(U);
    function Se() {
        (i.ShowInflection = this.checked), q.set(i);
    }
    function ye() {
        (i.ShowOrthography = this.checked), q.set(i);
    }
    function Ze(U, Q) {
        (U[Q].display = this.checked), q.set(i);
    }
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 268435456 && w(),
                o.$$.dirty[0] & 1 && t(6, (n = !i.UploadToDatabase));
        }),
        [
            i,
            b,
            m,
            k,
            E,
            _,
            n,
            l,
            a,
            c,
            h,
            B,
            O,
            P,
            H,
            T,
            $,
            K,
            W,
            G,
            L,
            D,
            X,
            te,
            M,
            N,
            F,
            V,
            u,
            ue,
            fe,
            J,
            ae,
            I,
            z,
            se,
            ze,
            Qe,
            ne,
            me,
            Te,
            we,
            pe,
            Se,
            ye,
            Ze,
        ]
    );
}
class fk extends Rt {
    constructor(e) {
        super(), Nt(this, e, pk, uk, Ct, {}, null, [-1, -1]);
    }
}
function Hd(o, e, t) {
    const n = o.slice();
    return (n[5] = e[t]), n;
}
function zd(o, e, t) {
    const n = o.slice();
    return (n[8] = e[t]), n;
}
function Ud(o) {
    let e,
        t,
        n = o[8] + '',
        i,
        s;
    return {
        c() {
            (e = Y('• ')),
                (t = new uu(!1)),
                (i = v()),
                (s = f('br')),
                (t.a = i);
        },
        m(r, l) {
            C(r, e, l), t.m(n, r, l), C(r, i, l), C(r, s, l);
        },
        p: Le,
        d(r) {
            r && (x(e), t.d(), x(i), x(s));
        },
    };
}
function jd(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l = he(o[0][o[5]].notes),
        a = [];
    for (let c = 0; c < l.length; c += 1) a[c] = Ud(zd(o, l, c));
    return {
        c() {
            (e = f('p')),
                (t = f('u')),
                (t.textContent = `${['Overhaul', 'Update', 'Patch', 'Pre-release'][o[0][o[5]].type]} ${o[5]}`),
                (n = v()),
                (i = f('p'));
            for (let c = 0; c < a.length; c += 1) a[c].c();
            (s = v()),
                (r = f('br')),
                Z(i, 'width', '70%'),
                Z(i, 'margin', 'auto'),
                Z(i, 'text-align', 'left'),
                Z(i, 'line-height', '1.6');
        },
        m(c, h) {
            C(c, e, h), d(e, t), C(c, n, h), C(c, i, h);
            for (let u = 0; u < a.length; u += 1) a[u] && a[u].m(i, null);
            C(c, s, h), C(c, r, h);
        },
        p(c, h) {
            if (h & 1) {
                l = he(c[0][c[5]].notes);
                let u;
                for (u = 0; u < l.length; u += 1) {
                    const p = zd(c, l, u);
                    a[u] ?
                        a[u].p(p, h)
                    :   ((a[u] = Ud(p)), a[u].c(), a[u].m(i, null));
                }
                for (; u < a.length; u += 1) a[u].d(1);
                a.length = l.length;
            }
        },
        d(c) {
            c && (x(e), x(n), x(i), x(s), x(r)), He(a, c);
        },
    };
}
function gk(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L = he(Object.keys(o[0])),
        D = [];
    for (let X = 0; X < L.length; X += 1) D[X] = jd(Hd(o, L, X));
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('div')),
                (i = f('p')),
                (i.innerHTML = `Interested in testing the beta versions, talking about languages, or worldbuilding? <br/>
                Join <a rel="noreferrer" target="_blank" href="https://discord.gg/uDk2XDhh8K">Saturn&#39;s Sojourn</a>, 
                the home of Lexicanter on <a rel="noreferrer" target="_blank" href="https://discord.gg/uDk2XDhh8K">Discord</a>!`),
                (s = v()),
                (r = f('br')),
                (l = v()),
                (a = f('p')),
                (a.innerHTML =
                    'Support the continued developement of the app as a <a rel="noreferrer" target="_blank" href="https://patreon.com/saturnine_softworks">patron</a>,'),
                (c = v()),
                (h = f('p')),
                (h.innerHTML =
                    'or by buying me a <a rel="noreferrer" target="_blank" href="https://ko-fi.com/saturnine_softworks">coffee</a>!'),
                (u = v()),
                (p = f('br')),
                (b = f('br')),
                (m = Y(`

            Below is a list of all changes made to the app since version 1.8, which is when the changelog was first added.`)),
                (k = f('br')),
                (y = Y(`
            If you're looking for more information about how to use the app, check the Help tab or visit the 
            `)),
                (w = f('a')),
                (w.textContent = 'Wiki'),
                (E = Y('.')),
                (_ = f('br')),
                (B = Y(` There is also
            an overview `)),
                (O = f('a')),
                (O.textContent = 'tutorial video'),
                (P = Y(` for release 2.0.
            `)),
                (H = f('br')),
                (T =
                    Y(` If you're still having trouble, or need to contact the developer, visit us in the 
            `)),
                (S = f('a')),
                (S.textContent = 'Discord server'),
                (A = Y(`. 
            
            `)),
                ($ = f('br')),
                (K = f('hr')),
                (W = f('br')),
                (G = v());
            for (let X = 0; X < D.length; X += 1) D[X].c();
            g(i, 'class', 'info'),
                g(a, 'class', 'info'),
                g(h, 'class', 'info'),
                g(w, 'rel', 'noreferrer'),
                g(w, 'target', '_blank'),
                g(
                    w,
                    'href',
                    'https://github.com/Saturnine-Softworks/Lexicanter/wiki',
                ),
                g(O, 'rel', 'noreferrer'),
                g(O, 'target', '_blank'),
                g(
                    O,
                    'href',
                    'https://www.youtube.com/watch?v=6_AwCC4XlvU&t=151s',
                ),
                g(S, 'rel', 'noreferrer'),
                g(S, 'target', '_blank'),
                g(S, 'href', 'https://discord.gg/uDk2XDhh8K'),
                g(n, 'class', 'container column scrolled'),
                Z(n, 'height', '90vh'),
                g(t, 'class', 'row'),
                Z(t, 'height', '95vh'),
                g(e, 'class', 'tab-pane');
        },
        m(X, te) {
            C(X, e, te),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(n, r),
                d(n, l),
                d(n, a),
                d(n, c),
                d(n, h),
                d(n, u),
                d(n, p),
                d(n, b),
                d(n, m),
                d(n, k),
                d(n, y),
                d(n, w),
                d(n, E),
                d(n, _),
                d(n, B),
                d(n, O),
                d(n, P),
                d(n, H),
                d(n, T),
                d(n, S),
                d(n, A),
                d(n, $),
                d(n, K),
                d(n, W),
                d(n, G);
            for (let M = 0; M < D.length; M += 1) D[M] && D[M].m(n, null);
        },
        p(X, [te]) {
            if (te & 1) {
                L = he(Object.keys(X[0]));
                let M;
                for (M = 0; M < L.length; M += 1) {
                    const N = Hd(X, L, M);
                    D[M] ?
                        D[M].p(N, te)
                    :   ((D[M] = jd(N)), D[M].c(), D[M].m(n, null));
                }
                for (; M < D.length; M += 1) D[M].d(1);
                D.length = L.length;
            }
        },
        i: Le,
        o: Le,
        d(X) {
            X && x(e), He(D, X);
        },
    };
}
function mk(o) {
    const [e, t, n, i] = [0, 1, 2, 3];
    return [
        {
            '2.2.1': {
                type: i,
                notes: [
                    'Lots of changes under the hood to make this thing work with Vite...and <i>hopefully</i> speed up my development cycle.',
                ],
            },
            '2.2.0': {
                type: i,
                notes: [
                    'Graphemy Integration: You can now use your Graphemy typesetter files as sources for an orthography.',
                ],
            },
            '2.1.19': {
                type: n,
                notes: [
                    'Fixed a bug with the lexicon description search which caused the exact match <code>!</code> and begins-word <code>^</code> functions not to work.',
                    'Fixed a bug causing the alphabetizer to soft crash the app if you used parentheses in your alphabet. Other RegEx-reserved characters will work now as well.',
                ],
            },
            '2.1.18': {
                type: n,
                notes: [
                    'Fixed problems with the search bars in the Phrasebook tab which made them virtually useless.',
                    'Fixed another case where documentations would not be initialized when loading a database synced file on multiple devices.',
                    'Changes to how the changelog in managed under the hood (yes, really).',
                ],
            },
            '2.1.17': {
                type: n,
                notes: [
                    'Fixed a bug with downloading lexicons on multiple devices and the documentation being left out.',
                ],
            },
            '2.1.16': {
                type: n,
                notes: [
                    'Fixed a bug that occurred with lexicon searching in some files, related to case-sensitivity.',
                ],
            },
            '2.1.15': {
                type: n,
                notes: [
                    'Fixed a reported bug which caused the search fields in the lexicon and phrasebook to find no matches in certain cases.',
                    'Changed the way that the app recognizes when changes have been made to the version of your file in the database.',
                    'A few quality of life features related to the previous change, including the ability to see the local and online file version numbers in Settings.',
                ],
            },
            '2.1.14': {
                type: n,
                notes: [
                    'Fixed a bug with the orthography pattern replacement features which caused it to only replace the first instance of a pattern in each word.',
                    'Added the ability to use ^ or # as word-end characters in the orthography pattern replacement fields.',
                    'Fixed a reported bug with the Illegals field of the Advanced Phonotactics word generator which caused that field not to save its contents.',
                    'Fixed a bug with database syncing which caused the setting to not save for files.',
                    'Files should now automatically detect when you have changes in the database on loading, and will prompt you to download the changes.',
                ],
            },
            '2.1.13': {
                type: n,
                notes: [
                    'Added an Illegals field to the Advanced Phonotactics word generator options.',
                    'Added the Structures inputs to the Advanced Phonotactics word generator options and the corresponding syllable category syntax for this feature.',
                    '(Finally) wrote the documentation on the word generator, which can be found in the Help tab.',
                ],
            },
            '2.1.12': {
                type: n,
                notes: [
                    'Added a new default text to the Pronunciations field in the Phonology tab to better guide beginners.',
                    'Added an indicator on entries in the lexicon tab to show if their pronunciation was manually edited and thus not automatically updated by pronunciation rules.',
                ],
            },
            '2.1.11': {
                type: n,
                notes: [
                    'Added secondary location file saving, for those of you who want your lexicon files to save to another location on your computer every time you save.',
                    'Added database syncing! Get your account credentials from the Lexicanter Discord bot, and then you can sync your files to the bot and between devices.',
                    'A minor change to how app settings are saved. The old app settings files are now deprecated and will eventually no longer be supported.',
                ],
            },
            '2.1.10': {
                type: n,
                notes: [
                    'New tooltips have been added throughout the app.',
                    "New All Hallow's Eve 2023 theme in the Holiday collection!",
                ],
            },
            '2.1.9': {
                type: n,
                notes: [
                    'Hot fix for a bug which caused data saved by the advanced word generator not to be loaded open re-opening a file.',
                    'A new feature will be coming in 2.2 which requires a change to the way lexicon entries are formatted internally, which this update prepares for.',
                ],
            },
            2.1: {
                type: t,
                notes: [
                    'Introduced a plain text import feature for convenient clonging on the move.',
                    'Added a reference window for loading secondary files in read-only mode.',
                    'Support for custom fonts via new Orthographies feature.',
                    'Under-the-hood file structure adjustments and read logic improvements.',
                    'New phonological evolution tools!',
                    'An alternative type of word generator for more advanced syllable structures.',
                    'The option to save theme preferences on a file-by-file basis.',
                    'New themes: Magnolia by Saturnine, Crabapple by Maarz, and Eostre 2023 (a holiday theme released for beta users earlier this year).',
                    'A number of bugs removed; probably some bugs added. Please report them if you find them!',
                ],
            },
            '2.0.18': {
                type: n,
                notes: [
                    'By request, added a new dropdown to Tag inputs which allows you to select from pre-existing tags in your lexicon.',
                    'By request, added a new Help tab. It hosts the same information as the wiki, but is accessible offline.',
                    'The Settings, Changelog, and Help tabs, as well as the window control buttons, now use Material Icons.',
                ],
            },
            '2.0.17': {
                type: n,
                notes: [
                    'Fixed a reported bug with the inflections generation.',
                    'Fixed an issue with tag searching.',
                    'The font weight has been changed to an appropriate Book weight to improve readability on some systems and to many eyes.',
                ],
            },
            '2.0.16': {
                type: n,
                notes: ['Fixed a small bug with the new sound change engine.'],
            },
            '2.0.15': {
                type: n,
                notes: [
                    'Fixed a reported bug with HTML export.',
                    'Related to the above fix, technical limitations now prevent your theme from being exported with your HTML. Solutions are being investigated.',
                ],
            },
            '2.0.14': {
                type: n,
                notes: [
                    'Fixed CSV export.',
                    'Fixed a reported bug with HTML export.',
                    'Fixed some reported and unreported issues with the sound change engine.',
                    "There is now a text input designated for specifying categories for sound changes in an inflection group, to make everyone's life easier.",
                    'Minor optimizations and performance improvements.',
                ],
            },
            '2.0.13': { type: n, notes: ['Linux support!'] },
            '2.0.12': {
                type: n,
                notes: [
                    'Fixed a reported bug which caused HTML export to fail. Expect expanded HTML export options in the future.',
                    'Minor optimizations.',
                ],
            },
            '2.0.11': {
                type: n,
                notes: [
                    'Fixed a reported bug which caused a semi-rare soft-crash in certain cases when dealing with multiple lects. Again.',
                ],
            },
            '2.0.10': {
                type: n,
                notes: [
                    'Fixed a reported bug which caused a semi-rare soft-crash in certain cases when dealing with multiple lects.',
                    'Fixed a reported bug which caused CSV import to fail, and improved CSV import options.',
                ],
            },
            '2.0.9': {
                type: n,
                notes: [
                    'You can now write multiple rules separated by a semicolon, which allows for multiple rules per table cell in the inflection tables.',
                    'Fixed a reported bug which caused a soft crash when attempting to edit the last word in the lexicon if it had an inflections dropdown open.',
                ],
            },
            '2.0': {
                type: e,
                notes: [
                    'There is now a new sound change engine under the hood. Your old rules may no longer work; for assistance, you can contact the developer.',
                    'Lexicon entries can now be separated into multiple Senses, each of which can have their own tags.',
                    'There are new features accessible via new Advanced Settings. These include:',
                    'New Lect features allow you to denote the ways your language may vary, particularly in semantics and pronunciation.',
                    'New Inflection features, which include a new tab, which allows you to create inflectional paradigms for your language.',
                    'New Etymology features, which include a new tab, allows you to create etymologies trees and view them in the lexicon.',
                    'Check out the new wiki page or tutorial video for more in-depth information!',
                    'New app icons by Lyiusa!',
                    'New themes: Juniper by Saturnine, and Midnight and Bone by Maarz!',
                ],
            },
            '1.11.4': {
                type: n,
                notes: [
                    'Fixed a reported bug causing markdown not to work in variant descriptions of phrases.',
                ],
            },
            '1.11.3': {
                type: n,
                notes: [
                    'Fixed a reported bug causing the alphabetizer pre-check to send false alerts when certain combining diacritics on certain characters were in the alphabet in certain orders.',
                ],
            },
            '1.11.2': {
                type: n,
                notes: [
                    'The app now saves backup versions of your files in case things go wrong.',
                    'Fixed a reported bug that caused the app to sometimes exit too quickly and not save when autosave was enabled.',
                ],
            },
            '1.11.1': {
                type: n,
                notes: [
                    'Fixed a reported bug causing the Ignore Diacritics setting to be ignored during alphabet checks when adding words to the lexicon.',
                ],
            },
            1.11: {
                type: t,
                notes: [
                    'When you attempt to add a word to the lexicon, there is now an alert if the word contains characters (or polygraphs) not present in your alphabet.',
                    'Fixed a reported bug causing external links to not display correctly in the Lexicon tab specifically.',
                    'Fixed a reported bug preventing the app from warning you that it will not save if there is no file name given.',
                    'Fixed a minor bug with the Terminal theme when exported for HTML.',
                ],
            },
            '1.10': {
                type: t,
                notes: [
                    'Added three new themes: Pomegranate, Wisteria, and Terminal.',
                    'The word entry panel in the Lexicon tab is now collapsible.',
                    'The Phrasebook now has active overwrite protection to prevent you from deleting your work by mistake.',
                    'You can now search for an exact whole-word match in definitions and tags fields by using ! as a prefix.',
                    'For HTML exports, the appearance on mobile devices has been improved.',
                    'Minor bug fixes for opening new windows from the File tab.',
                    "Lots of under-the-hood changes for the app's appearance in preparation for future features.",
                ],
            },
            '1.9.5': {
                type: n,
                notes: [
                    'Fixed a bug causing app-quit to be impossible sometimes.',
                    'Fixed some minor bugs with the styles.',
                    'Fixed a bug causing monospace toggle in the docs tab to be undoable.',
                    'Fixed a bug causing external hyperlinks not to use the preferred browser, and in some cases not open at all.',
                ],
            },
            '1.9.4': {
                type: n,
                notes: [
                    'You can now hyperlink to entries in the lexicon. The link format is lex::word.',
                    'The documentation tab would previously not adjust to the width of the window. That has been fixed.',
                ],
            },
            1.9: {
                type: t,
                notes: [
                    'Overhauled the Documentation tab, which now uses integrated EditorJS technology. Markdown is no longer supported in this tab, in favor of the new WYSIWYG style with a toolbar visible when you highlight text.',
                    'Note: The first time you load a file from an older version, there may be some formatting quirks. Most of these should sort themselves out after saving in the new version and re-loading. Please contact the developer if you run into persistent issues.',
                    'Fixed a bug with the Open New Window button which caused it to fail to open new windows.',
                    'The button to edit phrasebook entries has been changed to right-click instead of left-click to make it more difficult to accidentally overwrite work in progress, and to allow for highlighting text.',
                    'An HTML Docs-Only export option has been added.',
                ],
            },
            '1.8.14': {
                type: n,
                notes: [
                    'Fixed a few minor bugs with markdown parsing.',
                    'Added monospace markdown with ``this`` syntax.',
                    'Fixed a reported bug which affected the orthography testing area.',
                ],
            },
            1.8: {
                type: t,
                notes: [
                    'File storage has been migrated to make auto-save possible.',
                    'Categories can now be defined and used in your Pronunciations rules. See the docs page for more info.',
                    'Five new color themes: Light, Marine, Glade, Leatherbound, and Purple Maar (contributed by Maarz).',
                    'You can now load in your own custom CSS color themes.',
                    'Definitions, descriptions, and documentation sections now support simple markdown.',
                    "There's a new space in the Phonology tab to test your pronunciation rules.",
                    'Tag searches no longer require an exact match.',
                    'Several minor bug fixes, including one reported about tables being editable in the HTML export.',
                ],
            },
        },
    ];
}
class bk extends Rt {
    constructor(e) {
        super(), Nt(this, e, mk, gk, Ct, {});
    }
}
function $d(o, e, t) {
    const n = o.slice();
    return (n[14] = e[t]), (n[15] = e), (n[16] = t), n;
}
function Wd(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D;
    function X(...F) {
        return o[7](o[16], ...F);
    }
    function te() {
        o[8].call(m, o[15], o[16]);
    }
    function M() {
        o[9].call(P, o[15], o[16]);
    }
    function N() {
        return o[10](o[16]);
    }
    return {
        c() {
            (e = f('div')),
                (t = f('div')),
                (n = f('label')),
                (i = Y(`Tags
                            `)),
                (s = f('div')),
                (r = f('textarea')),
                (a = v()),
                (c = f('label')),
                (h = Y(`RegEx Filter
                            `)),
                (u = f('div')),
                (p = f('p')),
                (p.textContent = '/'),
                (b = v()),
                (m = f('input')),
                (k = v()),
                (y = f('p')),
                (y.textContent = '/'),
                (w = v()),
                (E = f('div')),
                (_ = f('label')),
                (B = Y(`Rule Categories
                            `)),
                (O = f('div')),
                (P = f('textarea')),
                (H = v()),
                (T = f('div')),
                (S = v()),
                (A = f('div')),
                ($ = f('button')),
                ($.textContent = 'Delete'),
                (K = v()),
                (W = f('br')),
                (G = f('br')),
                g(r, 'rows', '1'),
                (r.value = l = o[14].tags.join(' ')),
                Z(p, 'display', 'inline'),
                Z(m, 'display', 'inline'),
                g(m, 'type', 'text'),
                Z(y, 'display', 'inline'),
                g(t, 'class', 'column'),
                g(P, 'class', 'text-left'),
                g(P, 'rows', '3'),
                g(E, 'class', 'column'),
                g(e, 'class', 'row'),
                Z(e, 'width', '66%'),
                g(T, 'class', 'codex-editor'),
                g(T, 'id', `inflection ${o[16]}`),
                Z(T, 'font-family', 'Gentium'),
                g($, 'class', 'hover-highlight hover-shadow'),
                Z($, 'display', 'inline'),
                g(A, 'class', 'narrow');
        },
        m(F, V) {
            C(F, e, V),
                d(e, t),
                d(t, n),
                d(n, i),
                d(n, s),
                d(s, r),
                d(t, a),
                d(t, c),
                d(c, h),
                d(c, u),
                d(u, p),
                d(u, b),
                d(u, m),
                j(m, o[14].filter),
                d(u, k),
                d(u, y),
                d(e, w),
                d(e, E),
                d(E, _),
                d(_, B),
                d(_, O),
                d(O, P),
                j(P, o[14].categories),
                C(F, H, V),
                C(F, T, V),
                C(F, S, V),
                C(F, A, V),
                d(A, $),
                C(F, K, V),
                C(F, W, V),
                C(F, G, V),
                L ||
                    ((D = [
                        R(r, 'change', X),
                        R(m, 'input', te),
                        R(P, 'input', M),
                        R($, 'click', N),
                    ]),
                    (L = !0));
        },
        p(F, V) {
            (o = F),
                V & 1 && l !== (l = o[14].tags.join(' ')) && (r.value = l),
                V & 1 && m.value !== o[14].filter && j(m, o[14].filter),
                V & 1 && j(P, o[14].categories);
        },
        d(F) {
            F && (x(e), x(H), x(T), x(S), x(A), x(K), x(W), x(G)),
                (L = !1),
                ot(D);
        },
    };
}
function wk(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a = he(o[0].Inflections),
        c = [];
    for (let h = 0; h < a.length; h += 1) c[h] = Wd($d(o, a, h));
    return {
        c() {
            (e = f('div')), (t = f('div')), (n = f('div'));
            for (let h = 0; h < c.length; h += 1) c[h].c();
            (i = v()),
                (s = f('button')),
                (s.textContent = 'Add Inflections Group'),
                g(s, 'style', 'hover-highlight hover-shadow'),
                g(n, 'class', 'container column scrolled'),
                g(t, 'class', 'row'),
                Z(t, 'height', '92vh'),
                g(e, 'class', 'tab-pane'),
                g(e, 'spellcheck', 'false');
        },
        m(h, u) {
            C(h, e, u), d(e, t), d(t, n);
            for (let p = 0; p < c.length; p += 1) c[p] && c[p].m(n, null);
            d(n, i),
                d(n, s),
                r ||
                    ((l = [R(s, 'click', o[11]), R(n, 'mouseleave', o[5])]),
                    (r = !0));
        },
        p(h, [u]) {
            if (u & 47) {
                a = he(h[0].Inflections);
                let p;
                for (p = 0; p < a.length; p += 1) {
                    const b = $d(h, a, p);
                    c[p] ?
                        c[p].p(b, u)
                    :   ((c[p] = Wd(b)), c[p].c(), c[p].m(n, i));
                }
                for (; p < c.length; p += 1) c[p].d(1);
                c.length = a.length;
            }
        },
        i: Le,
        o: Le,
        d(h) {
            h && x(e), He(c, h), (r = !1), ot(l);
        },
    };
}
function yk(o, e, t) {
    let n, i;
    $e(o, q, (y) => t(0, (n = y))), $e(o, Os, (y) => t(6, (i = y)));
    const s = require('vex-js');
    function r(y, w) {
        const E = y.currentTarget;
        ee(q, (n.Inflections[w].tags = E.value.split(/\s+/g)), n);
    }
    function l(y) {
        for (let w = h.length; w > 0; w--) h[w - 1].destroy(), h.pop();
        n.Inflections.filter((w, E) => E !== y).forEach((w, E) => {
            const _ = {
                    holder: `inflection ${E}`,
                    data: w.tables,
                    tools: {
                        underline: hl,
                        monospace: Fo,
                        table: {
                            class: cl,
                            inlineToolbar: !0,
                            config: { rows: 3, cols: 3, withHeadings: !0 },
                        },
                        header: { class: al, inlineToolbar: !0 },
                    },
                    minHeight: 30,
                    logLevel: 'ERROR',
                },
                B = new gr(_);
            h.push(B);
        });
    }
    function a() {
        const y = {
                holder: `inflection ${n.Inflections.length - 1}`,
                data: {
                    blocks: [
                        {
                            type: 'header',
                            data: { text: 'New Inflections Group', level: 1 },
                        },
                        {
                            type: 'table',
                            data: {
                                withHeadings: !1,
                                content: [
                                    ['', '', ''],
                                    ['', '', ''],
                                    ['', '', ''],
                                ],
                            },
                        },
                        {
                            type: 'paragraph',
                            data: {
                                text: 'Table cells containing sound change rules will be used to generate inflected forms.                             Apply them to your words in your lexicon by providing the lexicon tags they apply to and an                             optional Regular Expression filter.',
                            },
                        },
                    ],
                },
                tools: {
                    underline: hl,
                    monospace: Fo,
                    table: {
                        class: cl,
                        inlineToolbar: !0,
                        config: { rows: 3, cols: 3, withHeadings: !0 },
                    },
                    header: { class: al, inlineToolbar: !0 },
                },
                minHeight: 30,
                logLevel: 'ERROR',
            },
            w = new gr(y);
        h.push(w);
    }
    async function c() {
        for (let y = 0; y < h.length; y++)
            h[y]
                .save()
                .then((w) => {
                    ee(q, (n.Inflections[y].tables = w), n);
                })
                .catch((w) => {
                    Fn.error(`Error while saving editor.
index: ${y}
object at i: ${h[y]}
editors.length: ${h.length}
message:
 ${String(w)}`);
                }),
                await h[y].isReady;
        return q.set(n), 'done';
    }
    let h = [];
    const u = (y, w) => r(w, y);
    function p(y, w) {
        (y[w].filter = this.value), q.set(n);
    }
    function b(y, w) {
        (y[w].categories = this.value), q.set(n);
    }
    const m = (y) => {
            s.dialog.confirm({
                message:
                    'Are you sure you want to delete this inflection group? This action is irreversible.',
                callback: (w) => {
                    w &&
                        (c(),
                        window.setTimeout(() => {
                            l(y),
                                ee(
                                    q,
                                    (n.Inflections = n.Inflections.filter(
                                        (E, _) => _ !== y,
                                    )),
                                    n,
                                );
                        }, 500));
                },
            });
        },
        k = () => {
            c().then(() => {
                ee(
                    q,
                    (n.Inflections = [
                        ...n.Inflections,
                        {
                            tags: [],
                            filter: '.+',
                            categories: '',
                            tables: {
                                blocks: [
                                    {
                                        type: 'header',
                                        data: {
                                            text: 'New Inflections Group',
                                            level: 1,
                                        },
                                    },
                                    {
                                        type: 'table',
                                        data: {
                                            withHeadings: !1,
                                            content: [
                                                ['', '', ''],
                                                ['', '', ''],
                                                ['', '', ''],
                                            ],
                                        },
                                    },
                                    {
                                        type: 'paragraph',
                                        data: {
                                            text: 'Table cells containing sound change rules will be used to generate inflected forms.                                             Apply them to your words in your lexicon by providing the lexicon tags they apply to and an                                             optional Regular Expression filter.',
                                        },
                                    },
                                ],
                            },
                        },
                    ]),
                    n,
                ),
                    a();
            });
        };
    return (
        (o.$$.update = () => {
            o.$$.dirty & 64 && l(1 / 0);
        }),
        [n, s, r, l, a, c, i, u, p, b, m, k]
    );
}
class vk extends Rt {
    constructor(e) {
        super(), Nt(this, e, yk, wk, Ct, {});
    }
}
function Gd(o, e, t) {
    const n = o.slice();
    return (n[28] = e[t]), n;
}
function qd(o, e, t) {
    const n = o.slice();
    return (n[28] = e[t]), (n[31] = e), (n[32] = t), n;
}
function Vd(o, e, t) {
    const n = o.slice();
    return (n[33] = e[t]), n;
}
function kk(o) {
    let e, t, n, i, s;
    function r() {
        o[10].call(e, o[32]);
    }
    return {
        c() {
            (e = f('select')),
                (t = f('option')),
                (t.textContent = 'Use an installed font'),
                (n = f('option')),
                (n.textContent = 'Use a Graphemy file'),
                (t.__value = 'font'),
                j(t, t.__value),
                (n.__value = 'graphemy'),
                j(n, n.__value),
                o[3].Orthographies[o[32]].typesetter === void 0 && Pt(r);
        },
        m(l, a) {
            C(l, e, a),
                d(e, t),
                d(e, n),
                Bt(e, o[3].Orthographies[o[32]].typesetter, !0),
                i || ((s = R(e, 'change', r)), (i = !0));
        },
        p(l, a) {
            (o = l), a[0] & 8 && Bt(e, o[3].Orthographies[o[32]].typesetter);
        },
        d(l) {
            l && x(e), (i = !1), s();
        },
    };
}
function _k(o) {
    let e;
    return {
        c() {
            (e = f('span')), (e.textContent = ': Packaged Font');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function xk(o) {
    let e, t, n, i, s;
    function r() {
        return o[12](o[32]);
    }
    function l() {
        o[13].call(n, o[31], o[32]);
    }
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Locate File'),
                (t = v()),
                (n = f('input')),
                g(n, 'type', 'text'),
                g(n, 'id', `graphemy-file-input${o[32]}`),
                (n.readOnly = !0);
        },
        m(a, c) {
            C(a, e, c),
                C(a, t, c),
                C(a, n, c),
                j(n, o[28].font),
                i || ((s = [R(e, 'click', r), R(n, 'input', l)]), (i = !0));
        },
        p(a, c) {
            (o = a), c[0] & 8 && n.value !== o[28].font && j(n, o[28].font);
        },
        d(a) {
            a && (x(e), x(t), x(n)), (i = !1), ot(s);
        },
    };
}
function Ck(o) {
    let e, t, n, i, s;
    function r(...l) {
        return o[11](o[32], ...l);
    }
    return {
        c() {
            (e = f('input')),
                g(e, 'type', 'text'),
                (e.value = t = o[28].font),
                (e.readOnly = n = o[28].name === 'Romanization'),
                Z(
                    e,
                    'background-color',
                    o[28].name === 'Romanization' ? 'transparent' : '',
                );
        },
        m(l, a) {
            C(l, e, a), i || ((s = R(e, 'blur', r)), (i = !0));
        },
        p(l, a) {
            (o = l),
                a[0] & 8 &&
                    t !== (t = o[28].font) &&
                    e.value !== t &&
                    (e.value = t),
                a[0] & 8 &&
                    n !== (n = o[28].name === 'Romanization') &&
                    (e.readOnly = n),
                a[0] & 8 &&
                    Z(
                        e,
                        'background-color',
                        o[28].name === 'Romanization' ? 'transparent' : '',
                    );
        },
        d(l) {
            l && x(e), (i = !1), s();
        },
    };
}
function Ek(o) {
    let e, t, n, i, s;
    function r() {
        o[14].call(e, o[31], o[32]);
    }
    return {
        c() {
            (e = f('select')),
                (t = f('option')),
                (t.textContent = 'Base from pronunciation'),
                (n = f('option')),
                (n.textContent = 'Base from romanization'),
                (t.__value = 'ipa'),
                j(t, t.__value),
                (n.__value = 'rom'),
                j(n, n.__value),
                o[28].root === void 0 && Pt(r);
        },
        m(l, a) {
            C(l, e, a),
                d(e, t),
                d(e, n),
                Bt(e, o[28].root, !0),
                i || ((s = R(e, 'change', r)), (i = !0));
        },
        p(l, a) {
            (o = l), a[0] & 8 && Bt(e, o[28].root);
        },
        d(l) {
            l && x(e), (i = !1), s();
        },
    };
}
function Tk(o) {
    let e;
    return {
        c() {
            (e = f('span')), (e.textContent = ': Base input');
        },
        m(t, n) {
            C(t, e, n);
        },
        p: Le,
        d(t) {
            t && x(e);
        },
    };
}
function Yd(o) {
    let e,
        t,
        n,
        i,
        s,
        r = he(o[3].Lects),
        l = [];
    for (let c = 0; c < r.length; c += 1) l[c] = Kd(Vd(o, r, c));
    function a() {
        o[15].call(n, o[31], o[32]);
    }
    return {
        c() {
            (e = f('label')),
                (t = Y(`Lect
                        `)),
                (n = f('select'));
            for (let c = 0; c < l.length; c += 1) l[c].c();
            o[28].lect === void 0 && Pt(a);
        },
        m(c, h) {
            C(c, e, h), d(e, t), d(e, n);
            for (let u = 0; u < l.length; u += 1) l[u] && l[u].m(n, null);
            Bt(n, o[28].lect, !0), i || ((s = R(n, 'change', a)), (i = !0));
        },
        p(c, h) {
            if (((o = c), h[0] & 8)) {
                r = he(o[3].Lects);
                let u;
                for (u = 0; u < r.length; u += 1) {
                    const p = Vd(o, r, u);
                    l[u] ?
                        l[u].p(p, h)
                    :   ((l[u] = Kd(p)), l[u].c(), l[u].m(n, null));
                }
                for (; u < l.length; u += 1) l[u].d(1);
                l.length = r.length;
            }
            h[0] & 8 && Bt(n, o[28].lect);
        },
        d(c) {
            c && x(e), He(l, c), (i = !1), s();
        },
    };
}
function Kd(o) {
    let e,
        t = o[33] + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[33]),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 8 && t !== (t = s[33] + '') && Ee(n, t),
                r[0] & 8 &&
                    i !== (i = s[33]) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Xd(o) {
    let e, t, n;
    function i() {
        return o[17](o[32]);
    }
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Delete'),
                g(e, 'class', 'hover-highlight hover-shadow');
        },
        m(s, r) {
            C(s, e, r), t || ((n = R(e, 'click', i)), (t = !0));
        },
        p(s, r) {
            o = s;
        },
        d(s) {
            s && x(e), (t = !1), n();
        },
    };
}
function Zd(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A;
    function $(...fe) {
        return o[9](o[32], ...fe);
    }
    function K(fe, J) {
        return fe[28].name === 'Romanization' ? _k : kk;
    }
    let W = K(o),
        G = W(o);
    function L(fe, J) {
        if (fe[28].typesetter === 'font') return Ck;
        if (fe[28].typesetter === 'graphemy') return xk;
    }
    let D = L(o),
        X = D && D(o);
    function te(fe, J) {
        return fe[28].name === 'Romanization' ? Tk : Ek;
    }
    let M = te(o),
        N = M(o),
        F = o[3].UseLects && o[28].root === 'ipa' && Yd(o);
    function V(...fe) {
        return o[16](o[32], ...fe);
    }
    let ue = o[28].name !== 'Romanization' && Xd(o);
    return {
        c() {
            (e = f('label')),
                (t = Y(`Name
                    `)),
                (n = f('input')),
                (r = v()),
                (l = f('label')),
                (a = Y(`Typesetter
                    `)),
                G.c(),
                (c = v()),
                X && X.c(),
                (h = v()),
                (u = f('label')),
                (p = Y(`Root
                    `)),
                N.c(),
                (b = v()),
                F && F.c(),
                (m = v()),
                (k = f('br')),
                (y = v()),
                (w = f('label')),
                (E = Y(`Conversion Rules
                    `)),
                (_ = f('textarea')),
                (H = v()),
                ue && ue.c(),
                (T = yt()),
                g(n, 'type', 'text'),
                (n.value = i = o[28].name),
                (n.readOnly = s = o[28].name === 'Romanization'),
                Z(
                    n,
                    'background-color',
                    o[28].name === 'Romanization' ? 'transparent' : '',
                ),
                g(_, 'rows', '3'),
                g(
                    _,
                    'class',
                    (B =
                        o[28].name === 'Romanization' ?
                            'text-center'
                        :   'text-left'),
                ),
                (_.value = O = o[28].rules),
                (_.readOnly = P = o[28].name === 'Romanization'),
                Z(
                    _,
                    'background-color',
                    o[28].name === 'Romanization' ? 'transparent' : '',
                );
        },
        m(fe, J) {
            C(fe, e, J),
                d(e, t),
                d(e, n),
                C(fe, r, J),
                C(fe, l, J),
                d(l, a),
                G.m(l, null),
                C(fe, c, J),
                X && X.m(fe, J),
                C(fe, h, J),
                C(fe, u, J),
                d(u, p),
                N.m(u, null),
                C(fe, b, J),
                F && F.m(fe, J),
                C(fe, m, J),
                C(fe, k, J),
                C(fe, y, J),
                C(fe, w, J),
                d(w, E),
                d(w, _),
                C(fe, H, J),
                ue && ue.m(fe, J),
                C(fe, T, J),
                S || ((A = [R(n, 'blur', $), R(_, 'blur', V)]), (S = !0));
        },
        p(fe, J) {
            (o = fe),
                J[0] & 8 &&
                    i !== (i = o[28].name) &&
                    n.value !== i &&
                    (n.value = i),
                J[0] & 8 &&
                    s !== (s = o[28].name === 'Romanization') &&
                    (n.readOnly = s),
                J[0] & 8 &&
                    Z(
                        n,
                        'background-color',
                        o[28].name === 'Romanization' ? 'transparent' : '',
                    ),
                W === (W = K(o)) && G ?
                    G.p(o, J)
                :   (G.d(1), (G = W(o)), G && (G.c(), G.m(l, null))),
                D === (D = L(o)) && X ?
                    X.p(o, J)
                :   (X && X.d(1),
                    (X = D && D(o)),
                    X && (X.c(), X.m(h.parentNode, h))),
                M === (M = te(o)) && N ?
                    N.p(o, J)
                :   (N.d(1), (N = M(o)), N && (N.c(), N.m(u, null))),
                o[3].UseLects && o[28].root === 'ipa' ?
                    F ? F.p(o, J)
                    :   ((F = Yd(o)), F.c(), F.m(m.parentNode, m))
                :   F && (F.d(1), (F = null)),
                J[0] & 8 &&
                    B !==
                        (B =
                            o[28].name === 'Romanization' ?
                                'text-center'
                            :   'text-left') &&
                    g(_, 'class', B),
                J[0] & 8 && O !== (O = o[28].rules) && (_.value = O),
                J[0] & 8 &&
                    P !== (P = o[28].name === 'Romanization') &&
                    (_.readOnly = P),
                J[0] & 8 &&
                    Z(
                        _,
                        'background-color',
                        o[28].name === 'Romanization' ? 'transparent' : '',
                    ),
                o[28].name !== 'Romanization' ?
                    ue ? ue.p(o, J)
                    :   ((ue = Xd(o)), ue.c(), ue.m(T.parentNode, T))
                :   ue && (ue.d(1), (ue = null));
        },
        d(fe) {
            fe &&
                (x(e),
                x(r),
                x(l),
                x(c),
                x(h),
                x(u),
                x(b),
                x(m),
                x(k),
                x(y),
                x(w),
                x(H),
                x(T)),
                G.d(),
                X && X.d(fe),
                N.d(),
                F && F.d(fe),
                ue && ue.d(fe),
                (S = !1),
                ot(A);
        },
    };
}
function Jd(o) {
    let e,
        t = o[28].name + '',
        n,
        i;
    return {
        c() {
            (e = f('option')),
                (n = Y(t)),
                (e.__value = i = o[28].name),
                j(e, e.__value);
        },
        m(s, r) {
            C(s, e, r), d(e, n);
        },
        p(s, r) {
            r[0] & 8 && t !== (t = s[28].name + '') && Ee(n, t),
                r[0] & 8 &&
                    i !== (i = s[28].name) &&
                    ((e.__value = i), j(e, e.__value));
        },
        d(s) {
            s && x(e);
        },
    };
}
function Sk(o) {
    let e, t;
    return {
        c() {
            (e = f('textarea')),
                g(e, 'rows', '6'),
                (e.value = t = o[22]()),
                (e.readOnly = !0),
                Z(e, 'background-color', 'transparent'),
                Z(
                    e,
                    'font-family',
                    o[3].Orthographies.find(o[23])?.font || 'Gentium',
                );
        },
        m(n, i) {
            C(n, e, i);
        },
        p(n, i) {
            i[0] & 11 && t !== (t = n[22]()) && (e.value = t),
                i[0] & 9 &&
                    Z(
                        e,
                        'font-family',
                        n[3].Orthographies.find(n[23])?.font || 'Gentium',
                    );
        },
        d(n) {
            n && x(e);
        },
    };
}
function Bk(o) {
    let e, t, n, i, s, r, l;
    return {
        c() {
            (e = f('button')),
                (e.textContent = 'Generate SVG'),
                (t = v()),
                (n = f('br')),
                (i = v()),
                (s = f('div'));
        },
        m(a, c) {
            C(a, e, c),
                C(a, t, c),
                C(a, n, c),
                C(a, i, c),
                C(a, s, c),
                (s.innerHTML = o[6]),
                r || ((l = R(e, 'click', o[21])), (r = !0));
        },
        p(a, c) {
            c[0] & 64 && (s.innerHTML = a[6]);
        },
        d(a) {
            a && (x(e), x(t), x(n), x(i), x(s)), (r = !1), l();
        },
    };
}
function Ik(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L,
        D,
        X,
        te = he(o[3].Orthographies),
        M = [];
    for (let J = 0; J < te.length; J += 1) M[J] = Zd(qd(o, te, J));
    let N = he(o[3].Orthographies),
        F = [];
    for (let J = 0; J < N.length; J += 1) F[J] = Jd(Gd(o, N, J));
    function V(J, ae) {
        return (
            ae[0] & 9 && (m = null),
            m == null &&
                (m = J[3].Orthographies.find(J[8])?.typesetter === 'graphemy'),
            m ? Bk : Sk
        );
    }
    let ue = V(o, [-1, -1]),
        fe = ue(o);
    return {
        c() {
            (e = f('div')), (t = f('div')), (n = f('div'));
            for (let J = 0; J < M.length; J += 1) M[J].c();
            (i = v()),
                (s = f('button')),
                (s.textContent = 'New Orthography'),
                (r = v()),
                (l = f('div')),
                (a = f('select'));
            for (let J = 0; J < F.length; J += 1) F[J].c();
            (c = v()),
                (h = f('label')),
                (u = Y(`Test Input
                `)),
                (p = f('textarea')),
                (b = v()),
                fe.c(),
                (k = v()),
                (y = f('br')),
                (w = v()),
                (E = f('br')),
                (_ = v()),
                (B = f('label')),
                (O = Y(`Change Orthography
                `)),
                (P = f('div')),
                (H = Y('Pattern: ')),
                (T = f('input')),
                (S = Y(`
                    Replacement: `)),
                (A = f('input')),
                ($ = v()),
                (K = f('button')),
                (K.textContent = 'Apply'),
                (W = v()),
                (G = f('span')),
                (L = Y(o[5])),
                g(s, 'class', 'hover-highlight hover-shadow'),
                g(n, 'class', 'column container scrolled'),
                Z(n, 'height', '92vh'),
                o[0] === void 0 && Pt(() => o[19].call(a)),
                g(p, 'rows', '6'),
                g(T, 'type', 'text'),
                g(A, 'type', 'text'),
                Z(G, 'color', 'red'),
                g(P, 'class', 'narrow'),
                g(l, 'class', 'column container scrolled'),
                Z(l, 'height', '92vh'),
                g(t, 'class', 'row'),
                Z(t, 'height', '100%'),
                g(e, 'class', 'tab-pane');
        },
        m(J, ae) {
            C(J, e, ae), d(e, t), d(t, n);
            for (let I = 0; I < M.length; I += 1) M[I] && M[I].m(n, null);
            d(n, i), d(n, s), d(t, r), d(t, l), d(l, a);
            for (let I = 0; I < F.length; I += 1) F[I] && F[I].m(a, null);
            Bt(a, o[0], !0),
                d(l, c),
                d(l, h),
                d(h, u),
                d(h, p),
                j(p, o[1]),
                d(h, b),
                fe.m(h, null),
                d(l, k),
                d(l, y),
                d(l, w),
                d(l, E),
                d(l, _),
                d(l, B),
                d(B, O),
                d(B, P),
                d(P, H),
                d(P, T),
                j(T, o[4].pattern),
                d(P, S),
                d(P, A),
                j(A, o[4].replacement),
                d(P, $),
                d(P, K),
                d(P, W),
                d(P, G),
                d(G, L),
                D ||
                    ((X = [
                        R(s, 'click', o[18]),
                        R(a, 'change', o[19]),
                        R(p, 'input', o[20]),
                        R(T, 'input', o[24]),
                        R(A, 'input', o[25]),
                        R(K, 'click', o[26]),
                    ]),
                    (D = !0));
        },
        p(J, ae) {
            if (ae[0] & 136) {
                te = he(J[3].Orthographies);
                let I;
                for (I = 0; I < te.length; I += 1) {
                    const z = qd(J, te, I);
                    M[I] ?
                        M[I].p(z, ae)
                    :   ((M[I] = Zd(z)), M[I].c(), M[I].m(n, i));
                }
                for (; I < M.length; I += 1) M[I].d(1);
                M.length = te.length;
            }
            if (ae[0] & 8) {
                N = he(J[3].Orthographies);
                let I;
                for (I = 0; I < N.length; I += 1) {
                    const z = Gd(J, N, I);
                    F[I] ?
                        F[I].p(z, ae)
                    :   ((F[I] = Jd(z)), F[I].c(), F[I].m(a, null));
                }
                for (; I < F.length; I += 1) F[I].d(1);
                F.length = N.length;
            }
            ae[0] & 9 && Bt(a, J[0]),
                ae[0] & 2 && j(p, J[1]),
                ue === (ue = V(J, ae)) && fe ?
                    fe.p(J, ae)
                :   (fe.d(1), (fe = ue(J)), fe && (fe.c(), fe.m(h, null))),
                ae[0] & 16 && T.value !== J[4].pattern && j(T, J[4].pattern),
                ae[0] & 16 &&
                    A.value !== J[4].replacement &&
                    j(A, J[4].replacement),
                ae[0] & 32 && Ee(L, J[5]);
        },
        i: Le,
        o: Le,
        d(J) {
            J && x(e), He(M, J), He(F, J), fe.d(), (D = !1), ot(X);
        },
    };
}
function Lk(o, e, t) {
    let n;
    $e(o, q, (L) => t(3, (n = L)));
    let i = '',
        s = '';
    const r = require('vex-js');
    let l = { pattern: '', replacement: '' },
        a = '',
        c = '',
        h = '';
    function u(L, D, X) {
        const te = L.target,
            M = te.value.trim();
        if (D === 'name') {
            if (
                [M, ...n.Orthographies.filter((N) => N.name === M)].length - 1 >
                1
            ) {
                r.dialog.alert('The name must be unique.'),
                    (te.value = `New Orthography ${X}`);
                return;
            }
            if (M === '') {
                r.dialog.alert('The name cannot be blank.'),
                    (te.value = `New Orthography ${X}`);
                return;
            }
        }
        ee(q, (n.Orthographies[X][D] = M), n);
    }
    const p = (L) => L.name === i,
        b = (L, D) => {
            u(D, 'name', L);
        };
    function m(L) {
        (n.Orthographies[L].typesetter = zn(this)), q.set(n);
    }
    const k = (L, D) => u(D, 'font', L),
        y = (L) => {
            Ps(
                { title: 'Select Graphemy File', properties: ['openFile'] },
                (D) => {
                    ee(q, (n.Orthographies[L].font = D[0]), n);
                },
            );
        };
    function w(L, D) {
        (L[D].font = this.value), q.set(n);
    }
    function E(L, D) {
        (L[D].root = zn(this)), q.set(n);
    }
    function _(L, D) {
        (L[D].lect = zn(this)), q.set(n);
    }
    const B = (L, D) => {
            u(D, 'rules', L);
        },
        O = (L) => {
            ee(
                q,
                (n.Orthographies = [
                    ...n.Orthographies.slice(0, L),
                    ...n.Orthographies.slice(L + 1),
                ]),
                n,
            );
        },
        P = () => {
            ee(
                q,
                (n.Orthographies = [
                    ...n.Orthographies,
                    {
                        name: `New Orthography ${n.Orthographies.length}`,
                        font: 'Gentium',
                        root: 'ipa',
                        lect: n.Lects[0],
                        rules: '',
                        display: !0,
                        typesetter: 'font',
                    },
                ]),
                n,
            );
        };
    function H() {
        (i = zn(this)), t(0, i);
    }
    function T() {
        (s = this.value), t(1, s);
    }
    const S = async () => {
            const L = n.Orthographies.find((D) => D.name === i);
            if (L) {
                const D = di(L.rules || ''),
                    X = Hi(D.rules, s, D.categories);
                t(2, (h = await pf(L.font || '', X, L.name)));
            }
        },
        A = () => {
            const L = di(
                n.Orthographies.find((D) => D.name === i)?.rules || '',
            );
            return Hi(L.rules, s, L.categories);
        },
        $ = (L) => L.name === i;
    function K() {
        (l.pattern = this.value), t(4, l);
    }
    function W() {
        (l.replacement = this.value), t(4, l);
    }
    const G = () => {
        for (let L in n.Lexicon)
            if (L.includes(l.pattern))
                try {
                    let D = '#' + L + '#',
                        X = l.pattern.replaceAll('^', '#');
                    (D = D.replaceAll(X, l.replacement)),
                        ee(q, (n.Lexicon[D] = n.Lexicon[L]), n),
                        delete n.Lexicon[L],
                        t(5, (a = 'Change applied successfully.'));
                } catch (D) {
                    console.log(D),
                        t(
                            5,
                            (a =
                                'An error occurred while applying the change. Please contact the developer for assistance and check the console.'),
                        );
                }
    };
    return (
        (o.$$.update = () => {
            o.$$.dirty[0] & 15 &&
                (async () =>
                    t(
                        6,
                        (c = uf(
                            await Cl(
                                s,
                                n.Orthographies.find((L) => L.name === i)
                                    ?.name ?? '',
                            ),
                        )),
                    ))();
        }),
        [
            i,
            s,
            h,
            n,
            l,
            a,
            c,
            u,
            p,
            b,
            m,
            k,
            y,
            w,
            E,
            _,
            B,
            O,
            P,
            H,
            T,
            S,
            A,
            $,
            K,
            W,
            G,
        ]
    );
}
class Ak extends Rt {
    constructor(e) {
        super(), Nt(this, e, Lk, Ik, Ct, {}, null, [-1, -1]);
    }
}
function Qd(o, e, t) {
    const n = o.slice();
    return (n[4] = e[t]), n;
}
function eu(o) {
    let e, t, n;
    function i() {
        return o[3](o[4]);
    }
    return {
        c() {
            (e = f('div')),
                (e.textContent = `${o[4]} `),
                g(e, 'class', 'lex-entry'),
                St(e, 'selected', o[4] === o[0]);
        },
        m(s, r) {
            C(s, e, r), t || ((n = R(e, 'mousedown', i)), (t = !0));
        },
        p(s, r) {
            (o = s), r & 5 && St(e, 'selected', o[4] === o[0]);
        },
        d(s) {
            s && x(e), (t = !1), n();
        },
    };
}
function Ok(o) {
    let e,
        t,
        n,
        i,
        s,
        r = Co(o[1][o[0]]) + '',
        l = he(o[2]),
        a = [];
    for (let c = 0; c < l.length; c += 1) a[c] = eu(Qd(o, l, c));
    return {
        c() {
            (e = f('div')), (t = f('div')), (n = f('div'));
            for (let c = 0; c < a.length; c += 1) a[c].c();
            (i = v()),
                (s = f('div')),
                g(n, 'class', 'column'),
                Z(n, 'max-width', '9vw'),
                g(s, 'class', 'column scrolled'),
                Z(s, 'height', '100%'),
                Z(s, 'text-align', 'left'),
                Z(s, 'margin', '3em'),
                Z(s, 'margin-top', '0em'),
                g(t, 'class', 'row'),
                Z(t, 'height', '100%'),
                g(e, 'class', 'tab-pane container'),
                Z(e, 'height', '92vh');
        },
        m(c, h) {
            C(c, e, h), d(e, t), d(t, n);
            for (let u = 0; u < a.length; u += 1) a[u] && a[u].m(n, null);
            d(t, i), d(t, s), (s.innerHTML = r);
        },
        p(c, [h]) {
            if (h & 5) {
                l = he(c[2]);
                let u;
                for (u = 0; u < l.length; u += 1) {
                    const p = Qd(c, l, u);
                    a[u] ?
                        a[u].p(p, h)
                    :   ((a[u] = eu(p)), a[u].c(), a[u].m(n, null));
                }
                for (; u < a.length; u += 1) a[u].d(1);
                a.length = l.length;
            }
            h & 1 && r !== (r = Co(c[1][c[0]]) + '') && (s.innerHTML = r);
        },
        i: Le,
        o: Le,
        d(c) {
            c && x(e), He(a, c);
        },
    };
}
function Mk(o, e, t) {
    const n = {
            Lexicon: `# The Lexicon Tab
When you first open Lexicanter, you’ll find yourself on the Lexicon tab. This is the place where you will be adding words to your lexicon. This tab is composed of three panels: the alphabet panel, the editor panel, and the lexicon panel itself.

## The Alphabet Panel
Under the tab navigation at the top of the app, you’ll see two checkboxes and the alphabet text input.
### Alphabet Settings
- Case Sensitivity will make letters case sensitive making the app alphabetize ‘A’ differently for ‘a’, for example.
- Ignore Diacritics is on by default and turning it off will make the app alphabetize ‘a’ separately from ‘â’.
### The Alphabet
The alphabet field is where you organize the alphabet of your conlang. This will determine the order of your words in the lexicon. Any letters or symbols you use in your words can be added here and will alphabetize the lexicon according to the order you write here. Each alphabetization token should be separated by a space: this way, it is possible to alphabetize multi-character tokens (ie 'sh') separately from single-character tokens and other multi-character tokens (ie 's', 'sz'). 

## Editor Panel
Below the Alphabet panel we have the Editor panel on the left, where you can add new words and edit existing words.
In the Editor panel, you’ll see three text boxes when using the default settings. There are some advanced settings which alter the appearance of this tab, which you can read about on other pages in this wiki. 
### New Word & Pronunciation
The text box under ‘New Word’ is where you type your new words. The intention is that you use your romanized orthography here, although technically this is not necessary. Under this text box is where the pronunciation will automatically fill in. Lexicanter automatically updates pronunciations in your lexicon based on rules you can specify in the Phonology tab. See [Pronunciation Rules](https://github.com/Saturnine-Softworks/Lexicanter/wiki/Pronunciation-Rules) to read up on how to write these. 
### Irregular Pronunciations
If the pronunciation is manually altered, it will not automatically update unless the word itself is edited, so keep this in mind when making manual changes.

### Definitions and Senses
The next text field is for the definition of the word. If the word has multiple definitions, you may write all of them in this first text box if you wish; however, Lexicanter offers a way you can format multiple definitions separately. By clicking the ‘Add Sense’ button, you can create another set of text boxes for another definition and its tags. 

### Tags
Tags are a useful way to organize and filter through the words in your lexicon, and they can also be utilized by advanced users for setting up automatic inflection tables. Each sense of a word is allowed to have its own set of tags. Tags are arbitrary space-separated terms which will appear above the sense definition in the lexicon, and can be searched by. One advantage to using multiple senses for separate definitions is that they can each have their own tags. 

## Lexicon Panel
### Adding and Editing Words
Clicking the ‘Add Word’ button will add your new word to the lexicon on the right.
If you attempt to add a word that already exists, you will be given the option to ‘overwrite’ or ‘append the definition’ to the existing word. To edit the word, right-click on it in the lexicon panel. 

### Searching
In the lexicon panel, there are three text boxes along the top. These are the lexicon’s search functions. You can search the lexicon for specific words, definitions, and tags. 

There are some special functions which can be applied to help find specific entries. The character \`^\` means *word boundary*. 
Searching for \`^an\` will only show results which *start* with 'an', and searching \`an^\` will only show results that *end* with 'an'. Just searching 'an' will show results which have 'an' anywhere in the word. 
In both the tags and definition searches, you can prefix your search with \`!\` to only show results which have your search term as a whole word. For example, searching for the tag \`culture\` will also show words tagged 'agriculture' and 'horticulture', but searching for \`!culture\` will only show words tagged 'culture'. 
`,
            Phrasebook: `# Phrasebook Tab
Lexicanter’s Phrasebook feature allows you to add phrases with all the features of the main Lexicon. When opening the Phrasebook tab, you’ll see three panels. At the left are the Categories where you can organize your phrases; to the right is where your phrases will be displayed depending on what category is selected; and at the bottom is where you can add and edit phrases.

When adding new phrases, it functions the same as the Lexicon tab. On the bottom left, when the phrase is added it will have pronunciation rules applied automatically. You can add the definition and tags to organize it even further. Under that is a fourth textbox to enter the category of the phrase. This can be a single or multi-word phrase. If you are already viewing the phrases in a category, this text box will be filled in for you.

On the right side of the phrase editor panel, you can add variants - or other versions - of the new phrase. You can add as many variants as needed.
The ‘Add Phrase’ button will add the new phrase, as well as the category if it is not already present.
On the top right panel, there are search functions just like in the Lexicon tab and can be used to search the Phrasebook.
`,
            Documenting: `# The Documentation Tab
When you first open the Documentation tab, you’ll notice that it is empty save for a single line of text and a \`+\` on the far right. This tab can be used to add details about your conlang using text and tables. When you click on the \`+\`, you’ll see three options: Text, Heading, and Table. Clicking any of these will create the corresponding block section.

## Tools for Documenting Your Language
### Headings
A heading will place your cursor and all you need to do is type. A large, bold font will be used by default. To the left of that new text, you’ll see a \`+\` and a new button with 6 dots. Clicking this will give you the option to fine tune that section of text. You can change the heading type, move it up or down and delete it entirely.

### Paragraphs and Formatting
Clicking the \`+\` again will give you the options for other sections to add, such as a paragraph section. Additionally, in any type of block, you can highlight text to apply a range of styles to it, such as italics, bolding, underlining, and hyperlinking. If you wish to have linebreaks within the same paragraph block, you can press Shift+Enter. Pressing Enter alone will make a create a new paragraph block.

### Tables
The last type of section to add is the table. When you first add it, there will be three rows and three columns. You can click the \`+\`’s just right and to the bottom of the table to add new rows or columns. Hovering over a specific table cell will bring up a button with 4 dots, which can be used to add rows above/below, columns to the left/right or to delete an entire row or column. For fine tuning the table, you have two different options along with the standard move up/down and delete: 'With headings' and 'Without headings'. By default, the table is set to 'Without headings'. Selecting 'With headings' will make the text in the top row of cells bold, and add a slightly thicker border to the bottom of that row.
To navigate rows and columns within the table, you can use the arrow keys to go left and right, the Enter key to go directly down, or simply click in the cell you want to edit.
`,
            'Pronunciation Rules':
                "# The Sound Change Engine\nLexicanter uses a custom-built sound change engine to allow you to configure automatic orthography to phonetic notation conversion.\n\nIf you're not familiar with sound change appliers, you might be lost here, and if you *are* familiar with sound change appliers, you might be wondering how such a thing is supposed to be used to convert your romanization to IPA. In any case, let's start from the beginning. \n\n## The Basics\n### Defining Rules\nLet's say you write the phoneme /θ/ as ⟨th⟩. To convert your *orthograph* ⟨th⟩ to *phonetic notation* /θ/, we can use a rule. \n```\nth > θ\n```\n### Using Contexts\nThis is straightforward enough. ⟨th⟩ becomes /θ/. But what if /θ/ only occurs before front-vowels, and everywhere else it's /tʰ/. How would we write a rule to accomodate for this? One way is to use a *context*. \n```\nth > θ / _e\nth > θ / _i\nth > tʰ\n```\n### Anonymous Categories\nNow we're telling it only to turn ⟨th⟩ into /θ/ if it comes before /e/ or /i/. But this is a little bulky; we can condense these rules. \n```\nth > θ / _{e, i}\nth > tʰ\n```\nThese two rules do the exact same thing as the last set, but now we're using an *anonymous category* `{e, i}` to mean 'either e or i'. \n### Named Categories\nBut let's say we have several rules which make use of the same anonymous category:\n```\nth > θ / _{e, i}\nth > tʰ\nc > s / _{e, i}\nc > k\ng > ʤ / _{e, i}\n```\nWe can avoid writing `{e, i}` a bunch of times by defining a *named category*. \n```\nE :: e, i\nth > θ / _E\nth > tʰ\nc > s / _E\nc > k\ng > ʤ / _E\n```\nThat's a little better. \n### Category Conversion\nBut several of these rules are very similar. There's something we can do about that:\n```\nE :: e, i\n{th, c, g} > {θ, s, ʤ} / _E\n{th, c} > {tʰ, k}\n```\nWe can create anonymous categories of equal length on both sides of the conversion in order to convert between them. We can also do this with named categories, if we prefer:\n```\nP :: th, c, g\nF :: θ, s, ʤ\nK :: tʰ, k, g\nE :: e, i\nP > F / _E\nP > K\n```\nThis takes up a few more lines, but now we can re-use these named categories in further rules should we need to. \n\n## Advanced Usage\nNow that we understand the basics, let's look at how Lexicanter's sound change engine can deal with common and important edge cases.\n\n### Alternate Rule Formats\nBefore we get into those, though, let's briefly talk about the rule format. On this page, I've been using the formats\n```\npattern > substitution\npattern > substitution / context\n```\nIn the first case, the implicit context is just `_`, or 'always'. \nBut many of you may be familiar with another standard sound change notation format:\n```\npattern/substitution/context\n```\nLexicanter accepts rules written this way as well. In fact, all of the following are valid and will be accepted:\n```\npattern>substitution\npattern / substitution\npattern/substitution / context\npattern  > substitution/context\n```\nThe rule parser ignores all spaces, and the implicit 'always' context shorthand can be done with either `>` or `/` rules.\n\n### Word Boundaries\nOften times, the pronunciation of a grapheme changes depending on whether or not it's at the beginning or end of a word. Lexicanter reserves two symbols for this purpose: `^` and `#`. Both of them have the exact same purpose, and which one you use is a matter of personal preference. I'll be using `^`. \n\nTurn ⟨e⟩ into /ə/ at the end of words:\n```\ne > ə / _^\n```\nTurn ⟨y⟩ to /ɪ/ at the beginning of words:\n```\ny > ɪ / ^_\n```\n\n### Exceptions\nSometimes a grapheme has a pronunciation in all except a specific case. \nFor example, this rule turns all ⟨x⟩ into /ks/ as long as they are preceded by anything except /e/ or /i/:\n```\nx > ks / {!e, i}_\n```\nNote that this does assume `{!e}` must be *some* character, just not the ones in the group. If you would like to make this rule also apply at word boundaries, you can write it as so:\n```\nx > ks / {^, {!e, i}}_\n```\nor write it as two rules:\n```\nx > ks / {e, i}_\nx > ks / ^_\n```\nThere are usually multiple ways to get things to happen. \n\n### Wildcards\nSometimes, you just need to specify *any character at all* must be in a certain position. For that, another character is reserved: `.`.\nThe following rules turns ⟨h⟩ to /ç/ when it comes before /u/ and two other character:\n```\nh > ç / _u..\n```\nOther times, you may need to specify that any number of certain characters can appear. Two more symbols are reserved: `*` for 0 or more and `+` for 1 or more. \nThe following rule turns ⟨y⟩ to /i/ when it comes before any number of optional /d/ and at least one /o/ before the end of a word:\n```\ny > i / _ d* o+ ^\n```\nThese two symbols can also be used with categories. Note that the spaces here will be ignored and are just for readability; the parser ignores all spaces.\n\n### Optional Members\nThere is also a way to specify that something is optional without necessarily being allowed to repeat indefinitely. The character `?` is reserved for this.\nThe following rule changes ⟨n⟩ to /ŋ/ before a single optional /g/ or /k/ followed by the end of the word. \n```\nn > ŋ / _ {g, k}? ^\n```\nAs you can see, this works with categories as well. \n\n### Reduplication\nIn rare cases, a grapheme or sequence of graphemes may always be pronounced multiple times. For these cases, we can use `_` in the substitution to represent the entire captured pattern.\nThis is also useful in some cases for auto-inflection rules. \nThe following rule turns /er/ into /erer/ wherever it comes in the middle of a word:\n```\ner > __ / ._.\n```\n\n### Prefixes & Suffixes\nWhen writing rules for auto-inflections, you may need to add prefixes and suffixes to a word. You can write such rules using an insertion format. (For these, `#` typically looks better than `^`). \nAdds a suffix:\n```\n/ate/._#\n```\nAdds a prefix:\n```\n/eta/#_.\n```\nAlternatively, you can replace the word boundary itself. Equivalent to the rules above:\n```\n# > ate / ._\n# > eta / _.\n```",
            'Word Generator': `# Generator Modes
The word generator in this app has two modes. The first is designed to be as straightforward as possible, while the second mode is more complex, but also much more powerful.

## Basic Phonotactics
There are fields for what consonants and clusters can go word-initially, medially, finally, as well as vowels and polyphthongs are available, and what sounds should never appear next to one another. The Trial Words field will try to autocomplete a word as you type based on those simple rules, and the Generate Words button will make around 24 fresh words. 

## Advanced Phonotactics
At the top of the word generator, there is a checkbox labelled Use Advanced Phonotactics. Checking it will switch the UI below it to an entirely different set-up (this does *not* delete any information you have in the default fields).

### Categories
The first of these new fields is the Categories field. Here, you can define groups of sounds as you wish. The format is as follows in this example:
\`\`\`
C:: m n p b t d k g f v l r th sh
V:: a e i o u ai au ei eu oi ou
\`\`\`
Note that each token is space-separated, unlike categories in the pronunciation rules (which are comma-separated). You can have multiple-character length tokens here. It's up to you whether to use IPA or your romanization/other orthography here.

### Syllables
The next field is for defining, as you might guess, syllables. There are two ways you can do this. The first way is to simply write out all the allowed syllables line by line, such as
\`\`\`
V
CV
ClV
CVC
ClVC
\`\`\`
Note that non-category symbols used here are interpreted literally (the \`l\`'s in the above example will actually just be \`l\`'s).

The second way is to define categories of syllables: this will be useful for the next step, so we'll try that out. 
\`\`\`
S:: V CV ClV
1:: o Co a Ca
2:: ete Cete Clete
\`\`\`

### Structures
Words in your language usually aren't actually allowed to freely follow generic phonotactic rules. You usually have some sort of morphological rules as well, such as all verbs having specific endings, nouns genders being marked, et cetera. Structures allow you to fully control how syllables are put together to form words. Let's start with a set for nouns that all end in \`o\` or \`a\`. 
\`\`\`
S1 SS1 SSS1
\`\`\`
That's it, for this simple example. All of the generated words will be 2 to 4 syllables and end in \`o\` or \`a\`. Let's now add a new set of structures by clicking the Add Set button and create a set for our verbs. 
\`\`\`
1S2 1SS2 1SSS2
\`\`\`
In this hypothetical language, all verbs start with a gendered prefix and end with \`-ete\`. Now we can generate that.

Let's say we only want to have one of these sets active at a time. You can click on the checkboxes next to each set to toggle them, and when you click the Generate Words button, only the structures in enabled sets will be selected from. If you create too many sets, the \`-\` button next to each one will delete it. You can't delete your last set, but if all of your structure sets are empty or disabled, the word generator will just construct 1-4 syllable words composed of random syllable types from your syllables field. 

### Illegals
If there are specific sounds that should never appear next to each other, this is the place to specify those.
\`\`\`
ji wu mn ou ao
\`\`\`
Again, space-separated tokens. 

Because it's possible to accidentally (or perhaps intentionally) ban *all* of your syllables this way, the app will only try to come up with a word that doesn't have any illegals in it 20 times. If it fails, it will show \`[ ∅ ]\`. If you see this show up when you try to generate words, it means that it tried and failed to generate a legal word 20 times.`,
            Lects: `# What is a 'Lect'? 
The term 'lect' refers agnostically to any kind of variation of a language that may be classified as a dialect, ethnolect, regiolect, cryptolect, idiolect, et cetera. Lexicanter offers a suite of features which make it easier to document your language's various lects, should you have any. 

## Adding, Removing, and Renaming
### Adding
Adding new lects can always be done safely, as adding a new lect does not change the contents of the lexicon. When you add a lect, you will be prompted to name it. Then its name will appear in a list under the other lect-related settings, with three buttons. One of these is for deleting the lect, one of these is for renaming the lect, and one of these has a special purpose: adding all words in your lexicon to this lect. This is a useful features if you create a new lect midway through developing your language which should have all or most of the existing words. 

### Renaming
Renaming lects can also always be done safely, as this does not actually change the contents of the lexicon aside from the name which appears next to options and information related to the changed lect.

### Removing
Removing lects *does not* delete the words which were assigned to that lect, but it *does* delete any pronunciations and the pronunciation rule set associated with that lect. You cannot delete the last remaining lect; there must always be at least one. Even when lect features are disabled, the app uses a lect named 'General' under the hood. 

## Phonetics & Semantics
### Lect-Specific Pronunciation Rules
This is likely the main reason you would want to use the lect features. Each lect can have it own set of pronunciation rules, which you can write by selecting the lect from the dropdown which appears over the Pronunciations text field in the Phonology tab. To learn more about writing pronunciation rules, see the [Pronunciation Rules](https://github.com/Saturnine-Softworks/Lexicanter/wiki/Pronunciation-Rules) page. 

### Lexicon and Phrasebook
In both of these tabs, a new set of checkboxes will appear in the entry editor panel. In the Lexicon, this set of checkboxes appears for every *sense* of a word; in the phrasebook, you have this option for each *phrase*.
Checking these boxes assigns that sense/phrase to that lect. A new pronunciation field will appear for each lect which is selected, and will be auto-filled using the pronunciation rules assigned to that lect. All of a word or phrase's pronunciations will appear beneath it in the lexicon/book. This way, you can include words and phrases which only appear in specific lects. 
`,
            Etymology: `# Creating Etymology Trees
When you enable Etymology Features under Advanced Settings, Lexicanter will reveal to you a new tab called *Etymology* and slightly change the appearance of entries in the lexicon. These features are a powerful and convenient way to document the lineages of your language's words. 

## The Etymology Tab
You'll be greeted by a small panel on the left with a search bar and two lists, labelled *Internal* and *External*. If this is your first time opening this tab, *External* is probably empty. We'll get back to that. 

*Internal* will be populated by a list of all of the words in your lexicon. If you click on one of these, you'll see the large panel on the left is updated. The word you clicked on will appear floating in the upper-middle of the panel, and its lexicon entry will appear slightly below. Further below, there are two columns, labelled *Ancestors* and *Descendants*, each with a checkbox labelled *Manual Entry*, unticked by default, and below that, a blank dropdown.

### Editing Ancestor and Descendant Tethers
When you click on either of those dropdowns, you'll be greeted with, once again, your entire lexicon. You should be able to use the keyboard to navigate this list, but since some lexicons can be massive and overwhelming, the search field at the top of the left-hand panel narrows down not only the list in that column, but also the lists you see in the dropdowns on this tab. 
After selecting a word from your lexicon, pressing the *Link* button will link the currently selected word to the ancestor/descendant word. As you add more ancestors and descendants, you'll see how the tree graph is drawn in this panel. 
To remove a word from another words ancestors/descendants, find it in the list which appears in the respective column and click the *Sever* button to sever the tie. 

### Manual Entry
In many cases, you'll need to link to a word which is not in your lexicon. It may be from an ancestor language, or even from an unrelated language. For these cases, you can enable *Manual Entry*. 
When Manual Entry is enabled, you will see two text fields instead of a dropdown. The first of these text fields is for the related word itself, and the other text field is for specifying the *source* – that is, what language the word comes from. 
When you create entries this way, they will appear in the *External* list in the left-hand panel. External words also appear in the drop-downs after they are created. 

### Removing Etymology Entries
When a word is selected, but it has no ancestor or descendant tethers, a button will appear that allows you to delete the entry altogether. 
For words in your lexicon, this will *not delete the word from your lexicon* - it will simply clear the space for its etymology data out of the file data. This has no permanent effect, as you can select the word from the list to create its etymology entry again, but it may help to put at ease those of you who are particularly conscious about your file sizes. 
For external entries, this *will delete* the entry altogether. This is how you can remove words from the *External* list in the left-hand panel. 

## Importing Related Lexicons
When Etymology features are enabled, another option will appear in the Advanced Settings section: a button which allows you to import related lexicons. Using this button, you can select another Lexicanter file to import a lexicon from. The entirety of the lexicon will be saved to your *External* etymology entries. You can manage the external lexicons in your file under Advanced Settings.

## Lexicon Appearance Changes
On every lexical entry which is part of an etymology tree, a short, simplified version of that word's ancestry will appear beneath its senses. This makes it easy to see a word's history at a glance when viewing your lexicon. 
`,
            Inflections: `# Inflection Features
Lexicanter offers a way to expand your lexical entries with inflection information automatically generated from sound change rules.
It's a useful feature for generating verb conjugation tables, noun declension tables, and the like. This feature must be enabled under
Advanced Settings.

## The Inflection Tab
When you first open this tab, there will be a single button which reads 'Add Inflection Group'.
When you click on this, an inflection group editor will be created. It has two text fields: the first is labelled 'Tags',
and the second is labelled 'RegEx Filter' and should be pre-populated with \`.+\`. Below that, there will be a block-based
editor similar to what is used in the Documentation tab.

### Tags
The tags you assign to an inflection group should correspond to tags that you use in the lexicon. For example, if this inflection
group is for verbs and you've marked verbs in the lexicon with the tag \`verb\`, you should put that tag here. The inflection group 
will only be applied to lexical entries with tags that match the inflection group's own tags. You can use multiple tags if you wish, 
and the inflection group will be applied to any entry that has at least one of those tags. 

### RegEx Filter
You can write a regular expression to filter which words the inflection group is applied to even further. If you're unfamiliar with regular 
expressions, you can read up on them [here](https://www.regular-expressions.info). Some basic patterns will be described here. 
As an example, let's say that, like in Spanish, your verbs end in -ar, -er, and -ir, and there is a different set of conjugations depending 
on which ending the verb has, but in the lexicon, each kind of verb has the same 'verb' tag. You can target your inflection group toward only 
-ar verbs by writing the following RegEx filter:
\`\`\`regex
^.+ar$
\`\`\`
Now this inflection group will only apply to words which have the 'verb' tag *and* end in -ar.

### Editor
You can write whatever you want in the editor. You have headings, paragraphs, tables, and document markup at your disposal. However, 
there is a key difference between this and the Documentation tab editor: the app will check through the table cells of all tables in your 
inflection group when it applies the inflection group to a word, and if the table cell has a sound change rule in it, it will replace the
contents of that cell with the word and apply the rule to it. So for example, if a table has a cell in it with the rule
\`\`\`
ar > o / _^
\`\`\`
Then in the lexicon tab, on the word *hablar*, that cell will be replaced with 'hablo'. Cells which do not have \`/\` or \`>\` in them are ignored. 
To learn more about writing sound change rules in Lexicanter, read the 
[Pronunciation Rules](https://github.com/Saturnine-Softworks/Lexicanter/wiki/Pronunciation-Rules) page. 

## In the Lexicon
After creating inflection groups, a dropdown labelled 'Inflections' will appear in the lexical entries underneath the senses to 
which that inflection group applies. 

## Agenda
Several improvements are planned for the Inflections features, including a way to specify irregulars and a UI-based way to filter 
words instead of requiring the user to manually write RegEx filters (although that will remain an option for advanced users). 
        `,
        },
        i = Object.keys(n);
    let s = i[0];
    return [s, n, i, (l) => t(0, (s = l))];
}
class Pk extends Rt {
    constructor(e) {
        super(), Nt(this, e, Mk, Ok, Ct, {});
    }
}
function tu(o, e, t) {
    const n = o.slice();
    return (n[14] = e[t]), (n[16] = t), n;
}
function nu(o, e, t) {
    const n = o.slice();
    return (n[14] = e[t]), (n[16] = t), n;
}
function ou(o) {
    let e,
        t = o[14] + '',
        n,
        i,
        s,
        r;
    function l() {
        return o[11](o[16]);
    }
    return {
        c() {
            (e = f('button')),
                (n = Y(t)),
                (i = v()),
                g(e, 'class', 'hover-highlight tab-button'),
                g(
                    e,
                    'style',
                    ['settings', 'history', 'help'].includes(o[14]) ?
                        'font-family: "Material Icons"; font-size: 1em; vertical-align: bottom; height: 1.8em;'
                    :   '',
                ),
                St(e, 'selected', o[4] === o[16]);
        },
        m(a, c) {
            C(a, e, c),
                d(e, n),
                d(e, i),
                s || ((r = R(e, 'click', l)), (s = !0));
        },
        p(a, c) {
            (o = a), c & 16 && St(e, 'selected', o[4] === o[16]);
        },
        d(a) {
            a && x(e), (s = !1), r();
        },
    };
}
function iu(o) {
    let e,
        t =
            ((o[14] !== 'Etymology' &&
                o[14] !== 'Inflection' &&
                o[14] !== 'Orthography') ||
                (o[14] === 'Etymology' && o[2].ShowEtymology) ||
                (o[14] === 'Inflection' && o[2].ShowInflection) ||
                (o[14] === 'Orthography' && o[2].ShowOrthography)) &&
            ou(o);
    return {
        c() {
            t && t.c(), (e = yt());
        },
        m(n, i) {
            t && t.m(n, i), C(n, e, i);
        },
        p(n, i) {
            (
                (n[14] !== 'Etymology' &&
                    n[14] !== 'Inflection' &&
                    n[14] !== 'Orthography') ||
                (n[14] === 'Etymology' && n[2].ShowEtymology) ||
                (n[14] === 'Inflection' && n[2].ShowInflection) ||
                (n[14] === 'Orthography' && n[2].ShowOrthography)
            ) ?
                t ? t.p(n, i)
                :   ((t = ou(n)), t.c(), t.m(e.parentNode, e))
            :   t && (t.d(1), (t = null));
        },
        d(n) {
            n && x(e), t && t.d(n);
        },
    };
}
function su(o) {
    let e, t, n, i;
    var s = o[14];
    function r(l, a) {
        return {};
    }
    return (
        s && (t = fa(s, r())),
        {
            c() {
                (e = f('div')),
                    t && qt(t.$$.fragment),
                    (n = v()),
                    St(e, 'collapsed', o[4] !== o[16]);
            },
            m(l, a) {
                C(l, e, a), t && jt(t, e, null), d(e, n), (i = !0);
            },
            p(l, a) {
                if (s !== (s = l[14])) {
                    if (t) {
                        Wt();
                        const c = t;
                        Oe(c.$$.fragment, 1, 0, () => {
                            $t(c, 1);
                        }),
                            Gt();
                    }
                    s ?
                        ((t = fa(s, r())),
                        qt(t.$$.fragment),
                        Ce(t.$$.fragment, 1),
                        jt(t, e, n))
                    :   (t = null);
                }
                (!i || a & 16) && St(e, 'collapsed', l[4] !== l[16]);
            },
            i(l) {
                i || (t && Ce(t.$$.fragment, l), (i = !0));
            },
            o(l) {
                t && Oe(t.$$.fragment, l), (i = !1);
            },
            d(l) {
                l && x(e), t && $t(t);
            },
        }
    );
}
function Nk(o) {
    let e,
        t,
        n,
        i,
        s,
        r,
        l,
        a,
        c,
        h,
        u,
        p,
        b,
        m,
        k,
        y,
        w,
        E,
        _,
        B,
        O,
        P,
        H,
        T,
        S,
        A,
        $,
        K,
        W,
        G,
        L = he(o[7]),
        D = [];
    for (let N = 0; N < L.length; N += 1) D[N] = iu(nu(o, L, N));
    let X = he(o[6]),
        te = [];
    for (let N = 0; N < X.length; N += 1) te[N] = su(tu(o, X, N));
    const M = (N) =>
        Oe(te[N], 1, 1, () => {
            te[N] = null;
        });
    return {
        c() {
            (e = f('link')),
                (n = v()),
                (i = f('link')),
                (s = v()),
                (r = f('body')),
                (l = f('div')),
                (a = f('div')),
                (c = f('div')),
                (h = f('p')),
                (u = f('button')),
                (u.textContent = 'close'),
                (p = v()),
                (b = f('button')),
                (b.textContent = 'remove'),
                (m = v()),
                (k = f('button')),
                (k.textContent = 'fullscreen'),
                (y = v()),
                (w = f('div')),
                (E = f('p')),
                (_ = Y('β')),
                (B = Y(o[0])),
                (O = Y('-')),
                (P = Y(o[1])),
                (H = Y(' —')),
                (T = v());
            for (let N = 0; N < D.length; N += 1) D[N].c();
            S = v();
            for (let N = 0; N < te.length; N += 1) te[N].c();
            (A = v()),
                ($ = f('div')),
                g(e, 'rel', 'stylesheet'),
                g(
                    e,
                    'href',
                    (t = o[2].FileTheme === 'default' ? o[3] : o[2].FileTheme),
                ),
                g(
                    i,
                    'href',
                    'https://fonts.googleapis.com/icon?family=Material+Icons',
                ),
                g(i, 'rel', 'stylesheet'),
                g(u, 'class', 'hover-highlight close material-icons'),
                g(b, 'class', 'hover-highlight minimize material-icons'),
                g(k, 'class', 'hover-highlight maximize material-icons'),
                g(h, 'class', 'window-control'),
                g(E, 'class', 'version-info'),
                g(w, 'class', 'button-container'),
                g(c, 'class', 'column'),
                Z(c, 'width', '100%'),
                g(a, 'class', 'row'),
                g(l, 'class', 'tab-container'),
                g(r, 'id', 'body'),
                g(r, 'spellcheck', 'false');
        },
        m(N, F) {
            C(N, e, F),
                C(N, n, F),
                C(N, i, F),
                C(N, s, F),
                C(N, r, F),
                d(r, l),
                d(l, a),
                d(a, c),
                d(c, h),
                d(h, u),
                d(h, p),
                d(h, b),
                d(h, m),
                d(h, k),
                d(c, y),
                d(c, w),
                d(w, E),
                d(E, _),
                d(E, B),
                d(E, O),
                d(E, P),
                d(E, H),
                d(w, T);
            for (let V = 0; V < D.length; V += 1) D[V] && D[V].m(w, null);
            d(c, S);
            for (let V = 0; V < te.length; V += 1) te[V] && te[V].m(c, null);
            C(N, A, F),
                C(N, $, F),
                (K = !0),
                W ||
                    ((G = [
                        R(u, 'click', o[8]),
                        R(b, 'click', o[9]),
                        R(k, 'click', o[10]),
                    ]),
                    (W = !0));
        },
        p(N, [F]) {
            if (
                ((!K ||
                    (F & 12 &&
                        t !==
                            (t =
                                N[2].FileTheme === 'default' ?
                                    N[3]
                                :   N[2].FileTheme))) &&
                    g(e, 'href', t),
                (!K || F & 1) && Ee(B, N[0]),
                (!K || F & 2) && Ee(P, N[1]),
                F & 148)
            ) {
                L = he(N[7]);
                let V;
                for (V = 0; V < L.length; V += 1) {
                    const ue = nu(N, L, V);
                    D[V] ?
                        D[V].p(ue, F)
                    :   ((D[V] = iu(ue)), D[V].c(), D[V].m(w, null));
                }
                for (; V < D.length; V += 1) D[V].d(1);
                D.length = L.length;
            }
            if (F & 80) {
                X = he(N[6]);
                let V;
                for (V = 0; V < X.length; V += 1) {
                    const ue = tu(N, X, V);
                    te[V] ?
                        (te[V].p(ue, F), Ce(te[V], 1))
                    :   ((te[V] = su(ue)),
                        te[V].c(),
                        Ce(te[V], 1),
                        te[V].m(c, null));
                }
                for (Wt(), V = X.length; V < te.length; V += 1) M(V);
                Gt();
            }
        },
        i(N) {
            if (!K) {
                for (let F = 0; F < X.length; F += 1) Ce(te[F]);
                K = !0;
            }
        },
        o(N) {
            te = te.filter(Boolean);
            for (let F = 0; F < te.length; F += 1) Oe(te[F]);
            K = !1;
        },
        d(N) {
            N && (x(e), x(n), x(i), x(s), x(r), x(A), x($)),
                He(D, N),
                He(te, N),
                (W = !1),
                ot(G);
        },
    };
}
function Rk(o, e, t) {
    let n, i, s, r;
    $e(o, Ti, (w) => t(13, (n = w))),
        $e(o, q, (w) => t(2, (i = w))),
        $e(o, Ci, (w) => t(3, (s = w))),
        $e(o, mr, (w) => t(4, (r = w)));
    const { ipcRenderer: l } = require('electron'),
        a = require('vex-js');
    a.registerPlugin(require('vex-dialog')),
        (a.defaultOptions.className = 'vex-theme-os');
    const c = [uv, Bv, $v, vk, Yv, Ak, Zv, hk, fk, bk, Pk],
        h = [
            'Lexicon',
            'Etymology',
            'Phrasebook',
            'Inflection',
            'Phonology',
            'Orthography',
            'Documentation',
            'File',
            'settings',
            'history',
            'help',
        ];
    l.on('app-close', (w) => {
        n ?
            (console.log('Autosaving before exit.'),
            Pi('Autosaving before exit.'),
            pi().then((E) => {
                window.setTimeout(() => l.send('close'), 1e3);
            }))
        :   window.confirm(
                'You may have unsaved changes. Are you sure you want to exit?',
            ) && l.send('close');
    });
    let u;
    l.invoke('getVersion').then((w) => t(0, (u = w)));
    let p;
    return (
        l.invoke('platform').then((w) => t(1, (p = w))),
        [
            u,
            p,
            i,
            s,
            r,
            l,
            c,
            h,
            () => l.send('buttonclose'),
            () => l.send('minimize'),
            () => l.send('maximize'),
            (w) => ee(mr, (r = w), r),
        ]
    );
}
class Dk extends Rt {
    constructor(e) {
        super(), Nt(this, e, Rk, Nk, Ct, {});
    }
}
new Dk({ target: document.body });
